{"version":3,"file":"bundle.js","sourceRoot":"","sources":["app/views/Nav.ts","app/views/MainView.ts","app/views/Entry.ts","app/app-component.ts","app/views/Footer.ts","app/model/DeviceTypes.ts","app/model/DeviceDisplayOffset.ts","app/model/DeviceModels.ts","app/model/Device.ts","app/model/UserDevice.ts","app/views/History.ts","app/services/DeviceService.ts","app/utils/HasDeviceTypesPipe.ts","app/views/DeviceAttributes.ts","app/views/DeviceDetails.ts","app/model/ConditionType.ts","app/views/GetPrice.ts","app/app.routes.ts","app/app-module.ts","app/main.ts","app/RemoteResource/DeviceResource.ts","app/model/Carrier.ts","public/lib/js/angular2-in-memory-web-api/src/http-status-codes.ts","public/lib/js/angular2-in-memory-web-api/src/in-memory-backend.service.ts","public/lib/js/angular2-in-memory-web-api/src/index.ts","public/lib/js/rxjs/src/util/isFunction.ts","public/lib/js/rxjs/src/Observer.ts","public/lib/js/rxjs/src/util/isArray.ts","public/lib/js/rxjs/src/util/isObject.ts","public/lib/js/rxjs/src/util/errorObject.ts","public/lib/js/rxjs/src/util/tryCatch.ts","public/lib/js/rxjs/src/util/UnsubscriptionError.ts","public/lib/js/rxjs/src/Subscription.ts","public/lib/js/rxjs/src/util/root.ts","public/lib/js/rxjs/src/symbol/rxSubscriber.ts","public/lib/js/rxjs/src/Subscriber.ts","public/lib/js/rxjs/src/Operator.ts","public/lib/js/rxjs/src/util/toSubscriber.ts","public/lib/js/rxjs/src/util/isPromise.ts","public/lib/js/rxjs/src/symbol/iterator.ts","public/lib/js/rxjs/src/OuterSubscriber.ts","public/lib/js/rxjs/src/InnerSubscriber.ts","public/lib/js/rxjs/src/symbol/observable.ts","public/lib/js/rxjs/src/util/subscribeToResult.ts","public/lib/js/rxjs/src/observable/IfObservable.ts","public/lib/js/rxjs/src/scheduler/Action.ts","public/lib/js/rxjs/src/Scheduler.ts","public/lib/js/rxjs/src/observable/ErrorObservable.ts","public/lib/js/rxjs/src/Observable.ts","public/lib/js/rxjs/src/util/ObjectUnsubscribedError.ts","public/lib/js/rxjs/src/SubjectSubscription.ts","public/lib/js/rxjs/src/Subject.ts","public/lib/js/rxjs/src/AsyncSubject.ts","public/lib/js/rxjs/src/BehaviorSubject.ts","public/lib/js/rxjs/src/operator/map.ts","public/lib/js/rxjs/src/observable/dom/AjaxObservable.ts","public/lib/js/rxjs/src/observable/dom/MiscJSDoc.ts","public/lib/js/rxjs/src/MiscJSDoc.ts","public/lib/js/rxjs/src/Notification.ts","public/lib/js/rxjs/src/scheduler/AsyncScheduler.ts","public/lib/js/rxjs/src/scheduler/AsyncAction.ts","public/lib/js/rxjs/src/scheduler/QueueScheduler.ts","public/lib/js/rxjs/src/scheduler/QueueAction.ts","public/lib/js/rxjs/src/scheduler/queue.ts","public/lib/js/rxjs/src/operator/observeOn.ts","public/lib/js/rxjs/src/ReplaySubject.ts","public/lib/js/rxjs/src/observable/BoundCallbackObservable.ts","public/lib/js/rxjs/src/observable/bindCallback.ts","public/lib/js/rxjs/src/add/observable/bindCallback.ts","public/lib/js/rxjs/src/observable/BoundNodeCallbackObservable.ts","public/lib/js/rxjs/src/observable/bindNodeCallback.ts","public/lib/js/rxjs/src/add/observable/bindNodeCallback.ts","public/lib/js/rxjs/src/util/isScheduler.ts","public/lib/js/rxjs/src/observable/ScalarObservable.ts","public/lib/js/rxjs/src/observable/EmptyObservable.ts","public/lib/js/rxjs/src/observable/ArrayObservable.ts","public/lib/js/rxjs/src/operator/combineLatest.ts","public/lib/js/rxjs/src/observable/combineLatest.ts","public/lib/js/rxjs/src/add/observable/combineLatest.ts","public/lib/js/rxjs/src/operator/mergeAll.ts","public/lib/js/rxjs/src/operator/concat.ts","public/lib/js/rxjs/src/observable/concat.ts","public/lib/js/rxjs/src/add/observable/concat.ts","public/lib/js/rxjs/src/observable/DeferObservable.ts","public/lib/js/rxjs/src/observable/defer.ts","public/lib/js/rxjs/src/add/observable/defer.ts","public/lib/js/rxjs/src/observable/empty.ts","public/lib/js/rxjs/src/add/observable/empty.ts","public/lib/js/rxjs/src/observable/ForkJoinObservable.ts","public/lib/js/rxjs/src/observable/forkJoin.ts","public/lib/js/rxjs/src/add/observable/forkJoin.ts","public/lib/js/rxjs/src/observable/PromiseObservable.ts","public/lib/js/rxjs/src/observable/IteratorObservable.ts","public/lib/js/rxjs/src/observable/ArrayLikeObservable.ts","public/lib/js/rxjs/src/observable/FromObservable.ts","public/lib/js/rxjs/src/observable/from.ts","public/lib/js/rxjs/src/add/observable/from.ts","public/lib/js/rxjs/src/observable/FromEventObservable.ts","public/lib/js/rxjs/src/observable/fromEvent.ts","public/lib/js/rxjs/src/add/observable/fromEvent.ts","public/lib/js/rxjs/src/observable/FromEventPatternObservable.ts","public/lib/js/rxjs/src/observable/fromEventPattern.ts","public/lib/js/rxjs/src/add/observable/fromEventPattern.ts","public/lib/js/rxjs/src/observable/fromPromise.ts","public/lib/js/rxjs/src/add/observable/fromPromise.ts","public/lib/js/rxjs/src/observable/GenerateObservable.ts","public/lib/js/rxjs/src/add/observable/generate.ts","public/lib/js/rxjs/src/observable/if.ts","public/lib/js/rxjs/src/add/observable/if.ts","public/lib/js/rxjs/src/util/isNumeric.ts","public/lib/js/rxjs/src/scheduler/async.ts","public/lib/js/rxjs/src/observable/IntervalObservable.ts","public/lib/js/rxjs/src/observable/interval.ts","public/lib/js/rxjs/src/add/observable/interval.ts","public/lib/js/rxjs/src/operator/merge.ts","public/lib/js/rxjs/src/observable/merge.ts","public/lib/js/rxjs/src/add/observable/merge.ts","public/lib/js/rxjs/src/operator/race.ts","public/lib/js/rxjs/src/add/observable/race.ts","public/lib/js/rxjs/src/util/noop.ts","public/lib/js/rxjs/src/observable/NeverObservable.ts","public/lib/js/rxjs/src/observable/never.ts","public/lib/js/rxjs/src/add/observable/never.ts","public/lib/js/rxjs/src/observable/of.ts","public/lib/js/rxjs/src/add/observable/of.ts","public/lib/js/rxjs/src/operator/onErrorResumeNext.ts","public/lib/js/rxjs/src/add/observable/onErrorResumeNext.ts","public/lib/js/rxjs/src/observable/PairsObservable.ts","public/lib/js/rxjs/src/observable/pairs.ts","public/lib/js/rxjs/src/add/observable/pairs.ts","public/lib/js/rxjs/src/observable/RangeObservable.ts","public/lib/js/rxjs/src/observable/range.ts","public/lib/js/rxjs/src/add/observable/range.ts","public/lib/js/rxjs/src/observable/UsingObservable.ts","public/lib/js/rxjs/src/observable/using.ts","public/lib/js/rxjs/src/add/observable/using.ts","public/lib/js/rxjs/src/observable/throw.ts","public/lib/js/rxjs/src/add/observable/throw.ts","public/lib/js/rxjs/src/util/isDate.ts","public/lib/js/rxjs/src/observable/TimerObservable.ts","public/lib/js/rxjs/src/observable/timer.ts","public/lib/js/rxjs/src/add/observable/timer.ts","public/lib/js/rxjs/src/operator/zip.ts","public/lib/js/rxjs/src/observable/zip.ts","public/lib/js/rxjs/src/add/observable/zip.ts","public/lib/js/rxjs/src/observable/dom/ajax.ts","public/lib/js/rxjs/src/add/observable/dom/ajax.ts","public/lib/js/rxjs/src/util/assign.ts","public/lib/js/rxjs/src/observable/dom/WebSocketSubject.ts","public/lib/js/rxjs/src/observable/dom/webSocket.ts","public/lib/js/rxjs/src/add/observable/dom/webSocket.ts","public/lib/js/rxjs/src/operator/buffer.ts","public/lib/js/rxjs/src/add/operator/buffer.ts","public/lib/js/rxjs/src/operator/bufferCount.ts","public/lib/js/rxjs/src/add/operator/bufferCount.ts","public/lib/js/rxjs/src/operator/bufferTime.ts","public/lib/js/rxjs/src/add/operator/bufferTime.ts","public/lib/js/rxjs/src/operator/bufferToggle.ts","public/lib/js/rxjs/src/add/operator/bufferToggle.ts","public/lib/js/rxjs/src/operator/bufferWhen.ts","public/lib/js/rxjs/src/add/operator/bufferWhen.ts","public/lib/js/rxjs/src/operator/cache.ts","public/lib/js/rxjs/src/add/operator/cache.ts","public/lib/js/rxjs/src/operator/catch.ts","public/lib/js/rxjs/src/add/operator/catch.ts","public/lib/js/rxjs/src/operator/combineAll.ts","public/lib/js/rxjs/src/add/operator/combineAll.ts","public/lib/js/rxjs/src/add/operator/combineLatest.ts","public/lib/js/rxjs/src/add/operator/concat.ts","public/lib/js/rxjs/src/operator/concatAll.ts","public/lib/js/rxjs/src/add/operator/concatAll.ts","public/lib/js/rxjs/src/operator/mergeMap.ts","public/lib/js/rxjs/src/operator/concatMap.ts","public/lib/js/rxjs/src/add/operator/concatMap.ts","public/lib/js/rxjs/src/operator/mergeMapTo.ts","public/lib/js/rxjs/src/operator/concatMapTo.ts","public/lib/js/rxjs/src/add/operator/concatMapTo.ts","public/lib/js/rxjs/src/operator/count.ts","public/lib/js/rxjs/src/add/operator/count.ts","public/lib/js/rxjs/src/operator/dematerialize.ts","public/lib/js/rxjs/src/add/operator/dematerialize.ts","public/lib/js/rxjs/src/operator/debounce.ts","public/lib/js/rxjs/src/add/operator/debounce.ts","public/lib/js/rxjs/src/operator/debounceTime.ts","public/lib/js/rxjs/src/add/operator/debounceTime.ts","public/lib/js/rxjs/src/operator/defaultIfEmpty.ts","public/lib/js/rxjs/src/add/operator/defaultIfEmpty.ts","public/lib/js/rxjs/src/operator/delay.ts","public/lib/js/rxjs/src/add/operator/delay.ts","public/lib/js/rxjs/src/operator/delayWhen.ts","public/lib/js/rxjs/src/add/operator/delayWhen.ts","public/lib/js/rxjs/src/operator/distinct.ts","public/lib/js/rxjs/src/add/operator/distinct.ts","public/lib/js/rxjs/src/operator/distinctKey.ts","public/lib/js/rxjs/src/add/operator/distinctKey.ts","public/lib/js/rxjs/src/operator/distinctUntilChanged.ts","public/lib/js/rxjs/src/add/operator/distinctUntilChanged.ts","public/lib/js/rxjs/src/operator/distinctUntilKeyChanged.ts","public/lib/js/rxjs/src/add/operator/distinctUntilKeyChanged.ts","public/lib/js/rxjs/src/operator/do.ts","public/lib/js/rxjs/src/add/operator/do.ts","public/lib/js/rxjs/src/operator/exhaust.ts","public/lib/js/rxjs/src/add/operator/exhaust.ts","public/lib/js/rxjs/src/operator/exhaustMap.ts","public/lib/js/rxjs/src/add/operator/exhaustMap.ts","public/lib/js/rxjs/src/operator/expand.ts","public/lib/js/rxjs/src/add/operator/expand.ts","public/lib/js/rxjs/src/util/ArgumentOutOfRangeError.ts","public/lib/js/rxjs/src/operator/elementAt.ts","public/lib/js/rxjs/src/add/operator/elementAt.ts","public/lib/js/rxjs/src/operator/filter.ts","public/lib/js/rxjs/src/add/operator/filter.ts","public/lib/js/rxjs/src/operator/finally.ts","public/lib/js/rxjs/src/add/operator/finally.ts","public/lib/js/rxjs/src/operator/find.ts","public/lib/js/rxjs/src/add/operator/find.ts","public/lib/js/rxjs/src/operator/findIndex.ts","public/lib/js/rxjs/src/add/operator/findIndex.ts","public/lib/js/rxjs/src/util/EmptyError.ts","public/lib/js/rxjs/src/operator/first.ts","public/lib/js/rxjs/src/add/operator/first.ts","public/lib/js/rxjs/src/util/MapPolyfill.ts","public/lib/js/rxjs/src/util/Map.ts","public/lib/js/rxjs/src/util/FastMap.ts","public/lib/js/rxjs/src/operator/groupBy.ts","public/lib/js/rxjs/src/add/operator/groupBy.ts","public/lib/js/rxjs/src/operator/ignoreElements.ts","public/lib/js/rxjs/src/add/operator/ignoreElements.ts","public/lib/js/rxjs/src/operator/isEmpty.ts","public/lib/js/rxjs/src/add/operator/isEmpty.ts","public/lib/js/rxjs/src/operator/audit.ts","public/lib/js/rxjs/src/add/operator/audit.ts","public/lib/js/rxjs/src/operator/auditTime.ts","public/lib/js/rxjs/src/add/operator/auditTime.ts","public/lib/js/rxjs/src/operator/last.ts","public/lib/js/rxjs/src/add/operator/last.ts","public/lib/js/rxjs/src/operator/let.ts","public/lib/js/rxjs/src/add/operator/let.ts","public/lib/js/rxjs/src/operator/every.ts","public/lib/js/rxjs/src/add/operator/every.ts","public/lib/js/rxjs/src/add/operator/map.ts","public/lib/js/rxjs/src/operator/mapTo.ts","public/lib/js/rxjs/src/add/operator/mapTo.ts","public/lib/js/rxjs/src/operator/materialize.ts","public/lib/js/rxjs/src/add/operator/materialize.ts","public/lib/js/rxjs/src/operator/reduce.ts","public/lib/js/rxjs/src/operator/max.ts","public/lib/js/rxjs/src/add/operator/max.ts","public/lib/js/rxjs/src/add/operator/merge.ts","public/lib/js/rxjs/src/add/operator/mergeAll.ts","public/lib/js/rxjs/src/add/operator/mergeMap.ts","public/lib/js/rxjs/src/add/operator/mergeMapTo.ts","public/lib/js/rxjs/src/operator/mergeScan.ts","public/lib/js/rxjs/src/add/operator/mergeScan.ts","public/lib/js/rxjs/src/operator/min.ts","public/lib/js/rxjs/src/add/operator/min.ts","public/lib/js/rxjs/src/observable/ConnectableObservable.ts","public/lib/js/rxjs/src/observable/MulticastObservable.ts","public/lib/js/rxjs/src/operator/multicast.ts","public/lib/js/rxjs/src/add/operator/multicast.ts","public/lib/js/rxjs/src/add/operator/observeOn.ts","public/lib/js/rxjs/src/add/operator/onErrorResumeNext.ts","public/lib/js/rxjs/src/operator/pairwise.ts","public/lib/js/rxjs/src/add/operator/pairwise.ts","public/lib/js/rxjs/src/util/not.ts","public/lib/js/rxjs/src/operator/partition.ts","public/lib/js/rxjs/src/add/operator/partition.ts","public/lib/js/rxjs/src/operator/pluck.ts","public/lib/js/rxjs/src/add/operator/pluck.ts","public/lib/js/rxjs/src/operator/publish.ts","public/lib/js/rxjs/src/add/operator/publish.ts","public/lib/js/rxjs/src/operator/publishBehavior.ts","public/lib/js/rxjs/src/add/operator/publishBehavior.ts","public/lib/js/rxjs/src/operator/publishReplay.ts","public/lib/js/rxjs/src/add/operator/publishReplay.ts","public/lib/js/rxjs/src/operator/publishLast.ts","public/lib/js/rxjs/src/add/operator/publishLast.ts","public/lib/js/rxjs/src/add/operator/race.ts","public/lib/js/rxjs/src/add/operator/reduce.ts","public/lib/js/rxjs/src/operator/repeat.ts","public/lib/js/rxjs/src/add/operator/repeat.ts","public/lib/js/rxjs/src/operator/repeatWhen.ts","public/lib/js/rxjs/src/add/operator/repeatWhen.ts","public/lib/js/rxjs/src/operator/retry.ts","public/lib/js/rxjs/src/add/operator/retry.ts","public/lib/js/rxjs/src/operator/retryWhen.ts","public/lib/js/rxjs/src/add/operator/retryWhen.ts","public/lib/js/rxjs/src/operator/sample.ts","public/lib/js/rxjs/src/add/operator/sample.ts","public/lib/js/rxjs/src/operator/sampleTime.ts","public/lib/js/rxjs/src/add/operator/sampleTime.ts","public/lib/js/rxjs/src/operator/scan.ts","public/lib/js/rxjs/src/add/operator/scan.ts","public/lib/js/rxjs/src/operator/sequenceEqual.ts","public/lib/js/rxjs/src/add/operator/sequenceEqual.ts","public/lib/js/rxjs/src/operator/share.ts","public/lib/js/rxjs/src/add/operator/share.ts","public/lib/js/rxjs/src/operator/single.ts","public/lib/js/rxjs/src/add/operator/single.ts","public/lib/js/rxjs/src/operator/skip.ts","public/lib/js/rxjs/src/add/operator/skip.ts","public/lib/js/rxjs/src/operator/skipUntil.ts","public/lib/js/rxjs/src/add/operator/skipUntil.ts","public/lib/js/rxjs/src/operator/skipWhile.ts","public/lib/js/rxjs/src/add/operator/skipWhile.ts","public/lib/js/rxjs/src/operator/startWith.ts","public/lib/js/rxjs/src/add/operator/startWith.ts","public/lib/js/rxjs/src/util/Immediate.ts","public/lib/js/rxjs/src/scheduler/AsapScheduler.ts","public/lib/js/rxjs/src/scheduler/AsapAction.ts","public/lib/js/rxjs/src/scheduler/asap.ts","public/lib/js/rxjs/src/observable/SubscribeOnObservable.ts","public/lib/js/rxjs/src/operator/subscribeOn.ts","public/lib/js/rxjs/src/add/operator/subscribeOn.ts","public/lib/js/rxjs/src/operator/switch.ts","public/lib/js/rxjs/src/add/operator/switch.ts","public/lib/js/rxjs/src/operator/switchMap.ts","public/lib/js/rxjs/src/add/operator/switchMap.ts","public/lib/js/rxjs/src/operator/switchMapTo.ts","public/lib/js/rxjs/src/add/operator/switchMapTo.ts","public/lib/js/rxjs/src/operator/take.ts","public/lib/js/rxjs/src/add/operator/take.ts","public/lib/js/rxjs/src/operator/takeLast.ts","public/lib/js/rxjs/src/add/operator/takeLast.ts","public/lib/js/rxjs/src/operator/takeUntil.ts","public/lib/js/rxjs/src/add/operator/takeUntil.ts","public/lib/js/rxjs/src/operator/takeWhile.ts","public/lib/js/rxjs/src/add/operator/takeWhile.ts","public/lib/js/rxjs/src/operator/throttle.ts","public/lib/js/rxjs/src/add/operator/throttle.ts","public/lib/js/rxjs/src/operator/throttleTime.ts","public/lib/js/rxjs/src/add/operator/throttleTime.ts","public/lib/js/rxjs/src/operator/timeInterval.ts","public/lib/js/rxjs/src/add/operator/timeInterval.ts","public/lib/js/rxjs/src/operator/timeout.ts","public/lib/js/rxjs/src/add/operator/timeout.ts","public/lib/js/rxjs/src/operator/timeoutWith.ts","public/lib/js/rxjs/src/add/operator/timeoutWith.ts","public/lib/js/rxjs/src/operator/timestamp.ts","public/lib/js/rxjs/src/add/operator/timestamp.ts","public/lib/js/rxjs/src/operator/toArray.ts","public/lib/js/rxjs/src/add/operator/toArray.ts","public/lib/js/rxjs/src/operator/toPromise.ts","public/lib/js/rxjs/src/add/operator/toPromise.ts","public/lib/js/rxjs/src/operator/window.ts","public/lib/js/rxjs/src/add/operator/window.ts","public/lib/js/rxjs/src/operator/windowCount.ts","public/lib/js/rxjs/src/add/operator/windowCount.ts","public/lib/js/rxjs/src/operator/windowTime.ts","public/lib/js/rxjs/src/add/operator/windowTime.ts","public/lib/js/rxjs/src/operator/windowToggle.ts","public/lib/js/rxjs/src/add/operator/windowToggle.ts","public/lib/js/rxjs/src/operator/windowWhen.ts","public/lib/js/rxjs/src/add/operator/windowWhen.ts","public/lib/js/rxjs/src/operator/withLatestFrom.ts","public/lib/js/rxjs/src/add/operator/withLatestFrom.ts","public/lib/js/rxjs/src/add/operator/zip.ts","public/lib/js/rxjs/src/operator/zipAll.ts","public/lib/js/rxjs/src/add/operator/zipAll.ts","public/lib/js/rxjs/src/testing/TestMessage.ts","public/lib/js/rxjs/src/testing/SubscriptionLog.ts","public/lib/js/rxjs/src/testing/SubscriptionLoggable.ts","public/lib/js/rxjs/src/util/applyMixins.ts","public/lib/js/rxjs/src/testing/ColdObservable.ts","public/lib/js/rxjs/src/testing/HotObservable.ts","public/lib/js/rxjs/src/scheduler/VirtualTimeScheduler.ts","public/lib/js/rxjs/src/testing/TestScheduler.ts","public/lib/js/rxjs/src/util/AnimationFrame.ts","public/lib/js/rxjs/src/scheduler/AnimationFrameScheduler.ts","public/lib/js/rxjs/src/scheduler/AnimationFrameAction.ts","public/lib/js/rxjs/src/scheduler/animationFrame.ts","public/lib/js/rxjs/src/Rx.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YA6BA;YAAoB,CAAC;YAxBrB;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;CAmBZ;iBACA,CAAC;;sBAAA;YAEF,2BAAqB,CAAA;;;;;;;;;;;;;;;YCLrB;gBAEI,IAAI;oBACD,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,8BAA8B,CAAC,CAAC;gBAC7E,CAAC;gBAED,GAAG;oBACC,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC;gBACzE,CAAC;YACL,CAAC;YA3BD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,WAAW;oBACjB,QAAQ,EAAE;;;;;;;;;;;;;mBAaC;iBAClB,CAAC;;wBAAA;YAEF,+BASC,CAAA;;;;ACjCD;;GAEG;;;;;;;;;;;;YAWH;YAAmB,CAAC;YALpB;gBAAC,gBAAS,CAAE;oBACR,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,2DAA2D;iBACxE,CAAC;;qBAAA;YAEF,yBAAoB,CAAA;;;;;;;;;;;;;;;YCFpB;YAA0B,CAAC;YAL3B;gBAAC,gBAAS,CAAE;oBACV,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,iCAAiC;iBAC5C,CAAC;;4BAAA;YAEF,uCAA2B,CAAA;;;;ACX3B;;GAEG;;;;;;;;;;;;YAcH;gBAII,YAAoB,QAAkB,EAAU,MAAsB;oBAAlD,aAAQ,GAAR,QAAQ,CAAU;oBAAU,WAAM,GAAN,MAAM,CAAgB;oBAF9D,WAAM,GAAW,KAAK,CAAC;oBAG3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBA4BI;oBACJ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACvB,CAAC;gBAEM,aAAa;oBAChB,EAAE,CAAA,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;wBAAC,MAAM,CAAC;oBACrC,UAAU,CAAC,MAAM,IAAI,CAAC,gBAAgB,EAAE,EAAE,GAAG,CAAC,CAAC;gBACnD,CAAC;gBAED,gBAAgB;oBACZ,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;oBACnC,IAAI,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;oBACxC,IAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,GAAG,YAAY,CAAC;oBAE1D,EAAE,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC;wBACxB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAA,2CAA2C,CAAC,CAAC;oBACpF,CAAC;oBACD,MAAM,CAAC;oBACP;;;;;yDAKqC;gBACzC,CAAC;gBAED,QAAQ;oBACJ,EAAE,CAAC,CAAC,oUAAoU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;2BAC3V,ykDAAykD,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpnD,MAAM,CAAC,IAAI,CAAC;oBAChB,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,IAAI;oBACA,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;gBAC9D,CAAC;gBACD,GAAG;oBACC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;gBACzD,CAAC;gBAED,kBAAkB;oBACd,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,CAAC;YACL,CAAC;YArFD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE;;;;OAIP;iBACN,CAAC;;sBAAA;YAEF,2BA4EC,CAAA;;;;;;;;;;;YCzFD,WAAY,WAAW;gBACnB,iDAAU,CAAA;gBACV,+CAAK,CAAA;gBACL,iDAAM,CAAA;YACV,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;kDAAA;;;;;;;;;;;YCJD;gBACI,YACW,CAAS,EACT,CAAS;oBADT,MAAC,GAAD,CAAC,CAAQ;oBACT,MAAC,GAAD,CAAC,CAAQ;gBAClB,CAAC;YACP,CAAC;YALD,qDAKC,CAAA;;;;ACRD;;GAEG;;;;;;;;YAEH,WAAY,aAAa;gBACrB,mDAAK,CAAA;gBACL,uDAAO,CAAA;gBACP,yDAAQ,CAAA;gBACR,+CAAG,CAAA;gBACH,mDAAK,CAAA;YACT,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;sDAAA;;;;;;;;;;;YCHD;gBACI,YACW,UAAU,EACV,WAA0B,EAC1B,SAAiB,EACjB,WAAmB,EACnB,UAA+B,EAC/B,IAAY,EACZ,KAAe;oBANf,eAAU,GAAV,UAAU,CAAA;oBACV,gBAAW,GAAX,WAAW,CAAe;oBAC1B,cAAS,GAAT,SAAS,CAAQ;oBACjB,gBAAW,GAAX,WAAW,CAAQ;oBACnB,eAAU,GAAV,UAAU,CAAqB;oBAC/B,SAAI,GAAJ,IAAI,CAAQ;oBACZ,UAAK,GAAL,KAAK,CAAU;gBACxB,CAAC;gBAEH,aAAa,CAAC,UAAuB;oBACjC,MAAM,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC,CAAA;gBAC3C,CAAC;YACL,CAAC;YAdD,2BAcC,CAAA;;;;;;;;;;;;;;;YChBD,yBAAgC,eAAM;gBAKlC;oBACI,MAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;YARD,oCAQC,CAAA;;;;ACbD;;GAEG;;;;;;;;;;;;;;;YAwBH;gBAGI,YAAoB,UAAsB;oBAAtB,eAAU,GAAV,UAAU,CAAY;oBAFlC,QAAG,GAAU,kBAAkB,CAAC;gBAIxC,CAAC;gBAED,QAAQ,CAAC,IAAY;oBACjB,EAAE,CAAA,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;wBAC3B,MAAM,CAAC,uCAAuC,CAAC;oBACnD,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,iCAAiC,GAAG,kCAAkC,CAAC;gBACpH,CAAC;YAIL,CAAC;YAlCD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE;;;;;;;;;;;;;;CAcb;iBACA,CAAC;;uBAAA;YAEF,8BAeC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;YC/BD;gBAII,YAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAFtB,eAAU,GAAa,EAAE,CAAC;oBAG9B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC;gBAED,UAAU;oBACN,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3B,CAAC;gBAED,WAAW;oBACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC;yBACnC,SAAS,CACN,IAAI;wBACA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;oBACzC,CAAC,EACD,GAAG;wBACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;oBACpB,CAAC,EACD,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAC5B,CAAA;gBACT,CAAC;gBACD,QAAQ,CAAC,CAAC;oBACN,IAAI,KAAK,CAAC;oBAEV,MAAM,CAAA,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,KAAK,4BAAa,CAAC,4BAAa,CAAC,KAAK,CAAC;4BACnC,KAAK,GAAG,4BAAa,CAAC,KAAK,CAAC;4BAC5B,KAAK,CAAC;wBACV,KAAK,4BAAa,CAAC,4BAAa,CAAC,OAAO,CAAC;4BACrC,KAAK,GAAG,4BAAa,CAAC,OAAO,CAAC;4BAC9B,KAAK,CAAC;oBACd,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,OAAO,CAAC,CAAC;oBACL,IAAI,IAAI,CAAC;oBAET,MAAM,CAAA,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClB,KAAK,yBAAW,CAAC,yBAAW,CAAC,KAAK,CAAC;4BAC/B,IAAI,GAAG,yBAAW,CAAC,KAAK,CAAC;4BACzB,KAAK,CAAC;wBACV,KAAK,yBAAW,CAAC,yBAAW,CAAC,MAAM,CAAC;4BAChC,IAAI,GAAG,yBAAW,CAAC,MAAM,CAAC;4BAC1B,KAAK,CAAC;wBACV,KAAK,yBAAW,CAAC,yBAAW,CAAC,MAAM,CAAC;4BAChC,IAAI,GAAG,yBAAW,CAAC,MAAM,CAAC;4BAC1B,KAAK,CAAC;oBACd,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAED,kBAAkB,CAAC,IAAc;oBAC7B,IAAI,CAAC,OAAO,CAAC,CAAC;wBACV,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;4BAChB,IAAI,SAAS,GAAU,IAAI,CAAC;4BAC5B,OAAM,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC;gCACjC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;4BAC3C,CAAC;4BACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,eAAM,CACN,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EACf,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAChB,IAAI,EACJ,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,GAAE,SAAS,GAAE,MAAM,CAAC,EACxC,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CACJ,CAAA;wBACL,CAAC,CACJ,CAAA;oBAED,CAAC,CAAC,CAAA;gBACN,CAAC;YACL,CAAC;YAjFD;gBAAC,iBAAU,EAAE;;6BAAA;YACb,0CAgFC,CAAA;;;;;;;;;;;;;;;YC/ED;gBACI,SAAS,CAAC,OAAiB,EAAE,UAAuB;oBAChD,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACrC,IAAI,CAAC,GAAW,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;4BAC9B,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;oBACL,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;YAdD;gBAAC,WAAI,CAAC;oBACF,IAAI,EAAE,eAAe;iBACxB,CAAC;;6BAAA;YAEF,0CAUC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YCuFD;gBASI,YAAoB,aAA4B,EAC5B,UAAsB,EACtB,MAAc;oBAFd,kBAAa,GAAb,aAAa,CAAe;oBAC5B,eAAU,GAAV,UAAU,CAAY;oBACtB,WAAM,GAAN,MAAM,CAAQ;oBAR1B,kBAAa,GAAa,EAAE,CAAC;oBASjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBACtD,CAAC;gBARD,QAAQ;oBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC7B,CAAC;gBAQD,IAAI,CAAC,KAAK;oBACN,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,EAAE,CAAA,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAE3B,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;oBAC3B,IAAI,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;oBAC3C,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC;oBAEpE,MAAM,CAAC,YAAY,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;gBACzC,CAAC;gBAED,GAAG,CAAC,KAAK;oBACL,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAE5B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;gBAChD,CAAC;gBAED,YAAY,CAAC,KAAK;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEjB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBACrC,CAAC;gBAED,kBAAkB,CAAC,KAAK;oBAEpB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,yBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CACnD,MAAM;wBACF,MAAM,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBAC5D,CAAC,CACJ,CAAA;oBAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC9C,CAAC;gBAED,YAAY;oBACR,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAE;wBAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;wBACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,mBAAmB,CAAC,MAAuB;oBACvC,IAAI,KAAK,GAAG,4BAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAEvC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;oBACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CACvC,MAAM;wBACF,MAAM,CAAC,MAAM,CAAC,WAAW,KAAK,KAAK,CAAA;oBACvC,CAAC,CACJ,CAAC;gBACN,CAAC;YAEL,CAAC;YAnKD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAoFK;iBAElB,CAAC;;wBAAA;YAEF,gCAyEC,CAAA;;;;;;;;;;;;;;;;;;;;;YC7ID;gBAQI,YAAoB,UAAsB,EACtB,MAAc,EACd,MAAsB;oBAFtB,eAAU,GAAV,UAAU,CAAY;oBACtB,WAAM,GAAN,MAAM,CAAQ;oBACd,WAAM,GAAN,MAAM,CAAgB;oBARlC,gBAAW,GAAa,EAAE,CAAC;oBAS/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;gBACnD,CAAC;gBARD,QAAQ;oBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC7B,CAAC;gBAQD,GAAG,CAAC,KAAK;gBAET,CAAC;gBAED,IAAI,CAAC,KAAK;gBAEV,CAAC;gBAED,YAAY,CAAC,KAAK;oBACd,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;oBACzC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC3C,CAAC;YAEL,CAAC;YAxDD;gBAAC,iBAAS,CAAC;oBACP,QAAQ,EAAE,gBAAgB;oBAE1B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;eAsBC;iBACd,CAAC;;6BAAA;YAEF,0CA4BC,CAAA;;;;;;;;;;;YCjED,WAAY,aAAa;gBACrB,iDAAQ,CAAA;gBACR,+CAAG,CAAA;gBACH,iDAAI,CAAA;YACR,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;uDAAA;;;;;;;;;;;;;;;;;;YC0ED;gBAQI,YAAoB,UAAsB;oBAAtB,eAAU,GAAV,UAAU,CAAY;oBANlC,kBAAa,GAAG,EAAE,CAAC;gBAQ3B,CAAC;gBAND,QAAQ;oBACL,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC5B,CAAC;gBAMD,IAAI,CAAC,KAAK;oBACN,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,EAAE,CAAA,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAE3B,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;oBAC3B,IAAI,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;oBAC3C,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC;oBAEpE,MAAM,CAAC,YAAY,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;gBACzC,CAAC;gBAED,GAAG,CAAC,KAAK;oBACL,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAE5B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;gBAChD,CAAC;gBAED,YAAY,CAAC,KAAK;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEjB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAED,YAAY;oBACR,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAE;wBAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;wBACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,gBAAgB,CAAC,MAAM;oBACnB,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC5C,CAAC;gBAED,gBAAgB;oBACZ,WAAW;oBACX,0DAA0D;oBAC1D,WAAW;oBACX,CAAC,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;gBACxF,CAAC;YACL,CAAC;YAjID;gBAAC,iBAAS,CAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAmEG;iBAChB,CAAC;;wBAAA;YAEF,gCAyDC,CAAA;;;;AC1ID;;GAEG;;;;;QASU,SAAS,EAQT,mBAAmB;;;;;;;;;;;;;;;;YARnB,wBAAA,SAAS,GAAW;gBAC7B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,aAAK,EAAE;gBAC9B,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2BAAQ,EAAC;gBACpC,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,6BAAa,EAAE,IAAI,EAAE,EAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAC,EAAC;gBACzE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,mBAAQ,EAAE,IAAI,EAAE,EAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAC,EAAC;aAEpE,CAAA,CAAC;YAEW,kCAAA,mBAAmB,GAAU,EAAE,CAAA,CAAC;;;;;;;;QCGzC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAN,MAAM,GAA8B;gBACpC,WAAW,EAAE;oBACT,EAAE,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC;oBACd,EAAE,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;oBACxB,EAAE,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC;oBACzB,EAAE,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC;oBAC1B,EAAE,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC;iBAClB;gBACD,YAAY,EAAE,GAAG,CAAC,mCAAmC;aACxD,CAAC;YA8BF;gBACI,YAAoB,cAA6B,EAC7B,WAAuB;oBADvB,mBAAc,GAAd,cAAc,CAAe;oBAC7B,gBAAW,GAAX,WAAW,CAAY;gBAE3C,CAAC;YACL,CAAC;YAjCD;gBAAC,gBAAQ,CAAC;oBACN,OAAO,EAAE;wBACL,gCAAa;wBACb,qBAAY,CAAC,OAAO,CAAC,sBAAS,CAAC;wBAC/B,iBAAU;wBACV,iCAAgB;wBAChB,oCAAe;qBAClB;oBACD,YAAY,EAAE;wBACV,4BAAY;wBACZ,YAAM;wBACN,mBAAQ;wBACR,eAAM;wBACN,aAAK;wBACL,2BAAQ;wBACR,iBAAO;wBACP,kCAAa;wBACb,6BAAa;wBACb,mBAAQ;qBACX;oBACD,SAAS,EAAC;wBACN,gCAAmB;wBACnB,6BAAa;wBACb,uBAAU;qBACb;oBACD,SAAS,EAAE,CAAC,4BAAY,CAAC;iBAC5B,CAAC;;yBAAA;YAEF,kCAKC,CAAA;;;;;;;;QC3DK,QAAQ;;;;;;;;;;YAFd,mBAAmB;YAEb,QAAQ,GAAG,iDAAsB,EAAE,CAAC;YAC1C,QAAQ,CAAC,eAAe,CAAC,sBAAS,CAAC,CAAC;;;;ACRpC;;GAEG;;;;QAEU,IAAI;;;;YAAJ,mBAAA,IAAI,GAAG;gBAChB,MAAM,EAAE;oBACJ,GAAG,EAAE,2BAA2B;oBAChC,IAAI,EAAE;wBACF,QAAQ;wBACR,UAAU;wBACV,UAAU;wBACV,UAAU;wBACV,WAAW;wBACX,UAAU;wBACV,WAAW;wBACX,UAAU;qBACb;iBACJ;gBACD,OAAO,EAAE;oBACL,GAAG,EAAE,6BAA6B;oBAClC,IAAI,EAAE;wBACH,mBAAmB;wBACnB,mBAAmB;wBACnB,mBAAmB;qBACrB;iBACJ;aACJ,CAAA,CAAA;;;;;;;;;;;YCvBD,WAAY,OAAO;gBACf,mCAAO,CAAA;gBACP,yCAAM,CAAA;gBACN,2CAAO,CAAA;gBACP,2CAAO,CAAA;YACX,CAAC,EALW,OAAO,KAAP,OAAO,QAKlB;2CAAA;;;;;;;QCRU,MAAM,EA4DN,gBAAgB;;;;YA5DhB,qBAAA,MAAM,GAAG;gBAClB,QAAQ,EAAE,GAAG;gBACb,mBAAmB,EAAE,GAAG;gBACxB,EAAE,EAAE,GAAG;gBACP,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,GAAG;gBACb,6BAA6B,EAAE,GAAG;gBAClC,UAAU,EAAE,GAAG;gBACf,aAAa,EAAE,GAAG;gBAClB,eAAe,EAAE,GAAG;gBACpB,gBAAgB,EAAE,GAAG;gBACrB,kBAAkB,EAAE,GAAG;gBACvB,KAAK,EAAE,GAAG;gBACV,SAAS,EAAE,GAAG;gBACd,YAAY,EAAE,GAAG;gBACjB,SAAS,EAAE,GAAG;gBACd,kBAAkB,EAAE,GAAG;gBACvB,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,GAAG;gBACjB,gBAAgB,EAAE,GAAG;gBACrB,SAAS,EAAE,GAAG;gBACd,SAAS,EAAE,GAAG;gBACd,kBAAkB,EAAE,GAAG;gBACvB,cAAc,EAAE,GAAG;gBACnB,6BAA6B,EAAE,GAAG;gBAClC,eAAe,EAAE,GAAG;gBACpB,QAAQ,EAAE,GAAG;gBACb,IAAI,EAAE,GAAG;gBACT,eAAe,EAAE,GAAG;gBACpB,mBAAmB,EAAE,GAAG;gBACxB,gBAAgB,EAAE,GAAG;gBACrB,YAAY,EAAE,GAAG;gBACjB,sBAAsB,EAAE,GAAG;gBAC3B,qBAAqB,EAAE,GAAG;gBAC1B,kBAAkB,EAAE,GAAG;gBACvB,WAAW,EAAE,GAAG;gBAChB,gBAAgB,EAAE,GAAG;gBACrB,qBAAqB,EAAE,GAAG;gBAC1B,eAAe,EAAE,GAAG;gBACpB,WAAW,EAAE,GAAG;gBAChB,mBAAmB,EAAE,GAAG;gBACxB,eAAe,EAAE,GAAG;gBACpB,0BAA0B,EAAE,GAAG;gBAC/B,UAAU,EAAE,GAAG;gBACf,YAAY,EAAE,GAAG;gBACjB,OAAO,EAAE,GAAG;gBACZ,kBAAkB,EAAE,GAAG;gBACvB,mBAAmB,EAAE,GAAG;gBACxB,MAAM,EAAE,GAAG;gBACX,iBAAiB,EAAE,GAAG;gBACtB,qBAAqB,EAAE,GAAG;gBAC1B,iBAAiB,EAAE,GAAG;gBACtB,+BAA+B,EAAE,GAAG;gBACpC,6BAA6B,EAAE,GAAG;gBAClC,uBAAuB,EAAE,GAAG;gBAC5B,oBAAoB,EAAE,GAAG;gBACzB,+BAA+B,EAAE,GAAG;aACrC,CAAA,CAAC;YAEF,sDAAsD;YAC3C,+BAAA,gBAAgB,GACzB;gBACE,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,UAAU;oBAClB,aAAa,EAAE,kGAAkG;oBACjH,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,qBAAqB;oBAC7B,aAAa,EAAE,sLAAsL;oBACrM,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,IAAI;oBACZ,aAAa,EAAE,gCAAgC;oBAC/C,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,SAAS;oBACjB,aAAa,EAAE,iGAAiG;oBAChH,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,UAAU;oBAClB,aAAa,EAAE,8FAA8F;oBAC7G,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,+BAA+B;oBACvC,aAAa,EAAE,uJAAuJ;oBACtK,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,YAAY;oBACpB,aAAa,EAAE,qIAAqI;oBACpJ,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,eAAe;oBACvB,aAAa,EAAE,sMAAsM;oBACrN,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iBAAiB;oBACzB,aAAa,EAAE,0OAA0O;oBACzP,YAAY,EAAE,aAAa;oBAC3B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,uSAAuS;oBACtT,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,mBAAmB;oBAC3B,aAAa,EAAE,iJAAiJ;oBAChK,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,OAAO;oBACf,aAAa,EAAE,oEAAoE;oBACnF,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,WAAW;oBACnB,aAAa,EAAE,qMAAqM;oBACpN,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE,uKAAuK;oBACtL,YAAY,EAAE,aAAa;oBAC3B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,WAAW;oBACnB,aAAa,EAAE,cAAc;oBAC7B,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,oBAAoB;oBAC5B,aAAa,EAAE,8KAA8K;oBAC7L,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,aAAa;oBACrB,aAAa,EAAE,iLAAiL;oBAChM,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE,iHAAiH;oBAChI,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,YAAY;oBAC3B,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,WAAW;oBACnB,aAAa,EAAE,oEAAoE;oBACnF,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,WAAW;oBACnB,aAAa,EAAE,oIAAoI;oBACnJ,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,oBAAoB;oBAC5B,aAAa,EAAE,sHAAsH;oBACrI,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,gBAAgB;oBACxB,aAAa,EAAE,0PAA0P;oBACzQ,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,+BAA+B;oBACvC,aAAa,EAAE,sEAAsE;oBACrF,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iBAAiB;oBACzB,aAAa,EAAE,yGAAyG;oBACxH,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,UAAU;oBAClB,aAAa,EAAE,kGAAkG;oBACjH,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,MAAM;oBACd,aAAa,EAAE,kIAAkI;oBACjJ,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iBAAiB;oBACzB,aAAa,EAAE,gFAAgF;oBAC/F,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,qBAAqB;oBAC7B,aAAa,EAAE,gHAAgH;oBAC/H,YAAY,EAAE,aAAa;oBAC3B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,mBAAmB;oBAC3B,aAAa,EAAE,sIAAsI;oBACrJ,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE,iIAAiI;oBAChJ,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,wBAAwB;oBAChC,aAAa,EAAE,mJAAmJ;oBAClK,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,uBAAuB;oBAC/B,aAAa,EAAE,oPAAoP;oBACnQ,YAAY,EAAE,aAAa;oBAC3B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,oBAAoB;oBAC5B,aAAa,EAAE,yHAAyH;oBACxI,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE,2EAA2E;oBAC1F,YAAY,EAAE,UAAU;oBACxB,WAAW,EAAE,qCAAqC;iBACnD;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,2JAA2J;oBAC1K,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,uBAAuB;oBAC/B,aAAa,EAAE,mGAAmG;oBAClH,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iBAAiB;oBACzB,aAAa,EAAE,oFAAoF;oBACnG,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,aAAa;oBACrB,aAAa,EAAE,8JAA8J;oBAC7K,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,qBAAqB;oBAC7B,aAAa,EAAE,kKAAkK;oBACjL,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,qKAAqK;oBACpL,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,4BAA4B;oBACpC,aAAa,EAAE,oHAAoH;oBACnI,YAAY,EAAE,eAAe;oBAC7B,WAAW,EAAE,kDAAkD;iBAChE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,YAAY;oBACpB,aAAa,EAAE,+HAA+H;oBAC9I,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE,iDAAiD;oBAChE,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,SAAS;oBACjB,aAAa,EAAE,wLAAwL;oBACvM,YAAY,EAAE,gBAAgB;oBAC9B,WAAW,EAAE,mDAAmD;iBACjE;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,oBAAoB;oBAC5B,aAAa,EAAE,mTAAmT;oBAClU,YAAY,EAAE,SAAS;oBACvB,WAAW,EAAE,oCAAoC;iBAClD;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,sBAAsB;oBAC9B,aAAa,EAAE,qSAAqS;oBACpT,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,QAAQ;oBAChB,aAAa,EAAE,+DAA+D;oBAC9E,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,mBAAmB;oBAC3B,aAAa,EAAE,uIAAuI;oBACtJ,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,uBAAuB;oBAC/B,aAAa,EAAE,+DAA+D;oBAC9E,YAAY,EAAE,WAAW;oBACzB,WAAW,EAAE,8CAA8C;iBAC5D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,mBAAmB;oBAC3B,aAAa,EAAE,wFAAwF;oBACvG,YAAY,EAAE,WAAW;oBACzB,WAAW,EAAE,8CAA8C;iBAC5D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iCAAiC;oBACzC,aAAa,EAAE,6FAA6F;oBAC5G,YAAY,EAAE,WAAW;oBACzB,WAAW,EAAE,8CAA8C;iBAC5D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,+BAA+B;oBACvC,aAAa,EAAE,iFAAiF;oBAChG,YAAY,EAAE,8CAA8C;oBAC5D,WAAW,EAAE,yEAAyE;iBACvF;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,yBAAyB;oBACjC,aAAa,EAAE,wNAAwN;oBACvO,YAAY,EAAE,aAAa;oBAC3B,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,sBAAsB;oBAC9B,aAAa,EAAE,4JAA4J;oBAC3K,YAAY,EAAE,cAAc;oBAC5B,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,KAAK,EAAE;oBACL,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,iCAAiC;oBACzC,aAAa,EAAE,8DAA8D;oBAC7E,YAAY,EAAE,WAAW;oBACzB,WAAW,EAAE,8CAA8C;iBAC5D;aACF,CAAA,CAAC;;;;;;;;QCzbS,SAAS,yBA0ET,SAAS;;;;;;;;;;;;;;;;;YA9EtB;;;cAGE;YACW,wBAAA,SAAS,GAAG,IAAI,mBAAW,CAAC,UAAU,CAAC,CAAA,CAAC;YA4CrD;;;;cAIE;YACF;gBACE,YAAY,MAAM,GAA8B,EAAE;oBAChD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;wBAClB,sBAAsB,EAAE,IAAI,0BAAmB,EAAE;wBACjD,KAAK,EAAE,GAAG;wBACV,SAAS,EAAE,KAAK;qBACjB,EAAE,MAAM,CAAC,CAAC;gBACb,CAAC;YACH,CAAC;YARD,0DAQC,CAAA;YAiBY,wBAAA,SAAS,GAAG,CAAC,MAAc,KAAc,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC,CAAA,CAAC;YAEtF;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4BG;YAEH;gBAKE,YAC6B,QAA2B,EACX,MAAiC;oBADjD,aAAQ,GAAR,QAAQ,CAAmB;oBAJ9C,WAAM,GAA8B,IAAI,qBAAqB,EAAE,CAAC;oBAMxE,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEf,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;oBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACpC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC;gBAED,gBAAgB,CAAC,GAAY;oBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAElC,IAAI,QAAQ,GAAG,IAAI,uBAAU,CAAW,CAAC,gBAAoC;wBAC3E,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BAC1B,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC3B,gBAAgB,CAAC,QAAQ,EAAE,CAAC;wBAC9B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC9B,CAAC;wBACD,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,uBAAuB;oBAC3C,CAAC,CAAC,CAAC;oBAEH,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;oBACpD,MAAM,CAAC;wBACL,UAAU,EAAE,iBAAU,CAAC,IAAI;wBAC3B,OAAO,EAAE,GAAG;wBACZ,UAAA,QAAQ;qBACT,CAAC;gBACJ,CAAC;gBAED,qBAAqB;gBAErB;;;;;;;;;;;;;mBAaG;gBACO,aAAa,CAAC,GAAY;oBAClC,IAAI,EAAC,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC5E,IAAI,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;oBACzC,IAAI,OAAO,GAAY;wBACrB,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,IAAI;wBACV,UAAU,EAAE,UAAU;wBACtB,cAAc,EAAE,cAAc;wBAC9B,OAAO,EAAE,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;wBAC5D,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;wBAChC,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,WAAW;qBACzB,CAAC;oBAEF,IAAI,OAAwB,CAAC;oBAE7B,IAAI,CAAC;wBACH,EAAE,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;4BAC9C,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;wBAEnC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;4BAC9B,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gCACnB,KAAK,oBAAa,CAAC,GAAG;oCACpB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oCAC5B,KAAK,CAAC;gCACR,KAAK,oBAAa,CAAC,IAAI;oCACrB,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCAC7B,KAAK,CAAC;gCACR,KAAK,oBAAa,CAAC,GAAG;oCACpB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oCAC5B,KAAK,CAAC;gCACR,KAAK,oBAAa,CAAC,MAAM;oCACvB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oCAC/B,KAAK,CAAC;gCACR;oCACE,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;oCACpF,KAAK,CAAC;4BACV,CAAC;wBAEH,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,SAAS,EAAE,eAAe,cAAc,aAAa,CAAC,CAAC;wBACnG,CAAC;oBAEH,CAAE;oBAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACf,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC;wBACjC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,qBAAqB,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;oBAC7E,CAAC;oBAED,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;wBACvC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC9D,CAAC;oBAED,MAAM,CAAC,IAAI,eAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,CAAC;gBAED;;;;mBAIG;gBACO,UAAU,CAAC,UAAiB,EAAE,KAAsB;oBAC5D,wFAAwF;oBACxF,IAAI,UAAU,GAAiC,EAAE,CAAC;oBAClD,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAe,EAAE,IAAY;wBACpD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAC,MAAA,IAAI,EAAE,EAAE,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;oBACjF,CAAC,CAAC,CAAC;oBAEH,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC;oBAC5B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAAC,MAAM,CAAC,UAAU,CAAC;oBAAC,CAAC;oBAEhC,4BAA4B;oBAC5B,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG;wBAC1B,IAAI,EAAE,GAAG,IAAI,CAAC;wBACd,IAAI,CAAC,GAAG,GAAG,CAAC;wBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;4BACf,CAAC,IAAI,CAAC,CAAC;4BACP,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;4BACzB,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACpC,CAAC;wBACD,MAAM,CAAC,EAAE,CAAC;oBACZ,CAAC,CAAC,CAAC;gBACL,CAAC;gBAES,KAAK,CAAC,IAAS;oBACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1C,CAAC;gBAED;;;;;;;;;;;mBAWG;gBACO,QAAQ,CAAC,OAAgB;oBACjC,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;oBACnD,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;oBAChC,IAAI,OAAwB,CAAC;oBAE7B,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAChB,KAAK,SAAS;4BACZ,IAAI,CAAC,OAAO,EAAE,CAAC;4BACf,OAAO,GAAG,IAAI,sBAAe,CAAC,EAAE,MAAM,EAAE,0BAAM,CAAC,EAAE,EAAE,CAAC,CAAC;4BACrD,KAAK,CAAC;wBACR,KAAK,QAAQ;4BACX,EAAE,CAAC,CAAC,MAAM,KAAK,oBAAa,CAAC,GAAG,CAAC,CAAC,CAAC;gCACjC,OAAO,GAAG,IAAI,sBAAe,CAAC;oCAC5B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;oCAC7B,MAAM,EAAE,0BAAM,CAAC,EAAE;iCAClB,CAAC,CAAC;4BACL,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,kDAAkD;gCAClD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAS,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC;gCAC1D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gCACjC,OAAO,GAAG,IAAI,sBAAe,CAAC,EAAE,MAAM,EAAE,0BAAM,CAAC,UAAU,EAAE,CAAC,CAAC;4BAC/D,CAAC;4BACD,KAAK,CAAC;wBACR;4BACE,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAChC,0BAAM,CAAC,qBAAqB,EAAE,oBAAoB,OAAO,GAAG,CAAC,CAAC;oBACpE,CAAC;oBACD,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBAES,mBAAmB,CAAC,MAAc,EAAE,OAAe;oBAC3D,MAAM,CAAC,IAAI,sBAAe,CAAC;wBACzB,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,EAAE;wBAC/B,OAAO,EAAE,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;wBAC5D,MAAM,EAAE,MAAM;qBACf,CAAC,CAAC;gBACL,CAAC;gBAES,MAAM,CAAC,EAAC,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,CAAC,UAAU,EAAU;oBAC5E,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,SAAS,EAAE,YAAY,cAAc,MAAM,CAAC,CAAC;oBACtF,CAAC;oBACD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBAC7C,MAAM,CAAC,IAAI,sBAAe,CAAC;wBACzB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,0BAAM,CAAC,UAAU,GAAG,0BAAM,CAAC,SAAS;qBAClF,CAAC,CAAC;gBACL,CAAC;gBAES,QAAQ,CAAC,UAAiB,EAAE,EAAmB;oBACvD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAS,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBACxD,CAAC;gBAES,KAAK,CAAC,UAAe;oBAC7B,sBAAsB;oBACtB,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,UAAU,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,IAAS;wBACrC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;oBACzE,CAAC,EAAE,IAAI,CAAC,CAAC;oBACT,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;gBACnB,CAAC;gBAES,GAAG,CAAC,EAAC,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,EAAU;oBACrE,IAAI,IAAI,GAAG,UAAU,CAAC;oBAEtB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACP,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBACvC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;oBAC5C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACV,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,SAAS,EAC9C,IAAI,cAAc,cAAc,EAAE,aAAa,CAAC,CAAC;oBACrD,CAAC;oBACD,MAAM,CAAC,IAAI,sBAAe,CAAC;wBACzB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;wBAChC,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,0BAAM,CAAC,EAAE;qBAClB,CAAC,CAAC;gBACL,CAAC;gBAES,WAAW,CAAC,IAAY;oBAChC,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACpC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;oBACd,MAAM,CAAC,CAAC,CAAC;gBACX,CAAC;;gBAES,OAAO,CAAC,UAAiB,EAAE,EAAU;oBAC7C,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAS,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC7D,CAAC;gBAED,iEAAiE;gBACjE,2CAA2C;gBACjC,OAAO,CAAC,UAAuB,EAAE,EAAU;oBACnD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAAC,MAAM,CAAC,IAAI,CAAC;oBAAC,CAAC;oBACzB,IAAI,UAAU,GAAI,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC;oBACxE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACf,IAAI,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;wBAC3B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;oBACnC,CAAC;oBACD,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAES,QAAQ,CAAC,GAAW;oBAC5B,IAAI,CAAC;wBACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;wBACvC,IAAI,OAAO,GAAG,EAAE,CAAC;wBACjB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4BAClC,wCAAwC;4BACxC,+CAA+C;4BAC/C,IAAI,GAAG,CAAC,CAAC,CAAC,oBAAoB;4BAC9B,OAAO,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;wBACjD,CAAC;wBACD,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACxC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACjD,IAAI,WAAW,GAAG,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,cAAc,GAAG,GAAG,CAAC;wBAC9D,CAAC,cAAc,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,+CAA+C;wBAC7F,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,sBAAe,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpE,MAAM,CAAC,EAAE,MAAA,IAAI,EAAE,IAAA,EAAE,EAAE,gBAAA,cAAc,EAAE,aAAA,WAAW,EAAE,OAAA,KAAK,EAAE,CAAC;oBAC1D,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,GAAG,GAAG,wBAAwB,GAAG,sBAAsB,GAAG,CAAC,OAAO,EAAE,CAAC;wBACzE,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAES,IAAI,CAAC,EAAC,UAAU,EAAE,qBAAqB,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,WAAW,EAAU;oBACvF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAS,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oBACzC,CAAC;oBACD,gDAAgD;oBAChD,kDAAkD;oBAClD,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;oBACb,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBAC9C,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpB,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC,IAAI,sBAAe,CAAC;4BACzB,OAAO,EAAE,OAAO;4BAChB,MAAM,EAAE,0BAAM,CAAC,UAAU;yBAC1B,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACtB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;wBAChD,MAAM,CAAC,IAAI,sBAAe,CAAC;4BACzB,OAAO,EAAE,OAAO;4BAChB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;4BAChC,MAAM,EAAE,0BAAM,CAAC,OAAO;yBACvB,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBAES,GAAG,CAAC,EAAC,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,EAAU;oBACnE,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAS,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC1C,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACR,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,SAAS,EAAE,YAAY,cAAc,MAAM,CAAC,CAAC;oBACtF,CAAC;oBACD,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,0BAAM,CAAC,WAAW,EAChD,IAAI,cAAc,6BAA6B,CAAC,CAAC;oBACrD,CAAC;oBACD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBAC9C,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpB,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC,IAAI,sBAAe,CAAC;4BACzB,OAAO,EAAE,OAAO;4BAChB,MAAM,EAAE,0BAAM,CAAC,UAAU,CAAC,yBAAyB;yBACpD,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACtB,MAAM,CAAC,IAAI,sBAAe,CAAC;4BACzB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;4BAChC,OAAO,EAAE,OAAO;4BAChB,MAAM,EAAE,0BAAM,CAAC,OAAO;yBACvB,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBAES,UAAU,CAAC,UAAiB,EAAE,EAAU;oBAChD,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACZ,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;wBACzB,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBAED;;mBAEG;gBACO,OAAO;oBACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACrC,CAAC;gBAES,aAAa,CAAC,OAAwB;oBAC9C,IAAI,CAAC;wBACH,IAAI,UAAU,GAAG,oCAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBAClD,OAAO,CAAC,YAAY,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,GAAG,gBAAgB,CAAC;wBACxE,MAAM,CAAC,OAAO,CAAC;oBACjB,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,IAAI,sBAAe,CAAC;4BACzB,MAAM,EAAE,0BAAM,CAAC,qBAAqB;4BACpC,UAAU,EAAE,0BAA0B;yBACvC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC;YAlWG;2BAAC,cAAM,CAAC,SAAS,CAAC;2BACjB,cAAM,CAAC,qBAAqB,CAAC;2BAAE,gBAAQ,EAAE;;sCADxB;YANtB,4DAwWC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YChdD;;gBACE;;;;;;;;;;kBAUE;gBACF,OAAO,OAAO,CAAC,SAAkC,EAAE,OAAmC;oBAEpF,IAAI,SAAS,GAAU;wBACnB,EAAE,OAAO,EAAE,iBAAU,EAAE,QAAQ,EAAE,kDAAsB,EAAE;wBACzD,EAAE,OAAO,EAAE,qCAAS,EAAG,QAAQ,EAAE,SAAS,EAAE;qBAC/C,CAAC;oBAEF,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,SAAS,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,iDAAqB,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAA;oBACrE,CAAC;oBAED,MAAM,CAAC;wBACL,QAAQ,EAAE,sBAAoB;wBAC9B,SAAS,EAAE,SAAS;qBACrB,CAAC;gBACJ,CAAC;YACH,CAAC;YA7BD;gBAAC,gBAAQ,CAAC,EAAE,CAAC;;oCAAA;YACb,wDA4BC,CAAA;;;;;;;IC3CD,oBAA2B,CAAM;QAC/B,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC;IACjC,CAAC;IAFD,oCAEC,CAAA;;;;;;;;;;QC4BY,KAAK;;;;YAAL,oBAAA,KAAK,GAAkB;gBAClC,MAAM,EAAE,IAAI;gBACZ,IAAI,CAAC,KAAU,IAAoB,CAAC;gBACpC,KAAK,CAAC,GAAQ,IAAU,MAAM,GAAG,CAAC,CAAC,CAAC;gBACpC,QAAQ,KAAoB,CAAC;aAC9B,CAAA,CAAC;;;;;;;QCnCW,OAAO;;;;YAAP,sBAAA,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,CAAI,CAAM,KAAe,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAA,CAAC;;;;;;;ICArG,kBAAyB,CAAM;QAC7B,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;IAC5C,CAAC;IAFD,gCAEC,CAAA;;;;;;;;;;QCDU,WAAW;;;;YADtB,0FAA0F;YAC/E,0BAAA,WAAW,GAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAA,CAAC;;;;;;;;QCCpC,cAAc;IAElB;QACE,IAAI,CAAC;YACH,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,yBAAW,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,yBAAW,CAAC;QACrB,CAAC;IACH,CAAC;IAED,kBAA6C,EAAK;QAChD,cAAc,GAAG,EAAE,CAAC;QACpB,MAAM,CAAM,UAAU,CAAC;IACzB,CAAC;IAHD,gCAGC,CAAA;;;;;;;YAAA,CAAC;;;;;;;;;;;YChBF;;;eAGG;YACH,kCAAyC,KAAK;gBAC5C,YAAmB,MAAa;oBAC9B,OAAO,CAAC;oBADS,WAAM,GAAN,MAAM,CAAO;oBAE9B,MAAM,GAAG,GAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM;wBACtC,GAAG,MAAM,CAAC,MAAM;IAClB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;oBACpE,IAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC;oBAC9C,IAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;oBACxB,IAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBACrC,CAAC;YACH,CAAC;YAVD,sDAUC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YCID;;;;;;;;;;;eAWG;YACH;gBAYE;;;mBAGG;gBACH,YAAY,WAAwB;oBAVpC;;;uBAGG;oBACI,WAAM,GAAY,KAAK,CAAC;oBAO7B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACT,IAAK,CAAC,YAAY,GAAG,WAAW,CAAC;oBAC1C,CAAC;gBACH,CAAC;gBAED;;;;;mBAKG;gBACH,WAAW;oBACT,IAAI,SAAS,GAAG,KAAK,CAAC;oBACtB,IAAI,MAAa,CAAC;oBAElB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBAEnB,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAU,IAAK,CAAC;oBAE/C,IAAK,CAAC,cAAc,GAAG,IAAI,CAAC;oBAEnC,EAAE,CAAC,CAAC,uBAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBAC7B,IAAI,KAAK,GAAG,mBAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC9C,EAAE,CAAC,CAAC,KAAK,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC1B,SAAS,GAAG,IAAI,CAAC;4BACjB,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAC9C,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,iBAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;wBAE5B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;wBACf,MAAM,GAAG,GAAG,cAAc,CAAC,MAAM,CAAC;wBAElC,OAAO,EAAE,KAAK,GAAG,GAAG,EAAE,CAAC;4BACrB,MAAM,GAAG,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;4BAClC,EAAE,CAAC,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gCAClB,IAAI,KAAK,GAAG,mBAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCAChD,EAAE,CAAC,CAAC,KAAK,KAAK,yBAAW,CAAC,CAAC,CAAC;oCAC1B,SAAS,GAAG,IAAI,CAAC;oCACjB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;oCACtB,IAAI,GAAG,GAAG,yBAAW,CAAC,CAAC,CAAC;oCACxB,EAAE,CAAC,CAAC,GAAG,YAAY,yCAAmB,CAAC,CAAC,CAAC;wCACvC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oCACrC,CAAC;oCAAC,IAAI,CAAC,CAAC;wCACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oCACnB,CAAC;gCACH,CAAC;4BACH,CAAC;wBACH,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,IAAI,yCAAmB,CAAC,MAAM,CAAC,CAAC;oBACxC,CAAC;gBACH,CAAC;gBAED;;;;;;;;;;;;;;;;;mBAiBG;gBACH,GAAG,CAAC,QAAuB;oBACzB,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnD,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;oBAED,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAED,IAAI,GAAG,GAAmB,QAAS,CAAC;oBAEpC,MAAM,CAAC,CAAC,OAAO,QAAQ,CAAC,CAAC,CAAC;wBACxB,KAAK,UAAU;4BACb,GAAG,GAAG,IAAI,YAAY,CAAiB,QAAQ,CAAC,CAAC;wBACnD,KAAK,QAAQ;4BACX,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC;gCACxD,KAAK,CAAC;4BACR,CAAC;4BAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gCACvB,GAAG,CAAC,WAAW,EAAE,CAAC;4BACpB,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,CAAQ,IAAK,CAAC,cAAc,IAAI,CAAQ,IAAK,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAChF,CAAC;4BACD,KAAK,CAAC;wBACR;4BACE,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,QAAQ,GAAG,yBAAyB,CAAC,CAAC;oBACrF,CAAC;oBAED,MAAM,CAAC,GAAG,CAAC;gBACb,CAAC;gBAED;;;;;mBAKG;gBACH,MAAM,CAAC,YAA0B;oBAE/B,gEAAgE;oBAChE,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,IAAM,CAC1B,YAAY,KAAK,IAAI,CAAC,IAAI,CAC1B,YAAY,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,aAAa,GAAU,IAAK,CAAC,cAAc,CAAC;oBAElD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;wBAClB,MAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;wBAC9D,EAAE,CAAC,CAAC,iBAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7B,aAAa,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;wBAC7C,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YArJe,kBAAK,GAAiB,CAAC,UAAS,KAAU;gBACtD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,CAAC;YAJzB,wCAsJC,CAAA;;;;;;;QCpLG,WAAW,EAoBJ,IAAI,EAEX,UAAU;;;;YAtBV,WAAW,GAAG;gBAChB,SAAS,EAAE,KAAK;gBAChB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,KAAK;aACnB,CAAC;YAaS,mBAAA,IAAI,GAAQ,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,MAAM,CAAC,IAAI,MAAM,CAAC,CAAA,CAAC;YAEhG,UAAU,GAAG,WAAW,CAAC,OAAO,MAAM,CAAC,IAAI,MAAM,CAAC;YACtD,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;gBACzF,mBAAA,IAAI,GAAG,UAAU,CAAA,CAAC;YACpB,CAAC;;;;;;;;QCvBK,MAAM,EAEC,cAAc;;;;;;;YAFrB,MAAM,GAAQ,WAAI,CAAC,MAAM,CAAC;YAEnB,6BAAA,cAAc,GAAG,CAAC,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,CAAC;gBAC9F,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;YCChD;;;;;;;;;eASG;YACH,yBAAmC,2BAAY;gBA8B7C;;;;;;;mBAOG;gBACH,YAAY,iBAA+D,EAC/D,KAAyB,EACzB,QAAqB;oBAC/B,OAAO,CAAC;oBAlBH,mBAAc,GAAQ,IAAI,CAAC;oBAC3B,oBAAe,GAAY,KAAK,CAAC;oBACjC,uBAAkB,GAAY,KAAK,CAAC;oBAEjC,cAAS,GAAY,KAAK,CAAC;oBAgBnC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,KAAK,CAAC;4BACJ,IAAI,CAAC,WAAW,GAAG,gBAAa,CAAC;4BACjC,KAAK,CAAC;wBACR,KAAK,CAAC;4BACJ,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gCACvB,IAAI,CAAC,WAAW,GAAG,gBAAa,CAAC;gCACjC,KAAK,CAAC;4BACR,CAAC;4BACD,EAAE,CAAC,CAAC,OAAO,iBAAiB,KAAK,QAAQ,CAAC,CAAC,CAAC;gCAC1C,EAAE,CAAC,CAAC,iBAAiB,YAAY,UAAU,CAAC,CAAC,CAAC;oCAC5C,IAAI,CAAC,WAAW,GAAsB,iBAAkB,CAAC;oCAClD,IAAI,CAAC,WAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gCACrC,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oCAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAI,IAAI,EAAyB,iBAAiB,CAAC,CAAC;gCAC3F,CAAC;gCACD,KAAK,CAAC;4BACR,CAAC;wBACH;4BACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAI,IAAI,EAAyB,iBAAiB,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;4BAC1G,KAAK,CAAC;oBACV,CAAC;gBACH,CAAC;gBAjED,CAAC,6BAAc,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEnC;;;;;;;;;;mBAUG;gBACH,OAAO,MAAM,CAAI,IAAsB,EACtB,KAAyB,EACzB,QAAqB;oBACpC,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBACzD,UAAU,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBACtC,MAAM,CAAC,UAAU,CAAC;gBACpB,CAAC;gBAgDD;;;;;;mBAMG;gBACH,IAAI,CAAC,KAAS;oBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAED;;;;;;mBAMG;gBACH,KAAK,CAAC,GAAS;oBACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAED;;;;;mBAKG;gBACH,QAAQ;oBACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAED,WAAW;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAK,CAAC,WAAW,EAAE,CAAC;gBACtB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC;YAlID,oCAkIC,CAAA;YAED;;;;eAIG;YACH,6BAAgC,UAAU;gBAIxC,YAAoB,OAAsB,EAC9B,cAA0D,EAC1D,KAAyB,EACzB,QAAqB;oBAC/B,OAAO,CAAC;oBAJU,YAAO,GAAP,OAAO,CAAe;oBAMxC,IAAI,IAA0B,CAAC;oBAC/B,IAAI,OAAO,GAAQ,IAAI,CAAC;oBAExB,EAAE,CAAC,CAAC,uBAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;wBAC/B,IAAI,GAA2B,cAAe,CAAC;oBACjD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBAC1B,OAAO,GAAG,cAAc,CAAC;wBACzB,IAAI,GAAyB,cAAe,CAAC,IAAI,CAAC;wBAClD,KAAK,GAAyB,cAAe,CAAC,KAAK,CAAC;wBACpD,QAAQ,GAAyB,cAAe,CAAC,QAAQ,CAAC;wBAC1D,EAAE,CAAC,CAAC,uBAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;4BACpC,IAAI,CAAC,GAAG,CAAc,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC3D,CAAC;wBACD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,CAAC;oBAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;oBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC5B,CAAC;gBAED,IAAI,CAAC,KAAS;oBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAClC,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;wBACzB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBACvC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,KAAK,CAAC,GAAS;oBACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;4BAChB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;gCAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gCACpC,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gCAChD,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BACvC,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,MAAM,GAAG,CAAC;wBACZ,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,CAAC,cAAc,GAAG,GAAG,CAAC;4BAC7B,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;4BAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,QAAQ;oBACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BACnB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;gCAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gCAClC,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gCAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAEO,YAAY,CAAC,EAAY,EAAE,KAAW;oBAC5C,IAAI,CAAC;wBACH,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;oBAChC,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,MAAM,GAAG,CAAC;oBACZ,CAAC;gBACH,CAAC;gBAEO,eAAe,CAAC,MAAqB,EAAE,EAAY,EAAE,KAAW;oBACtE,IAAI,CAAC;wBACH,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;oBAChC,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,cAAc,GAAG,GAAG,CAAC;wBAC5B,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBAES,YAAY;oBACpB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,OAAO,CAAC,WAAW,EAAE,CAAC;gBACxB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;IEjQD,sBACE,cAA0D,EAC1D,KAA4B,EAC5B,QAAqB;QAErB,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,cAAc,YAAY,uBAAU,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAkB,cAAe,CAAC;YAC1C,CAAC;YAED,EAAE,CAAC,CAAC,cAAc,CAAC,6BAAc,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,cAAc,CAAC,6BAAc,CAAC,EAAE,CAAC;YAC1C,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,uBAAU,EAAE,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,IAAI,uBAAU,CAAC,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IACzD,CAAC;IApBD,wCAoBC,CAAA;;;;;;;;;;;;;;;;ICxBD,mBAA6B,KAAuB;QAClD,MAAM,CAAC,KAAK,IAAI,OAAa,KAAM,CAAC,SAAS,KAAK,UAAU,IAAI,OAAQ,KAAa,CAAC,IAAI,KAAK,UAAU,CAAC;IAC5G,CAAC;IAFD,kCAEC,CAAA;;;;;;;;;;;QCAU,UAAU,EAEf,MAAM;;;;;;;YAAN,MAAM,GAAQ,WAAI,CAAC,MAAM,CAAC;YAEhC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACpB,yBAAA,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAA,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC5C,yBAAA,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA,CAAC;gBACtC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,WAAI,CAAC,GAAG,IAAI,OAAO,IAAI,WAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;oBACnE,0BAA0B;oBAC1B,yBAAA,UAAU,GAAG,YAAY,CAAA,CAAC;gBAC5B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpB,0BAA0B;oBAC1B,IAAI,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBAC1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;wBACrC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClB,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,MAAM,IAAI,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,WAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;4BACrG,yBAAA,UAAU,GAAG,GAAG,CAAA,CAAC;4BACjB,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,yBAAA,UAAU,GAAG,YAAY,CAAA,CAAC;gBAC5B,CAAC;YACL,CAAC;;;;;;;;;;;;;;;YC1BD;;;;eAIG;YACH,8BAA2C,uBAAU;gBACnD,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAA+B;oBACrD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAChC,CAAC;gBAED,cAAc,CAAC,QAA+B;oBAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAdD,8CAcC,CAAA;;;;;;;;;;;;;;;YCnBD;;;;eAIG;YACH,8BAA2C,uBAAU;gBAGnD,YAAoB,MAA6B,EAAU,UAAa,EAAU,UAAkB;oBAClG,OAAO,CAAC;oBADU,WAAM,GAAN,MAAM,CAAuB;oBAAU,eAAU,GAAV,UAAU,CAAG;oBAAU,eAAU,GAAV,UAAU,CAAQ;oBAF5F,UAAK,GAAW,CAAC,CAAC;gBAI1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;gBACtF,CAAC;gBAES,MAAM,CAAC,KAAU;oBACzB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACrC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC;YApBD,8CAoBC,CAAA;;;;;;;;QCRY,YAAY;IAlBzB,6BAAoC,OAAY;QAC9C,IAAI,YAAiB,CAAC;QACtB,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAE5B,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBACtB,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;gBACpC,MAAM,CAAC,UAAU,GAAG,YAAY,CAAC;YACrC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY,GAAG,cAAc,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IAhBD,sDAgBC,CAAA;;;;;;;YAEY,2BAAA,YAAY,GAAG,mBAAmB,CAAC,WAAI,CAAC,CAAA,CAAC;;;;;;;;ICLtD,2BAAqC,eAA0C,EAC1C,MAA0B,EAC1B,UAAc,EACd,UAAmB;QACtD,IAAI,WAAW,GAAoB,IAAI,iCAAe,CAAC,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEhG,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,YAAY,uBAAU,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrB,WAAW,CAAC,IAAI,CAAO,MAAO,CAAC,KAAK,CAAC,CAAC;gBACtC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,iBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzE,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,WAAW,CAAC,QAAQ,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,qBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,IAAI,CACT,CAAC,KAAK;gBACJ,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;oBACxB,WAAW,CAAC,IAAI,CAAM,KAAK,CAAC,CAAC;oBAC7B,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC,EACD,CAAC,GAAQ,KAAK,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CACrC;iBACA,IAAI,CAAC,IAAI,EAAE,CAAC,GAAQ;gBACnB,6DAA6D;gBAC7D,WAAI,CAAC,UAAU,CAAC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,qBAAU,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;YACpD,MAAM,QAAQ,GAAQ,MAAM,CAAC,qBAAU,CAAC,EAAE,CAAC;YAC3C,GAAG,CAAC;gBACF,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACd,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACvB,KAAK,CAAC;gBACR,CAAC;gBACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC;gBACR,CAAC;YACH,CAAC,QAAQ,IAAI,EAAE;QACjB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,yBAAY,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;YACtD,MAAM,GAAG,GAAG,MAAM,CAAC,yBAAY,CAAC,EAAE,CAAC;YACnC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxC,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,iCAAe,CAAC,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;YACrF,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAlED,kDAkEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YC3ED;;;;eAIG;YACH,2BAAwC,uBAAU;gBAQhD,YAAoB,SAA+B,EAC/B,UAA4C,EAC5C,UAA4C;oBAC9D,OAAO,CAAC;oBAHU,cAAS,GAAT,SAAS,CAAsB;oBAC/B,eAAU,GAAV,UAAU,CAAkC;oBAC5C,eAAU,GAAV,UAAU,CAAkC;gBAEhE,CAAC;gBAVD,OAAO,MAAM,CAAO,SAA+B,EAC/B,UAA4C,EAC5C,UAA4C;oBAC9D,MAAM,CAAC,IAAI,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBAC7D,CAAC;gBAQS,UAAU,CAAC,UAA2B;oBAC9C,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;oBAEnD,MAAM,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBACzE,CAAC;YACH,CAAC;YAnBD,wCAmBC,CAAA;YAED,2BAAiC,iCAAe;gBAC9C,YAAY,WAA0B,EAClB,SAA+B,EAC/B,UAA4C,EAC5C,UAA4C;oBAC9D,MAAM,WAAW,CAAC,CAAC;oBAHD,cAAS,GAAT,SAAS,CAAsB;oBAC/B,eAAU,GAAV,UAAU,CAAkC;oBAC5C,eAAU,GAAV,UAAU,CAAkC;oBAE9D,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;gBAEO,KAAK;oBACX,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;oBAEnD,IAAI,MAAe,CAAC;oBACpB,IAAI,CAAC;wBACH,MAAM,GAAY,SAAS,EAAE,CAAC;wBAC9B,MAAM,MAAM,GAAG,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;wBAEhD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;wBAC5C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,SAAS,EAAE,CAAC;wBACnB,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;YCvDD;;;;;;;;;;;;;eAaG;YACH,qBAA+B,2BAAY;gBACzC,YAAY,SAAoB,EAAE,IAAyB;oBACzD,OAAO,CAAC;gBACV,CAAC;gBACD;;;;;;;;;mBASG;gBACI,QAAQ,CAAC,KAAS,EAAE,KAAK,GAAW,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;YAjBD,4BAiBC,CAAA;;;;;;;;;;;YC/BD;;;;;;;;;;;;;;;eAeG;YACH;gBAIE,YAAoB,eAA8B,EACtC,GAAG,GAAiB,SAAS,CAAC,GAAG;oBADzB,oBAAe,GAAf,eAAe,CAAe;oBAEhD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACjB,CAAC;gBAYD;;;;;;;;;;;;;;;;mBAgBG;gBACI,QAAQ,CAAI,IAAyB,EAAE,KAAK,GAAW,CAAC,EAAE,KAAS;oBACxE,MAAM,CAAC,IAAI,IAAI,CAAC,eAAe,CAAI,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxE,CAAC;YACH,CAAC;YArCe,aAAG,GAAiB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;YAF5E,kCAuCC,CAAA;;;;;;;;;;;;;;;YCjDD;;;;eAIG;YACH,8BAAqC,uBAAU;gBAmD7C,YAAmB,KAAU,EAAU,SAAqB;oBAC1D,OAAO,CAAC;oBADS,UAAK,GAAL,KAAK,CAAK;oBAAU,cAAS,GAAT,SAAS,CAAY;gBAE5D,CAAC;gBAnDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAuCG;gBACH,OAAO,MAAM,CAAI,KAAU,EAAE,SAAqB;oBAChD,MAAM,CAAC,IAAI,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAC/C,CAAC;gBAED,OAAO,QAAQ,CAAC,GAAgB;oBAC9B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;oBAClC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAMS,UAAU,CAAC,UAAe;oBAClC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACrD,OAAA,KAAK,EAAE,YAAA,UAAU;yBAClB,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;YACH,CAAC;YAnED,8CAmEC,CAAA;;;;;;;;;;;;;;;;;;;;;YC9DD;;;;;eAKG;YACH;gBAOE;;;;;;mBAMG;gBACH,YAAY,SAA2D;oBAZhE,cAAS,GAAY,KAAK,CAAC;oBAahC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAgBD;;;;;;mBAMG;gBACH,IAAI,CAAI,QAAwB;oBAC9B,MAAM,UAAU,GAAG,IAAI,UAAU,EAAK,CAAC;oBACvC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;oBACzB,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBAC/B,MAAM,CAAC,UAAU,CAAC;gBACpB,CAAC;gBAED;;;;;;;;;;mBAUG;gBACH,SAAS,CAAC,cAA0D,EAC1D,KAA4B,EAC5B,QAAqB;oBAE7B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,MAAM,IAAI,GAAG,2BAAY,CAAC,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAE3D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBAClC,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;wBAC5B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAChC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;4BACzB,MAAM,IAAI,CAAC,cAAc,CAAC;wBAC5B,CAAC;oBACH,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED;;;;;;mBAMG;gBACH,OAAO,CAAC,IAAwB,EAAE,WAA4B;oBAC5D,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACjB,EAAE,CAAC,CAAC,WAAI,CAAC,EAAE,IAAI,WAAI,CAAC,EAAE,CAAC,MAAM,IAAI,WAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4BACxD,WAAW,GAAG,WAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;wBACvC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACxB,WAAW,GAAG,WAAI,CAAC,OAAO,CAAC;wBAC7B,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBAC3C,CAAC;oBAED,MAAM,CAAC,IAAI,WAAW,CAAO,CAAC,OAAO,EAAE,MAAM;wBAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK;4BACxC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gCACjB,kDAAkD;gCAClD,uDAAuD;gCACvD,yDAAyD;gCACzD,kBAAkB;gCAClB,IAAI,CAAC;oCACH,IAAI,CAAC,KAAK,CAAC,CAAC;gCACd,CAAE;gCAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oCACb,MAAM,CAAC,GAAG,CAAC,CAAC;oCACZ,YAAY,CAAC,WAAW,EAAE,CAAC;gCAC7B,CAAC;4BACH,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,2DAA2D;gCAC3D,gEAAgE;gCAChE,yDAAyD;gCACzD,wEAAwE;gCACxE,sDAAsD;gCACtD,2BAA2B;gCAC3B,IAAI,CAAC,KAAK,CAAC,CAAC;4BACd,CAAC;wBACH,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACL,CAAC;gBAES,UAAU,CAAC,UAA2B;oBAC9C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC3C,CAAC;gBAMD;;;;mBAIG;gBACH,CAAC,yBAAY,CAAC;oBACZ,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;YA5HC,oEAAoE;YACpE,wFAAwF;YACxF;;;;;;;eAOG;YACI,iBAAM,GAAa,CAAI,SAA2D;gBACvF,MAAM,CAAC,IAAI,UAAU,CAAI,SAAS,CAAC,CAAC;YACtC,CAAC,CAAC;YAhCJ,oCAgJC,CAAA;;;;;;;;;;;YCzKD;;;;;;;;eAQG;YACH,sCAA6C,KAAK;gBAChD;oBACE,MAAM,GAAG,GAAQ,MAAM,qBAAqB,CAAC,CAAC;oBACvC,IAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,yBAAyB,CAAC;oBAClD,IAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;oBACxB,IAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBACrC,CAAC;YACH,CAAC;YAPD,8DAOC,CAAA;;;;;;;;;;;;;;;YCZD;;;;eAIG;YACH,kCAA4C,2BAAY;gBAGtD,YAAmB,OAAmB,EAAS,UAAuB;oBACpE,OAAO,CAAC;oBADS,YAAO,GAAP,OAAO,CAAY;oBAAS,eAAU,GAAV,UAAU,CAAa;oBAFtE,WAAM,GAAY,KAAK,CAAC;gBAIxB,CAAC;gBAED,WAAW;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBAEnB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;oBAEpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChF,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAE3D,EAAE,CAAC,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3B,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;oBACvC,CAAC;gBACH,CAAC;YACH,CAAC;YA7BD,sDA6BC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YC7BD;;eAEG;YACH,gCAA0C,uBAAU;gBAClD,YAAsB,WAAuB;oBAC3C,MAAM,WAAW,CAAC,CAAC;oBADC,gBAAW,GAAX,WAAW,CAAY;gBAE7C,CAAC;YACH,CAAC;YAJD,kDAIC,CAAA;YAED;;eAEG;YACH,sBAAgC,uBAAU;gBAgBxC;oBACE,OAAO,CAAC;oBAXV,cAAS,GAAkB,EAAE,CAAC;oBAE9B,WAAM,GAAG,KAAK,CAAC;oBAEf,cAAS,GAAG,KAAK,CAAC;oBAElB,aAAQ,GAAG,KAAK,CAAC;oBAEjB,gBAAW,GAAQ,IAAI,CAAC;gBAIxB,CAAC;gBAhBD,CAAC,6BAAc,CAAC;oBACd,MAAM,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC;gBAoBD,IAAI,CAAO,QAAwB;oBACjC,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACjD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBAC5B,MAAM,CAAM,OAAO,CAAC;gBACtB,CAAC;gBAED,IAAI,CAAC,KAAS;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,IAAI,iDAAuB,EAAE,CAAC;oBACtC,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;wBAC3B,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;wBAC7B,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;wBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACtB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,KAAK,CAAC,GAAQ;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,IAAI,iDAAuB,EAAE,CAAC;oBACtC,CAAC;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAC3B,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;oBAC7B,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;oBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC;oBACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC5B,CAAC;gBAED,QAAQ;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,IAAI,iDAAuB,EAAE,CAAC;oBACtC,CAAC;oBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAC3B,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;oBAC7B,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;oBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACrB,CAAC;oBACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC5B,CAAC;gBAED,WAAW;oBACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,IAAI,iDAAuB,EAAE,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACzB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBACnC,MAAM,CAAC,2BAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC1B,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC,2BAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAChC,MAAM,CAAC,IAAI,yCAAmB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC;gBAED,YAAY;oBACV,MAAM,UAAU,GAAG,IAAI,uBAAU,EAAK,CAAC;oBACjC,UAAW,CAAC,MAAM,GAAG,IAAI,CAAC;oBAChC,MAAM,CAAC,UAAU,CAAC;gBACpB,CAAC;YACH,CAAC;YAhFQ,cAAM,GAAa,CAAI,WAAwB,EAAE,MAAqB;gBAC3E,MAAM,CAAC,IAAI,gBAAgB,CAAI,WAAW,EAAE,MAAM,CAAC,CAAC;YACtD,CAAC,CAAC;YAtBJ,8BAoGC,CAAA;YAED;;eAEG;YACH,+BAAyC,OAAO;gBAC9C,YAAsB,WAAyB,EAAE,MAAsB;oBACrE,OAAO,CAAC;oBADY,gBAAW,GAAX,WAAW,CAAc;oBAE7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,CAAC;gBAED,IAAI,CAAC,KAAQ;oBACX,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;wBACpC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAED,KAAK,CAAC,GAAQ;oBACZ,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,QAAQ;oBACN,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACxC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;oBACxB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBAC3C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,2BAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;gBACH,CAAC;YACH,CAAC;YAnCD,gDAmCC,CAAA;;;;;;;;;;;;;;;;;;YC7JD;;eAEG;YACH,2BAAqC,iBAAO;gBAA5C;oBAAqC,eAAU;oBACrC,UAAK,GAAM,IAAI,CAAC;oBAChB,YAAO,GAAY,KAAK,CAAC;oBACzB,iBAAY,GAAY,KAAK,CAAC;gBA6BxC,CAAC;gBA3BW,UAAU,CAAC,UAA2B;oBAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACtC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC5B,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC,2BAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACzB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBACnC,MAAM,CAAC,2BAAY,CAAC,KAAK,CAAC;oBAC5B,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBAED,IAAI,CAAC,KAAQ;oBACX,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACtB,CAAC;gBACH,CAAC;gBAED,QAAQ;oBACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACzB,CAAC;oBACD,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACnB,CAAC;YACH,CAAC;YAhCD,wCAgCC,CAAA;;;;;;;;;;;;;;;;;;YClCD;;eAEG;YACH,8BAAwC,iBAAO;gBAE7C,YAAoB,MAAS;oBAC3B,OAAO,CAAC;oBADU,WAAM,GAAN,MAAM,CAAG;gBAE7B,CAAC;gBAED,IAAI,KAAK;oBACP,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBAClD,EAAE,CAAC,CAAC,YAAY,IAAI,CAAiB,YAAa,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC1D,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,CAAC;oBACD,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;gBAED,QAAQ;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,MAAM,IAAI,CAAC,WAAW,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,KAAQ;oBACX,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;gBAClC,CAAC;YACH,CAAC;YA/BD,8CA+BC,CAAA;;;;;;;;;ICnCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCG;IACH,aAA0B,OAAuC,EAAE,OAAa;QAC9E,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,SAAS,CAAC,4DAA4D,CAAC,CAAC;QACpF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IACtD,CAAC;IALD,sBAKC,CAAA;;;;;;;YAMD;gBACE,YAAoB,OAAuC,EAAU,OAAY;oBAA7D,YAAO,GAAP,OAAO,CAAgC;oBAAU,YAAO,GAAP,OAAO,CAAK;gBACjF,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtF,CAAC;YACH,CAAC;YAPD,sCAOC,CAAA;YAED;;;;eAIG;YACH,4BAAkC,uBAAU;gBAI1C,YAAY,WAA0B,EAClB,OAAuC,EAC/C,OAAY;oBACtB,MAAM,WAAW,CAAC,CAAC;oBAFD,YAAO,GAAP,OAAO,CAAgC;oBAJ3D,UAAK,GAAW,CAAC,CAAC;oBAOhB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC;gBACjC,CAAC;gBAED,mEAAmE;gBACnE,iCAAiC;gBACvB,KAAK,CAAC,KAAQ;oBACtB,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAChE,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA;;;;;;;;IC5DD;QACE,EAAE,CAAC,CAAC,WAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,MAAM,GAAG,GAAG,IAAI,WAAI,CAAC,cAAc,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,iBAAiB,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC7B,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;YAC/C,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,WAAI,CAAC,cAAc,EAAE,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED;QACE,EAAE,CAAC,CAAC,WAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,WAAI,CAAC,cAAc,EAAE,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,MAAc,CAAC;YACnB,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;gBAC9E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3B,IAAI,CAAC;wBACH,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBACpB,EAAE,CAAC,CAAC,IAAI,WAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BACnC,KAAK,CAAC;wBACR,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEb,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,IAAI,WAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACxC,CAAE;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;YACrE,CAAC;QACH,CAAC;IACH,CAAC;IAWD,iBAAwB,GAAW,EAAE,OAAO,GAAW,IAAI;QACzD,MAAM,CAAC,IAAI,cAAc,CAAe,EAAE,MAAM,EAAE,KAAK,EAAE,KAAA,GAAG,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;IAFD,8BAEC,CAAA;IAED,kBAAyB,GAAW,EAAE,IAAU,EAAE,OAAgB;QAChE,MAAM,CAAC,IAAI,cAAc,CAAe,EAAE,MAAM,EAAE,MAAM,EAAE,KAAA,GAAG,EAAE,MAAA,IAAI,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC;IAClF,CAAC;IAFD,gCAEC,CAAA;IAED,oBAA2B,GAAW,EAAE,OAAgB;QACtD,MAAM,CAAC,IAAI,cAAc,CAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAA,GAAG,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC;IAC9E,CAAC;IAFD,oCAEC,CAAA;IAED,iBAAwB,GAAW,EAAE,IAAU,EAAE,OAAgB;QAC/D,MAAM,CAAC,IAAI,cAAc,CAAe,EAAE,MAAM,EAAE,KAAK,EAAE,KAAA,GAAG,EAAE,MAAA,IAAI,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC;IACjF,CAAC;IAFD,8BAEC,CAAA;IAED,qBAA+B,GAAW,EAAE,OAAgB;QAC1D,MAAM,CAAC,IAAI,cAAc,CAAe,EAAE,MAAM,EAAE,KAAK,EAAE,KAAA,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,SAAA,OAAO,EAAE,CAAC;aAC3F,IAAI,CAAI,IAAI,iBAAW,CAAkB,CAAC,CAAe,EAAE,KAAa,KAAQ,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IACxG,CAAC;IAHD,sCAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;YAjBA,CAAC;YAID,CAAC;YAID,CAAC;YAID,CAAC;YAKD,CAAC;YAEF;;;;eAIG;YACH,6BAAuC,uBAAU;gBA2C/C,YAAY,YAAkC;oBAC5C,OAAO,CAAC;oBAER,MAAM,OAAO,GAAgB;wBAC3B,KAAK,EAAE,IAAI;wBACX,SAAS,EAAE;4BACT,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,iBAAiB,EAAE,CAAC;wBAC5E,CAAC;wBACD,WAAW,EAAE,KAAK;wBAClB,eAAe,EAAE,KAAK;wBACtB,OAAO,EAAE,EAAE;wBACX,MAAM,EAAE,KAAK;wBACb,YAAY,EAAE,MAAM;wBACpB,OAAO,EAAE,CAAC;qBACX,CAAC;oBAEF,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACrC,OAAO,CAAC,GAAG,GAAG,YAAY,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC;4BAChC,EAAE,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACtC,OAAO,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;4BACrC,CAAC;wBACH,CAAC;oBACH,CAAC;oBAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACzB,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;YA1EC;;;;;;;;;;;;;;;;;;;;;;;;;cAyBE;YACK,qBAAM,GAAuB,CAAC;gBACnC,MAAM,MAAM,GAAQ,CAAC,YAAkC;oBACrD,MAAM,CAAC,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;gBAC1C,CAAC,CAAC;gBAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;gBACrB,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACvB,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;gBAC3B,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;gBACrB,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC;gBAE7B,MAAM,CAAqB,MAAM,CAAC;YACpC,CAAC,CAAC,EAAE,CAAC;YAvCP,4CA2EC,CAAA;YAED;;;;eAIG;YACH,6BAAuC,uBAAU;gBAI/C,YAAY,WAA0B,EAAS,OAAoB;oBACjE,MAAM,WAAW,CAAC,CAAC;oBAD0B,YAAO,GAAP,OAAO,CAAa;oBAF3D,SAAI,GAAY,KAAK,CAAC;oBAK5B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;oBAExD,0BAA0B;oBAC1B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;wBACzD,OAAO,CAAC,kBAAkB,CAAC,GAAG,gBAAgB,CAAC;oBACjD,CAAC;oBAED,6BAA6B;oBAC7B,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,WAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,YAAY,WAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;wBACrI,OAAO,CAAC,cAAc,CAAC,GAAG,kDAAkD,CAAC;oBAC/E,CAAC;oBAED,0BAA0B;oBAC1B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;oBAEjF,IAAI,CAAC,IAAI,EAAE,CAAC;gBACd,CAAC;gBAED,IAAI,CAAC,CAAQ;oBACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC3C,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;oBAEnD,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7B,CAAC;gBAEO,IAAI;oBACV,MAAM,EACJ,OAAO,EACP,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,EAC/D,GAAG,IAAI,CAAC;oBACT,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;oBACpC,MAAM,GAAG,GAAmB,mBAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAE9D,EAAE,CAAC,CAAM,GAAG,KAAK,yBAAW,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBAEf,iBAAiB;wBACjB,IAAI,MAAW,CAAC;wBAChB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACT,MAAM,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;wBAC5E,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC5D,CAAC;wBAED,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;4BAC1B,MAAM,CAAC,IAAI,CAAC;wBACd,CAAC;wBAED,2DAA2D;wBAC3D,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;wBAC9B,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;wBAExC,cAAc;wBACd,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;wBAE9B,wBAAwB;wBACxB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;wBAE/B,2BAA2B;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACT,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACjB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,GAAG,CAAC,IAAI,EAAE,CAAC;wBACb,CAAC;oBACH,CAAC;oBAED,MAAM,CAAC,GAAG,CAAC;gBACb,CAAC;gBAEO,aAAa,CAAC,IAAS,EAAE,WAAoB;oBACnD,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACtC,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAI,CAAC,QAAQ,IAAI,IAAI,YAAY,WAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1D,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBAChB,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBAC5C,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtB,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;wBACrD,CAAC;oBACH,CAAC;oBAED,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACpB,KAAK,mCAAmC;4BACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAC7F,KAAK,kBAAkB;4BACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAC9B;4BACE,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;gBACH,CAAC;gBAEO,UAAU,CAAC,GAAmB,EAAE,OAAe;oBACrD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;wBACxB,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BAChC,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC1C,CAAC;oBACH,CAAC;gBACH,CAAC;gBAEO,WAAW,CAAC,GAAmB,EAAE,OAAoB;oBAC3D,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;oBAEtD,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;wBACnC,MAAM,EAAC,UAAU,EAAE,kBAAkB,EAAE,OAAO,EAAE,GAAS,UAAW,CAAC;wBACrE,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BACvB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC9B,CAAC;wBACD,UAAU,CAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,sBAAsB;oBAC/E,CAAC,CAAC;oBACI,GAAG,CAAC,SAAU,CAAC,OAAO,GAAG,OAAO,CAAC;oBACjC,GAAG,CAAC,SAAU,CAAC,UAAU,GAAG,IAAI,CAAC;oBACjC,GAAG,CAAC,SAAU,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBAE7D,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,iBAAiB,IAAI,GAAG,IAAI,WAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBAClE,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BACvB,GAAG,CAAC,UAAU,GAAG,qBAAqB,CAAC;gCACrC,MAAM,EAAE,kBAAkB,EAAE,GAAS,WAAY,CAAC;gCAClD,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC7B,CAAC,CAAC;4BACI,GAAG,CAAC,UAAW,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;wBAChE,CAAC;wBAED,GAAG,CAAC,OAAO,GAAG,kBAAkB,CAAC;4BAC/B,MAAM,EAAE,kBAAkB,EAAE,UAAU,EAAE,OAAO,EAAE,GAAS,QAAS,CAAC;4BACpE,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gCACvB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC9B,CAAC;4BACD,UAAU,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,YAAY,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;wBAC/D,CAAC,CAAC;wBACI,GAAG,CAAC,OAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC/B,GAAG,CAAC,OAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;wBAC/B,GAAG,CAAC,OAAQ,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBAC7D,CAAC;oBAED,GAAG,CAAC,kBAAkB,GAAG,6BAA6B,CAAC;wBACrD,MAAM,EAAE,UAAU,EAAE,kBAAkB,EAAE,OAAO,EAAE,GAAS,mBAAoB,CAAC;wBAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC1B,yDAAyD;4BACzD,IAAI,MAAM,GAAW,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;4BAC9D,IAAI,QAAQ,GAAQ,CAAC,IAAI,CAAC,YAAY,KAAK,MAAM,GAAI,CACnD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAEvD,2DAA2D;4BAC3D,uEAAuE;4BACvE,iDAAiD;4BACjD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gCACjB,MAAM,GAAG,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;4BAC9B,CAAC;4BAED,EAAE,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;gCAClC,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oCACvB,kBAAkB,CAAC,QAAQ,EAAE,CAAC;gCAChC,CAAC;gCACD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnB,UAAU,CAAC,QAAQ,EAAE,CAAC;4BACxB,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oCACvB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC9B,CAAC;gCACD,UAAU,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,aAAa,GAAG,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;4BACzE,CAAC;wBACH,CAAC;oBACH,CAAC,CAAC;oBACI,GAAG,CAAC,kBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC;oBAC1C,GAAG,CAAC,kBAAmB,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBAChE,GAAG,CAAC,kBAAmB,CAAC,OAAO,GAAG,OAAO,CAAC;gBAClD,CAAC;gBAED,WAAW;oBACT,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;oBAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,GAAG,CAAC,KAAK,EAAE,CAAC;oBACd,CAAC;oBACD,KAAK,CAAC,WAAW,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;YA5LD,4CA4LC,CAAA;YAED;;;;;;eAMG;YACH;gBAaE,YAAmB,aAAoB,EAAS,GAAmB,EAAS,OAAoB;oBAA7E,kBAAa,GAAb,aAAa,CAAO;oBAAS,QAAG,GAAH,GAAG,CAAgB;oBAAS,YAAO,GAAP,OAAO,CAAa;oBAC9F,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;oBACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC;oBAE7D,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC1B,KAAK,MAAM;4BACT,EAAE,CAAC,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;gCACtB,+DAA+D;gCAC/D,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC;4BAC3G,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC;4BACzD,CAAC;4BACD,KAAK,CAAC;wBACR,KAAK,KAAK;4BACR,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC;4BAChC,KAAK,CAAC;wBACR,KAAK,MAAM,CAAC;wBACZ;4BACE,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;4BACtE,KAAK,CAAC;oBACV,CAAC;gBACH,CAAC;YACH,CAAC;YAnCD,wCAmCC,CAAA;YAED;;;;;;eAMG;YACH,wBAA+B,KAAK;gBAUlC,YAAY,OAAe,EAAE,GAAmB,EAAE,OAAoB;oBACpE,MAAM,OAAO,CAAC,CAAC;oBACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC3B,CAAC;YACH,CAAC;YAjBD,kCAiBC,CAAA;YAED;;;;eAIG;YACH,+BAAsC,SAAS;gBAC7C,YAAY,GAAmB,EAAE,OAAoB;oBACnD,MAAM,cAAc,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;YAJD,gDAIC,CAAA;;;;;;;;;;;YC9bD;;;;;;eAMG;YACH;gBAAA;oBACE;;uBAEG;oBACH,QAAG,GAAW,EAAE,CAAC;oBACjB;;uBAEG;oBACH,SAAI,GAAQ,CAAC,CAAC;oBACd;;uBAEG;oBACH,SAAI,GAAW,EAAE,CAAC;oBAClB;;uBAEG;oBACH,UAAK,GAAY,KAAK,CAAC;oBACvB;;uBAEG;oBACH,WAAM,GAAW,EAAE,CAAC;oBACpB;;uBAEG;oBACH,YAAO,GAAW,IAAI,CAAC;oBACvB;;uBAEG;oBACH,YAAO,GAAW,CAAC,CAAC;oBACpB;;uBAEG;oBACH,aAAQ,GAAW,EAAE,CAAC;oBACtB;;uBAEG;oBACH,eAAU,GAAY,KAAK,CAAC;oBAC5B;;uBAEG;oBACH,gBAAW,GAAY,KAAK,CAAC;oBAO7B;;uBAEG;oBACH,uBAAkB,GAAoB,IAAI,CAAC;oBAQ3C;;uBAEG;oBACH,iBAAY,GAAW,EAAE,CAAC;gBAC5B,CAAC;gBArBC;;mBAEG;gBACH,SAAS;oBACP,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAKD;;;mBAGG;gBACH,cAAc,CAAI,QAAsB;oBACtC,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YAKH,CAAC;YA9DD,4CA8DC,CAAA;;;;;;;;;;;;;;;;;YC3DD;;;;eAIG;YACH;gBACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA6CG;gBACH,OAAO,MAAM,CAAI,SAA2D;oBAC1E,MAAM,CAAC,IAAI,uBAAU,CAAI,SAAS,CAAC,CAAC;gBACtC,CAAC;;YACH,CAAC;YAlDD,0CAkDC,CAAA;YAED;;;;;;;;;;;;;;;;;;;;;;;eAuBG;YACH;gBAAA;oBACE;;;;uBAIG;oBACH,WAAM,GAAY,KAAK,CAAC;gBA6B1B,CAAC;gBA5BC;;;;;mBAKG;gBACH,IAAI,CAAC,KAAQ;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC;gBACD;;;;;;mBAMG;gBACH,KAAK,CAAC,GAAQ;oBACZ,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC;gBACD;;;;;mBAKG;gBACH,QAAQ;oBACN,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC;YACH,CAAC;YAnCD,sCAmCC,CAAA;;;;;;;;;;;;;;;YC9HD;;;;;;;;;;;;;eAaG;YACH;gBAGE,YAAmB,IAAY,EAAS,KAAS,EAAS,SAAe;oBAAtD,SAAI,GAAJ,IAAI,CAAQ;oBAAS,UAAK,GAAL,KAAK,CAAI;oBAAS,cAAS,GAAT,SAAS,CAAM;oBACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,GAAG,CAAC;gBAC/B,CAAC;gBAED;;;;mBAIG;gBACH,OAAO,CAAC,QAA4B;oBAClC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,KAAK,GAAG;4BACN,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpD,KAAK,GAAG;4BACN,MAAM,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC1D,KAAK,GAAG;4BACN,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACpD,CAAC;gBACH,CAAC;gBAED;;;;;;;mBAOG;gBACH,EAAE,CAAC,IAAwB,EAAE,KAA0B,EAAE,QAAqB;oBAC5E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,KAAK,GAAG;4BACN,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAClC,KAAK,GAAG;4BACN,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACxC,KAAK,GAAG;4BACN,MAAM,CAAC,QAAQ,IAAI,QAAQ,EAAE,CAAC;oBAClC,CAAC;gBACH,CAAC;gBAED;;;;;;;;mBAQG;gBACH,MAAM,CAAC,cAAyD,EAAE,KAA0B,EAAE,QAAqB;oBACjH,EAAE,CAAC,CAAC,cAAc,IAAI,OAA4B,cAAe,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;wBACtF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAqB,cAAc,CAAC,CAAC;oBAC1D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC,EAAE,CAAqB,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBACtE,CAAC;gBACH,CAAC;gBAED;;;;mBAIG;gBACH,YAAY;oBACV,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,KAAK,GAAG;4BACN,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnC,KAAK,GAAG;4BACN,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC1C,KAAK,GAAG;4BACN,MAAM,CAAC,uBAAU,CAAC,KAAK,EAAK,CAAC;oBACjC,CAAC;oBACD,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBACxD,CAAC;gBAKD;;;;;;mBAMG;gBACH,OAAO,UAAU,CAAI,KAAQ;oBAC3B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;wBACjC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC;gBACzC,CAAC;gBAED;;;;;;mBAMG;gBACH,OAAO,WAAW,CAAI,GAAS;oBAC7B,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;gBAC/C,CAAC;gBAED;;;mBAGG;gBACH,OAAO,cAAc;oBACnB,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;gBACnC,CAAC;YACH,CAAC;YAnCgB,iCAAoB,GAAsB,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;YAChE,uCAA0B,GAAsB,IAAI,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YA/ElG,wCAiHC,CAAA;;;;;;;;;;;;;;;YC/HD,6BAAoC,qBAAS;gBAA7C;oBAAoC,eAAS;oBACpC,YAAO,GAA4B,EAAE,CAAC;oBAC7C;;;;uBAIG;oBACI,WAAM,GAAY,KAAK,CAAC;oBAC/B;;;;;uBAKG;oBACI,cAAS,GAAQ,SAAS,CAAC;gBA6BpC,CAAC;gBA3BQ,KAAK,CAAC,MAAwB;oBAEnC,MAAM,EAAC,OAAO,EAAC,GAAG,IAAI,CAAC;oBAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,KAAU,CAAC;oBACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBAEnB,GAAG,CAAC;wBACF,EAAE,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACvD,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC,QAAQ,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,8BAA8B;oBAElE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,OAAO,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;4BAChC,MAAM,CAAC,WAAW,EAAE,CAAC;wBACvB,CAAC;wBACD,MAAM,KAAK,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YA3CD,4CA2CC,CAAA;;;;;;;;;;;;;;;;;;YCzCD;;;;eAIG;YACH,0BAAoC,eAAM;gBAOxC,YAAsB,SAAyB,EACzB,IAAyB;oBAC7C,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC;oBAFH,cAAS,GAAT,SAAS,CAAgB;oBACzB,SAAI,GAAJ,IAAI,CAAqB;oBAHrC,YAAO,GAAY,KAAK,CAAC;gBAKnC,CAAC;gBAEM,QAAQ,CAAC,KAAS,EAAE,KAAK,GAAW,CAAC;oBAE1C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBAEF,uDAAuD;oBACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEnB,0EAA0E;oBAC1E,sCAAsC;oBACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE;oBACF,iCAAiC;oBACjC,EAAE;oBACF,2EAA2E;oBAC3E,oEAAoE;oBACpE,2EAA2E;oBAC3E,qEAAqE;oBACrE,EAAE;oBACF,4EAA4E;oBAC5E,4EAA4E;oBAC5E,sEAAsE;oBACtE,yEAAyE;oBACzE,wEAAwE;oBACxE,uCAAuC;oBACvC,EAAE;oBACF,yEAAyE;oBACzE,4EAA4E;oBAC5E,oEAAoE;oBACpE,0EAA0E;oBAC1E,aAAa;oBACb,EAAE;oBACF,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACtD,CAAC;oBAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,mEAAmE;oBACnE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;oBAEpE,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAES,cAAc,CAAC,SAAyB,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBAC7E,MAAM,CAAC,WAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;gBACxE,CAAC;gBAES,cAAc,CAAC,SAAyB,EAAE,EAAO,EAAE,KAAK,GAAW,CAAC;oBAC5E,uFAAuF;oBACvF,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3C,MAAM,CAAC,EAAE,CAAC;oBACZ,CAAC;oBACD,6EAA6E;oBAC7E,wBAAwB;oBACxB,MAAM,CAAC,WAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,SAAS,IAAI,SAAS,CAAC;gBAC1D,CAAC;gBAED;;;mBAGG;gBACI,OAAO,CAAC,KAAQ,EAAE,KAAa;oBAEpC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,CAAC,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;oBACnD,CAAC;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC1C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBACrD,6DAA6D;wBAC7D,4DAA4D;wBAC5D,eAAe;wBACf,MAAM;wBACN,gDAAgD;wBAChD,wCAAwC;wBACxC,+BAA+B;wBAC/B,oDAAoD;wBACpD,6BAA6B;wBAC7B,4CAA4C;wBAC5C,aAAa;wBACb,YAAY;wBACZ,MAAM;wBACN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;oBAC/D,CAAC;gBACH,CAAC;gBAES,QAAQ,CAAC,KAAQ,EAAE,KAAa;oBACxC,IAAI,OAAO,GAAY,KAAK,CAAC;oBAC7B,IAAI,UAAU,GAAQ,SAAS,CAAC;oBAChC,IAAI,CAAC;wBACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,CAAE;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,OAAO,GAAG,IAAI,CAAC;wBACf,UAAU,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxC,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,MAAM,CAAC,UAAU,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAES,YAAY;oBAEpB,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;oBAClC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAEpC,IAAI,CAAC,IAAI,GAAI,IAAI,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBAEtB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC3B,CAAC;oBAED,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;oBACrD,CAAC;gBACH,CAAC;YACH,CAAC;YA9ID,sCA8IC,CAAA;;;;;;;;;;;;;;;YCtJD,6BAAoC,+BAAc;YAClD,CAAC;YADD,4CACC,CAAA;;;;;;;;;;;;;;;YCCD;;;;eAIG;YACH,0BAAoC,yBAAW;gBAE7C,YAAsB,SAAyB,EACzB,IAAyB;oBAC7C,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC;oBAFH,cAAS,GAAT,SAAS,CAAgB;oBACzB,SAAI,GAAJ,IAAI,CAAqB;gBAE/C,CAAC;gBAEM,QAAQ,CAAC,KAAS,EAAE,KAAK,GAAW,CAAC;oBAC1C,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAC;oBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC3B,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAEM,OAAO,CAAC,KAAQ,EAAE,KAAa;oBACpC,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;wBAC/B,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;wBAC3B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAE;gBACjC,CAAC;gBAES,cAAc,CAAC,SAAyB,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBAC7E,0DAA0D;oBAC1D,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACpD,CAAC;oBACD,2DAA2D;oBAC3D,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC/B,CAAC;YACH,CAAC;YA/BD,sCA+BC,CAAA;;;;;;;;QCrCY,KAAK;;;;;;;;;;YAAL,oBAAA,KAAK,GAAG,IAAI,+BAAc,CAAC,yBAAW,CAAC,CAAA,CAAC;;;;;;;;;ICKrD;;;;;;;;OAQG;IACH,mBAA6B,SAAoB,EAAE,KAAK,GAAW,CAAC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,CAAC;IAFD,kCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,SAAoB,EAAU,KAAK,GAAW,CAAC;oBAA/C,cAAS,GAAT,SAAS,CAAW;oBAAU,UAAK,GAAL,KAAK,CAAY;gBACnE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5F,CAAC;YACH,CAAC;YAPD,kDAOC,CAAA;YAED;;;;eAIG;YACH,kCAA4C,uBAAU;gBAMpD,YAAY,WAA0B,EAClB,SAAoB,EACpB,KAAK,GAAW,CAAC;oBACnC,MAAM,WAAW,CAAC,CAAC;oBAFD,cAAS,GAAT,SAAS,CAAW;oBACpB,UAAK,GAAL,KAAK,CAAY;gBAErC,CAAC;gBATD,OAAO,QAAQ,CAAC,GAAqB;oBACnC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC;oBAC1C,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACpC,CAAC;gBAQO,eAAe,CAAC,YAA+B;oBACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,EAC5B,IAAI,CAAC,KAAK,EACV,IAAI,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC1F,CAAC;gBAEQ,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvD,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,cAAc,EAAE,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;YA7BD,sDA6BC,CAAA;YAED;gBACE,YAAmB,YAA+B,EAC/B,WAAiC;oBADjC,iBAAY,GAAZ,YAAY,CAAmB;oBAC/B,gBAAW,GAAX,WAAW,CAAsB;gBACpD,CAAC;YACH,CAAC;YAJD,gDAIC,CAAA;;;;;;;;;;;;;;;;;;;;;YCnED;;eAEG;YACH,4BAAsC,iBAAO;gBAK3C,YAAY,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,UAAU,GAAW,MAAM,CAAC,iBAAiB,EACrC,SAAqB;oBACvC,OAAO,CAAC;oBADU,cAAS,GAAT,SAAS,CAAY;oBANjC,YAAO,GAAqB,EAAE,CAAC;oBAQrC,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;oBACnD,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;gBACrD,CAAC;gBAED,IAAI,CAAC,KAAQ;oBACX,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,+BAAmB,CAAI,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;oBACjF,CAAC;oBAED,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACnD,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBACpC,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBAED,OAAO;oBACL,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,aAAK,CAAC,CAAC,GAAG,EAAE,CAAC;gBACzC,CAAC;gBAEO,wBAAwB;oBAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAE7B,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;oBACjC,IAAI,WAAW,GAAG,CAAC,CAAC;oBAEpB,gDAAgD;oBAChD,mDAAmD;oBACnD,sDAAsD;oBACtD,OAAO,WAAW,GAAG,WAAW,EAAE,CAAC;wBACjC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;4BACpD,KAAK,CAAC;wBACR,CAAC;wBACD,WAAW,EAAE,CAAC;oBAChB,CAAC;oBAED,EAAE,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC;wBAC9B,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,GAAG,WAAW,CAAC,CAAC;oBACjE,CAAC;oBAED,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;wBACpB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;oBACjC,CAAC;oBAED,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;YACH,CAAC;YArED,0CAqEC,CAAA;YAED;gBACE,YAAmB,IAAY,EAAS,KAAQ;oBAA7B,SAAI,GAAJ,IAAI,CAAQ;oBAAS,UAAK,GAAL,KAAK,CAAG;gBAChD,CAAC;YACH,CAAC;YAAA;;;;;;;;ICkFD,sBAAyB,GAAuB;QAC9C,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,OAAO,CAAC,QAAQ,EAAE,CAAC;IACrB,CAAC;IAMD,uBAA0B,GAAwB;QAChD,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;;;;;;;;;;;;;;;;YA3KD;;;;eAIG;YACH,sCAAgD,uBAAU;gBAkExD,YAAoB,YAAsB,EACtB,QAAkB,EAClB,IAAW,EACX,SAAoB;oBACtC,OAAO,CAAC;oBAJU,iBAAY,GAAZ,YAAY,CAAU;oBACtB,aAAQ,GAAR,QAAQ,CAAU;oBAClB,SAAI,GAAJ,IAAI,CAAO;oBACX,cAAS,GAAT,SAAS,CAAW;gBAExC,CAAC;gBAnDD,mCAAmC;gBAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAmCG;gBACH,OAAO,MAAM,CAAI,IAAc,EACd,QAAQ,GAAoB,SAAS,EACrC,SAAqB;oBACpC,MAAM,CAAC,CAAC,GAAG,IAAW;wBACpB,MAAM,CAAC,IAAI,uBAAuB,CAAI,IAAI,EAAO,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;oBAC9E,CAAC,CAAC;gBACJ,CAAC;gBASS,UAAU,CAAC,UAA+B;oBAClD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAE3B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACf,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACb,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,2BAAY,EAAK,CAAC;4BAC/C,MAAM,OAAO,GAAG,mBAAmB,GAAG,SAAgB;gCACpD,MAAM,MAAM,GAAS,SAAU,CAAC,MAAM,CAAC;gCACvC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;gCACrC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oCACb,MAAM,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oCACzD,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;wCAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;oCACjC,CAAC;oCAAC,IAAI,CAAC,CAAC;wCACJ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wCACrB,OAAO,CAAC,QAAQ,EAAE,CAAC;oCACrB,CAAC;gCACH,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;oCAChE,OAAO,CAAC,QAAQ,EAAE,CAAC;gCACrB,CAAC;4BACH,CAAC,CAAC;4BACF,gDAAgD;4BAC1C,OAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;4BAE7B,MAAM,MAAM,GAAG,mBAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4BACxE,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;gCAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;4BAC/B,CAAC;wBACH,CAAC;wBACD,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACvC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC;oBAC/F,CAAC;gBACH,CAAC;gBAED,OAAO,QAAQ,CAAI,KAAwE;oBACzF,MAAM,IAAI,GAAuB,IAAK,CAAC;oBACvC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBACrC,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;oBACjD,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAE7B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,2BAAY,EAAK,CAAC;wBAEjD,MAAM,OAAO,GAAG,mBAAmB,GAAG,SAAgB;4BACpD,MAAM,MAAM,GAAS,SAAU,CAAC,MAAM,CAAC;4BACvC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;4BACrC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACb,MAAM,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gCACzD,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;oCAC3B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,yBAAW,CAAC,CAAC,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;gCAClF,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;gCAC5E,CAAC;4BACH,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;gCAChE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,OAAA,KAAK,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;4BACpE,CAAC;wBACH,CAAC,CAAC;wBACF,uDAAuD;wBACjD,OAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;wBAE/B,MAAM,MAAM,GAAG,mBAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;wBACxE,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAC/B,CAAC;oBACH,CAAC;oBAED,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1C,CAAC;YACH,CAAC;YAnJD,8DAmJC,CAAA;;;;;;;;QC9JY,YAAY;;;;;;;YAAZ,2BAAA,YAAY,GAAG,iDAAuB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC3D,wBAAU,CAAC,YAAY,GAAG,2BAAkB,CAAC;;;;;;;;;IC2H7C,kBAAqB,KAA4E;QAC/F,MAAM,IAAI,GAAmB,IAAK,CAAC;QACnC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;QACrC,iEAAiE;QACjE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,MAAa,CAAC;QACxD,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE7B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,2BAAY,EAAK,CAAC;YAEjD,MAAM,OAAO,GAAG,mBAAmB,GAAG,SAAgB;gBACpD,MAAM,MAAM,GAAS,SAAU,CAAC,MAAM,CAAC;gBACvC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;gBACrC,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;gBAE9B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACpB,MAAM,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBACzD,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,yBAAW,CAAC,CAAC,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;oBAClF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;oBAC5E,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBAChE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,OAAA,KAAK,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;gBACpE,CAAC;YACH,CAAC,CAAC;YACF,uDAAuD;YACjD,OAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YAE/B,MAAM,MAAM,GAAG,mBAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1C,CAAC;IAMD,sBAAyB,GAAuB;QAC9C,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,OAAO,CAAC,QAAQ,EAAE,CAAC;IACrB,CAAC;IAMD,uBAA0B,GAAwB;QAChD,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;;;;;;;;;;;;;;;;YAhLD;;;;eAIG;YACH,0CAAoD,wBAAU;gBA8D5D,YAAoB,YAAsB,EACtB,QAAkB,EAClB,IAAW,EACZ,SAAoB;oBACrC,OAAO,CAAC;oBAJU,iBAAY,GAAZ,YAAY,CAAU;oBACtB,aAAQ,GAAR,QAAQ,CAAU;oBAClB,SAAI,GAAJ,IAAI,CAAO;oBACZ,cAAS,GAAT,SAAS,CAAW;gBAEvC,CAAC;gBAtDD,mCAAmC;gBAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAsCG;gBACH,OAAO,MAAM,CAAI,IAAc,EACd,QAAQ,GAAoB,SAAS,EACrC,SAAqB;oBACpC,MAAM,CAAC,CAAC,GAAG,IAAW;wBACpB,MAAM,CAAC,IAAI,2BAA2B,CAAI,IAAI,EAAO,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;oBAClF,CAAC,CAAC;gBACJ,CAAC;gBASS,UAAU,CAAC,UAA+B;oBAClD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAE3B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACf,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACb,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,2BAAY,EAAK,CAAC;4BAC/C,MAAM,OAAO,GAAG,mBAAmB,GAAG,SAAgB;gCACpD,MAAM,MAAM,GAAS,SAAU,CAAC,MAAM,CAAC;gCACvC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;gCACrC,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;gCAE9B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oCACR,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACrB,CAAC;gCAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oCACpB,MAAM,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oCACzD,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;wCAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;oCAC/B,CAAC;oCAAC,IAAI,CAAC,CAAC;wCACN,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wCACrB,OAAO,CAAC,QAAQ,EAAE,CAAC;oCACrB,CAAC;gCACH,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;oCAChE,OAAO,CAAC,QAAQ,EAAE,CAAC;gCACrB,CAAC;4BACH,CAAC,CAAC;4BACF,gDAAgD;4BAC1C,OAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;4BAE7B,MAAM,MAAM,GAAG,mBAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4BACxE,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;gCAC3B,OAAO,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;4BAC/B,CAAC;wBACH,CAAC;wBACD,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACvC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC;oBACvE,CAAC;gBACH,CAAC;YACH,CAAC;YA/GD,sEA+GC,CAAA;;;;;;;;QC1HY,gBAAgB;;;;;;;YAAhB,+BAAA,gBAAgB,GAAG,yDAA2B,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCnE,wBAAU,CAAC,gBAAgB,GAAG,mCAAsB,CAAC;;;;;;;ICFrD,qBAA+B,KAAU;QACvC,MAAM,CAAC,KAAK,IAAI,OAAa,KAAM,CAAC,QAAQ,KAAK,UAAU,CAAC;IAC9D,CAAC;IAFD,sCAEC,CAAA;;;;;;;;;;;;;;;;;;YCED;;;;eAIG;YACH,+BAAyC,wBAAU;gBAwBjD,YAAmB,KAAQ,EAAU,SAAqB;oBACxD,OAAO,CAAC;oBADS,UAAK,GAAL,KAAK,CAAG;oBAAU,cAAS,GAAT,SAAS,CAAY;oBAF1D,cAAS,GAAY,IAAI,CAAC;oBAIxB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACzB,CAAC;gBACH,CAAC;gBA5BD,OAAO,MAAM,CAAI,KAAQ,EAAE,SAAqB;oBAC9C,MAAM,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAChD,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBACxB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAE1C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;oBACX,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAWS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACtD,IAAI,EAAE,KAAK,EAAE,OAAA,KAAK,EAAE,YAAA,UAAU;yBAC/B,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;4BACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACxB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YA9CD,gDA8CC,CAAA;;;;;;;;;;;;;;;YC/CD;;;;eAIG;YACH,8BAAwC,wBAAU;gBAgDhD,YAAoB,SAAqB;oBACvC,OAAO,CAAC;oBADU,cAAS,GAAT,SAAS,CAAY;gBAEzC,CAAC;gBAhDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAoCG;gBACH,OAAO,MAAM,CAAI,SAAqB;oBACpC,MAAM,CAAC,IAAI,eAAe,CAAI,SAAS,CAAC,CAAC;gBAC3C,CAAC;gBAED,OAAO,QAAQ,CAAI,GAAmB;oBACpC,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;oBAC3B,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC;gBAMS,UAAU,CAAC,UAAyB;oBAE5C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC;oBACzE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YA9DD,8CA8DC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;YCpED;;;;eAIG;YACH,8BAAwC,wBAAU;gBA0FhD,YAAoB,KAAU,EAAU,SAAqB;oBAC3D,OAAO,CAAC;oBADU,UAAK,GAAL,KAAK,CAAK;oBAAU,cAAS,GAAT,SAAS,CAAY;oBAE3D,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,CAAC;gBACH,CAAC;gBA9FD,OAAO,MAAM,CAAI,KAAU,EAAE,SAAqB;oBAChD,MAAM,CAAC,IAAI,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAC/C,CAAC;gBASD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAmCG;gBACH,OAAO,EAAE,CAAI,GAAG,KAA2B;oBACzC,IAAI,SAAS,GAAc,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACnD,EAAE,CAAC,CAAC,yBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC3B,KAAK,CAAC,GAAG,EAAE,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,SAAS,GAAG,IAAI,CAAC;oBACnB,CAAC;oBAED,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;oBACzB,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC,IAAI,eAAe,CAAS,KAAK,EAAE,SAAS,CAAC,CAAC;oBACvD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,mCAAgB,CAAS,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;oBAC3D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,iCAAe,CAAI,SAAS,CAAC,CAAC;oBAC3C,CAAC;gBACH,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBAExB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAElD,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;wBACnB,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAE9B,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBAEjB,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAaS,UAAU,CAAC,UAAyB;oBAC5C,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACrD,OAAA,KAAK,EAAE,OAAA,KAAK,EAAE,OAAA,KAAK,EAAE,YAAA,UAAU;yBAChC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACrD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5B,CAAC;wBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YAnHD,8CAmHC,CAAA;;;;;;;;QCxHK,IAAI;IAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAqCG;IACH,uBAAoC,GAAG,WAE+C;QACpF,IAAI,OAAO,GAAiC,IAAI,CAAC;QACjD,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;YAC9D,OAAO,GAAiC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5D,CAAC;QAED,8EAA8E;QAC9E,4EAA4E;QAC5E,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,WAAW,GAAQ,WAAW,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE1B,MAAM,CAAC,IAAI,iCAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;IACnF,CAAC;IAjBD,0CAiBC,CAAA;;;;;;;;;;;;;;;;YAzDK,IAAI,GAAG,EAAE,CAAC;YA8EhB,mCAAmC;YAEnC;gBACE,YAAoB,OAAsC;oBAAtC,YAAO,GAAP,OAAO,CAA+B;gBAC1D,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,uBAAuB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClF,CAAC;YACH,CAAC;YAPD,0DAOC,CAAA;YAED;;;;eAIG;YACH,sCAAmD,iCAAe;gBAMhE,YAAY,WAA0B,EAAU,OAAsC;oBACpF,MAAM,WAAW,CAAC,CAAC;oBAD2B,YAAO,GAAP,OAAO,CAA+B;oBAL9E,WAAM,GAAW,CAAC,CAAC;oBACnB,WAAM,GAAU,EAAE,CAAC;oBACnB,gBAAW,GAAU,EAAE,CAAC;gBAKhC,CAAC;gBAES,KAAK,CAAC,UAAe;oBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;oBAC/B,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;wBAClB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;wBACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7B,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;4BAClC,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC/D,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,cAAc,CAAC,MAAqB;oBAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;oBAClC,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS;0BAC7B,CAAC;0BACD,MAAM,KAAK,IAAI,GAAG,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACxD,MAAM,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;oBAEhC,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;wBACpB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACjB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBAC3B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;wBACxC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAEO,WAAW,CAAC,MAAa;oBAC/B,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAC5C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAjED,8DAiEC,CAAA;;;;;;;;IC3ID,mCAAmC;IAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA0CG;IACH,uBAAoC,GAAG,WAGuB;QAC5D,IAAI,OAAO,GAAkC,IAAI,CAAC;QAClD,IAAI,SAAS,GAAc,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,yBAAW,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,SAAS,GAAc,WAAW,CAAC,GAAG,EAAE,CAAC;QAC3C,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;YAC9D,OAAO,GAAiC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5D,CAAC;QAED,8EAA8E;QAC9E,4EAA4E;QAC5E,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,WAAW,GAA2B,WAAW,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,CAAC,IAAI,iCAAe,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,qCAAqB,CAAO,OAAO,CAAC,CAAC,CAAC;IACpG,CAAC;IAtBD,0CAsBC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YC5FD,wBAAU,CAAC,aAAa,GAAG,6BAAmB,CAAC;;;;;;;;;ICI/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2CG;IACH,kBAA4B,UAAU,GAAW,MAAM,CAAC,iBAAiB;QACvE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAI,UAAU,CAAC,CAAC,CAAC;IACxD,CAAC;IAFD,gCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,UAAkB;oBAAlB,eAAU,GAAV,UAAU,CAAQ;gBACtC,CAAC;gBAED,IAAI,CAAC,QAAqB,EAAE,MAAW;oBACrC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9E,CAAC;YACH,CAAC;YAPD,gDAOC,CAAA;YAED;;;;eAIG;YACH,iCAA2C,iCAAe;gBAKxD,YAAY,WAAwB,EAAU,UAAkB;oBAC9D,MAAM,WAAW,CAAC,CAAC;oBADyB,eAAU,GAAV,UAAU,CAAQ;oBAJxD,iBAAY,GAAY,KAAK,CAAC;oBAC9B,WAAM,GAAoB,EAAE,CAAC;oBAC7B,WAAM,GAAW,CAAC,CAAC;gBAI3B,CAAC;gBAES,KAAK,CAAC,UAAyB;oBACvC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAmB,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;oBAClE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAnCD,oDAmCC,CAAA;;;;;;;;ICtGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACH,gBAA6B,GAAG,WAAoD;QAClF,MAAM,CAAC,YAAY,CAAO,IAAI,EAAE,GAAG,WAAW,CAAC,CAAC;IAClD,CAAC;IAFD,4BAEC,CAAA;IAwBD,mCAAmC;IACnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAwCG;IACH,sBAAmC,GAAG,WAAoD;QACxF,IAAI,SAAS,GAAc,IAAI,CAAC;QAChC,IAAI,IAAI,GAAU,WAAW,CAAC;QAC9B,EAAE,CAAC,CAAC,yBAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,IAAI,iCAAe,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,2BAAgB,CAAI,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IARD,wCAQC,CAAA;;;;;;;;;;;;;;;;;;;;QCxHY,MAAM;;;;;;;YAAN,qBAAA,MAAM,GAAG,qBAAY,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCnC,wBAAU,CAAC,MAAM,GAAG,eAAY,CAAC;;;;;;;;;;;;;;;;;;;;;YCGjC;;;;eAIG;YACH,8BAAwC,wBAAU;gBA8ChD,YAAoB,iBAAwD;oBAC1E,OAAO,CAAC;oBADU,sBAAiB,GAAjB,iBAAiB,CAAuC;gBAE5E,CAAC;gBA9CD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAuCG;gBACH,OAAO,MAAM,CAAI,iBAAwD;oBACvE,MAAM,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,CAAC;gBAChD,CAAC;gBAMS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjE,CAAC;YACH,CAAC;YArDD,8CAqDC,CAAA;YAED,8BAAiC,iCAAe;gBAC9C,YAAY,WAA0B,EAClB,OAA8C;oBAChE,MAAM,WAAW,CAAC,CAAC;oBADD,YAAO,GAAP,OAAO,CAAuC;oBAEhE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC;gBAEO,QAAQ;oBACd,IAAI,CAAC;wBACH,IAAI,CAAC,YAAY,EAAE,CAAC;oBACtB,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAEO,YAAY;oBAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;oBAC5C,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;QCrFY,KAAK;;;;;;;YAAL,oBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;QCDlB,KAAK;;;;;;;YAAL,oBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;YCO/B;;;;eAIG;YACH,iCAA2C,wBAAU;gBACnD,YAAoB,OAA0C,EAC1C,cAA6C;oBAC/D,OAAO,CAAC;oBAFU,YAAO,GAAP,OAAO,CAAmC;oBAC1C,mBAAc,GAAd,cAAc,CAA+B;gBAEjE,CAAC;gBAmBD,mCAAmC;gBACnC;;;;;;mBAMG;gBACH,OAAO,MAAM,CAAI,GAAG,OAE6C;oBAC/D,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC/C,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;oBAClC,CAAC;oBAED,IAAI,cAAc,GAAmC,IAAI,CAAC;oBAC1D,EAAE,CAAC,CAAC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;wBACtD,cAAc,GAAmC,OAAO,CAAC,GAAG,EAAE,CAAC;oBACjE,CAAC;oBAED,8EAA8E;oBAC9E,8EAA8E;oBAC9E,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChD,OAAO,GAAsC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC1D,CAAC;oBAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;oBAClC,CAAC;oBAED,MAAM,CAAC,IAAI,kBAAkB,CAAoC,OAAO,EAAE,cAAc,CAAC,CAAC;gBAC5F,CAAC;gBAES,UAAU,CAAC,UAA2B;oBAC9C,MAAM,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC/E,CAAC;YACH,CAAC;YA3DD,oDA2DC,CAAA;YAED;;;;eAIG;YACH,iCAAoC,iCAAe;gBAMjD,YAAY,WAA0B,EAClB,OAA0C,EAC1C,cAA6C;oBAC/D,MAAM,WAAW,CAAC,CAAC;oBAFD,YAAO,GAAP,OAAO,CAAmC;oBAC1C,mBAAc,GAAd,cAAc,CAA+B;oBAPzD,cAAS,GAAG,CAAC,CAAC;oBAGd,eAAU,GAAG,CAAC,CAAC;oBAOrB,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACjB,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBAE7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,iBAAiB,GAAG,qCAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBAEnE,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;4BACf,iBAAkB,CAAC,UAAU,GAAG,CAAC,CAAC;4BACzC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBAC9B,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAe,EAAE,UAAa,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;oBACrC,EAAE,CAAC,CAAC,CAAO,QAAS,CAAC,SAAS,CAAC,CAAC,CAAC;wBACzB,QAAS,CAAC,SAAS,GAAG,IAAI,CAAC;wBACjC,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAED,cAAc,CAAC,QAA+B;oBAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;oBACpD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;oBAE1B,EAAE,CAAC,CAAC,CAAO,QAAS,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC/B,WAAW,CAAC,QAAQ,EAAE,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,SAAS,EAAE,CAAC;oBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC;wBAC3B,MAAM,CAAC;oBACT,CAAC;oBAED,EAAE,CAAC,CAAC,UAAU,KAAK,GAAG,CAAC,CAAC,CAAC;wBACvB,MAAM,KAAK,GAAG,cAAc,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC;wBAC3E,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;oBAED,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC;YAAA;;;;;;;QC1IY,QAAQ;;;;;;;YAAR,uBAAA,QAAQ,GAAG,uCAAkB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCClD,wBAAU,CAAC,QAAQ,GAAG,mBAAc,CAAC;;;;;;;;;IC6GrC,sBAAyB,GAAuB;QAC9C,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;QAClC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAMD,uBAA0B,GAAwB;QAChD,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;;;;;;;;;;YA3HD;;;;eAIG;YACH,gCAA0C,wBAAU;gBAkClD,YAAoB,OAAmB,EAAU,SAAqB;oBACpE,OAAO,CAAC;oBADU,YAAO,GAAP,OAAO,CAAY;oBAAU,cAAS,GAAT,SAAS,CAAY;gBAEtE,CAAC;gBAhCD;;;;;;;;;;;;;;;;;;;;;;;;;mBAyBG;gBACH,OAAO,MAAM,CAAI,OAAmB,EAAE,SAAqB;oBACzD,MAAM,CAAC,IAAI,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;gBACnD,CAAC;gBAMS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;wBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BACnB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gCACvB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gCAC5B,UAAU,CAAC,QAAQ,EAAE,CAAC;4BACxB,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,CAAC,IAAI,CACV,CAAC,KAAK;gCACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gCACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gCACtB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oCACvB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;gCACxB,CAAC;4BACH,CAAC,EACD,CAAC,GAAG;gCACF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oCACvB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACxB,CAAC;4BACH,CAAC,CACF;iCACA,IAAI,CAAC,IAAI,EAAE,GAAG;gCACb,kDAAkD;gCAClD,WAAI,CAAC,UAAU,CAAC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxC,CAAC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BACnB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gCACvB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC;4BAChF,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,CAAC,IAAI,CACV,CAAC,KAAK;gCACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gCACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gCACtB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oCACvB,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,OAAA,KAAK,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC,CAAC;gCAC7E,CAAC;4BACH,CAAC,EACD,CAAC,GAAG;gCACF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oCACvB,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE,KAAA,GAAG,EAAE,YAAA,UAAU,EAAE,CAAC,CAAC,CAAC;gCAC5E,CAAC;4BACH,CAAC,CAAC;iCACD,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG;gCACd,kDAAkD;gCAClD,WAAI,CAAC,UAAU,CAAC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxC,CAAC,CAAC,CAAC;wBACP,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YA/FD,kDA+FC,CAAA;;;;;;;;2DCsBK,cAAc;IAdpB,qBAAqB,GAAQ;QAC3B,MAAM,CAAC,GAAG,GAAG,CAAC,qBAAU,CAAC,CAAC;QAC1B,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,MAAM,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAChD,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,qBAAU,CAAC,EAAE,CAAC;IAC3B,CAAC;IAID,kBAAkB,CAAM;QACtB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QACD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,wBAAwB,KAAU;QAChC,MAAM,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,WAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc,KAAU;QACtB,IAAI,aAAa,GAAG,CAAC,KAAK,CAAC;QAC3B,EAAE,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;;;;;;;;;;;;;YA1JD;;;;eAIG;YACH,iCAA2C,wBAAU;gBAgCnD,YAAY,QAAa,EAAU,SAAqB;oBACtD,OAAO,CAAC;oBADyB,cAAS,GAAT,SAAS,CAAY;oBAGtD,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;wBACrB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAC9C,CAAC;oBAED,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;gBArCD,OAAO,MAAM,CAAI,QAAa,EAAE,SAAqB;oBACnD,MAAM,CAAC,IAAI,kBAAkB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;gBACrD,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBAExB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAExD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9B,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC9B,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBAExB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAEM,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAYS,UAAU,CAAC,UAAyB;oBAE5C,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAErC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACxD,OAAA,KAAK,EAAE,UAAA,QAAQ,EAAE,YAAA,UAAU;yBAC5B,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC;4BACF,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gCAChB,UAAU,CAAC,QAAQ,EAAE,CAAC;gCACtB,KAAK,CAAC;4BACR,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BAChC,CAAC;4BACD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gCACtB,KAAK,CAAC;4BACR,CAAC;wBACH,CAAC,QAAQ,IAAI,EAAE;oBACjB,CAAC;gBACH,CAAC;YACH,CAAC;YAlED,oDAkEC,CAAA;YAED;gBACE,YAAoB,GAAW,EACX,GAAG,GAAW,CAAC,EACf,GAAG,GAAW,GAAG,CAAC,MAAM;oBAFxB,QAAG,GAAH,GAAG,CAAQ;oBACX,QAAG,GAAH,GAAG,CAAY;oBACf,QAAG,GAAH,GAAG,CAAqB;gBAC5C,CAAC;gBACD,CAAC,qBAAU,CAAC,KAAK,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI;oBACF,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG;wBACzB,IAAI,EAAE,KAAK;wBACX,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;qBACrC,GAAG;wBACA,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,SAAS;qBACnB,CAAC;gBACJ,CAAC;YACH,CAAC;YAED;gBACE,YAAoB,GAAe,EACf,GAAG,GAAW,CAAC,EACf,GAAG,GAAW,QAAQ,CAAC,GAAG,CAAC;oBAF3B,QAAG,GAAH,GAAG,CAAY;oBACf,QAAG,GAAH,GAAG,CAAY;oBACf,QAAG,GAAH,GAAG,CAAwB;gBAC/C,CAAC;gBACD,CAAC,qBAAU,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/B,IAAI;oBACF,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG;wBACzB,IAAI,EAAE,KAAK;wBACX,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;qBAC9B,GAAG;wBACA,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,SAAS;qBACnB,CAAC;gBACJ,CAAC;YACH,CAAC;YAgBK,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;YCzH3C;;;;eAIG;YACH,kCAA4C,wBAAU;gBAmCpD,YAAoB,SAAuB,EAAU,SAAqB;oBACxE,OAAO,CAAC;oBADU,cAAS,GAAT,SAAS,CAAc;oBAAU,cAAS,GAAT,SAAS,CAAY;oBAExE,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;gBAvCD,OAAO,MAAM,CAAI,SAAuB,EAAE,SAAqB;oBAC7D,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;oBAChC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC,IAAI,mCAAgB,CAAS,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;oBAC/D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;oBACvD,CAAC;gBACH,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBACxB,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAEvD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;wBACpB,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oBAElC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBAEjB,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAaS,UAAU,CAAC,UAAyB;oBAC5C,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBACtC,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;oBAEhC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACzD,WAAA,SAAS,EAAE,OAAA,KAAK,EAAE,QAAA,MAAM,EAAE,YAAA,UAAU;yBACrC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACtD,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChC,CAAC;wBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YA3DD,sDA2DC,CAAA;;;;;;;;QCzDK,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAX,WAAW,GAAG,CAAC,CAAI,CAAM,KAAwB,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;YAE1F;;;;eAIG;YACH,6BAAuC,wBAAU;gBAC/C,YAAoB,GAAuB,EAAU,SAAqB;oBACxE,MAAM,IAAI,CAAC,CAAC;oBADM,QAAG,GAAH,GAAG,CAAoB;oBAAU,cAAS,GAAT,SAAS,CAAY;gBAE1E,CAAC;gBAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAiDG;gBACH,OAAO,MAAM,CAAI,GAAuB,EAAE,SAAqB;oBAC7D,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;wBAChB,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,yBAAY,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;4BAC5C,EAAE,CAAC,CAAC,GAAG,YAAY,wBAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gCAC5C,MAAM,CAAC,GAAG,CAAC;4BACb,CAAC;4BACD,MAAM,CAAC,IAAI,cAAc,CAAI,GAAG,EAAE,SAAS,CAAC,CAAC;wBAC/C,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACxB,MAAM,CAAC,IAAI,iCAAe,CAAI,GAAG,EAAE,SAAS,CAAC,CAAC;wBAChD,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,qBAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC1B,MAAM,CAAC,IAAI,qCAAiB,CAAI,GAAG,EAAE,SAAS,CAAC,CAAC;wBAClD,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,qBAAU,CAAC,KAAK,UAAU,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC5E,MAAM,CAAC,IAAI,uCAAkB,CAAI,GAAG,EAAE,SAAS,CAAC,CAAC;wBACnD,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC5B,MAAM,CAAC,IAAI,yCAAmB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;wBACjD,CAAC;oBACH,CAAC;oBAED,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC;gBAClF,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,GAAG,CAAC,yBAAY,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACnD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,GAAG,CAAC,yBAAY,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,+BAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1F,CAAC;gBACH,CAAC;YACH,CAAC;YAxFD,4CAwFC,CAAA;;;;;;;;QC3GY,IAAI;;;;;;;YAAJ,mBAAA,IAAI,GAAG,+BAAc,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC1C,wBAAU,CAAC,IAAI,GAAG,WAAU,CAAC;;;;;;;;;ICQ7B,kCAAkC,SAAc;QAC9C,MAAM,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,WAAW,KAAK,UAAU,IAAI,OAAO,SAAS,CAAC,cAAc,KAAK,UAAU,CAAC;IACtH,CAAC;IAMD,mCAAmC,SAAc;QAC/C,MAAM,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,EAAE,KAAK,UAAU,IAAI,OAAO,SAAS,CAAC,GAAG,KAAK,UAAU,CAAC;IAClG,CAAC;IAED,oBAAoB,SAAc;QAChC,MAAM,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE,KAAK,mBAAmB,CAAC;IACrE,CAAC;IAED,0BAA0B,SAAc;QACtC,MAAM,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE,KAAK,yBAAyB,CAAC;IAC3E,CAAC;IAED,uBAAuB,SAAc;QACnC,MAAM,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,gBAAgB,KAAK,UAAU,IAAI,OAAO,SAAS,CAAC,mBAAmB,KAAK,UAAU,CAAC;IAChI,CAAC;;;;;;;;;;;;;;;;;;;YAYD;;;;eAIG;YACH,kCAA+C,wBAAU;gBAwDvD,YAAoB,SAA0B,EAC1B,SAAiB,EACjB,QAAqC,EACrC,OAA8B;oBAChD,OAAO,CAAC;oBAJU,cAAS,GAAT,SAAS,CAAiB;oBAC1B,cAAS,GAAT,SAAS,CAAQ;oBACjB,aAAQ,GAAR,QAAQ,CAA6B;oBACrC,YAAO,GAAP,OAAO,CAAuB;gBAElD,CAAC;gBAtDD,mCAAmC;gBAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAmCG;gBACH,OAAO,MAAM,CAAI,MAAuB,EACvB,SAAiB,EACjB,OAA8B,EAC9B,QAAqC;oBACpD,EAAE,CAAC,CAAC,uBAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACxB,QAAQ,GAAQ,OAAO,CAAC;wBACxB,OAAO,GAAG,SAAS,CAAC;oBACtB,CAAC;oBACD,MAAM,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;gBACvE,CAAC;gBASD,OAAe,iBAAiB,CAAI,SAA0B,EAC1B,SAAiB,EACjB,OAAiB,EACjB,UAAyB,EACzB,OAA8B;oBAChE,IAAI,WAAuB,CAAC;oBAC5B,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACzD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BACrD,mBAAmB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;wBAC/F,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACpC,MAAM,MAAM,GAAG,SAAS,CAAC;wBACzB,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAiB,OAAO,EAAW,OAAO,CAAC,CAAC;wBAChF,WAAW,GAAG,MAAM,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAiB,OAAO,CAAC,CAAC;oBACpF,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAChD,MAAM,MAAM,GAAG,SAAS,CAAC;wBACzB,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;wBACjC,WAAW,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBACrD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC/C,MAAM,MAAM,GAAG,SAAS,CAAC;wBACzB,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;wBAC1C,WAAW,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAChE,CAAC;oBAED,UAAU,CAAC,GAAG,CAAC,IAAI,2BAAY,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChD,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,IAAI,OAAO,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAW;wBACtC,IAAI,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;wBACzC,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,UAAU,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC1B,CAAC;oBACH,CAAC,GAAG,CAAC,CAAM,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAEnC,mBAAmB,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;gBAC5F,CAAC;YACH,CAAC;YA1GD,sDA0GC,CAAA;;;;;;;;QC1JY,SAAS;;;;;;;YAAT,wBAAA,SAAS,GAAG,yCAAmB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCpD,wBAAU,CAAC,SAAS,GAAG,qBAAe,CAAC;;;;;;;;;;;;;;;;;;YCCvC;;;;eAIG;YACH,yCAAsD,wBAAU;gBAuD9D,YAAoB,UAAsC,EACtC,aAA0C,EAC1C,QAAqC;oBACvD,OAAO,CAAC;oBAHU,eAAU,GAAV,UAAU,CAA4B;oBACtC,kBAAa,GAAb,aAAa,CAA6B;oBAC1C,aAAQ,GAAR,QAAQ,CAA6B;gBAEzD,CAAC;gBAzDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA8CG;gBACH,OAAO,MAAM,CAAI,UAAsC,EACtC,aAA0C,EAC1C,QAAqC;oBACpD,MAAM,CAAC,IAAI,0BAA0B,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;gBAC7E,CAAC;gBAQS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;oBAEzC,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAgB;wBACpD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;oBACvC,CAAC,GAAG,UAAS,CAAM,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAE7C,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;oBAC1C,UAAU,CAAC,GAAG,CAAC,IAAI,2BAAY,CAAC;wBAC9B,4DAA4D;wBAC5D,aAAa,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC;gBACN,CAAC;gBAEO,aAAa,CAAC,UAAyB,EAAE,IAAgB;oBAC/D,IAAI,CAAC;wBACH,MAAM,MAAM,GAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;wBACzC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,CACA;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,CAAC;gBACH,CAAC;gBAEO,eAAe,CAAC,OAAyB,EAAE,eAA8B;oBAC/E,IAAI,CAAC;wBACH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBAC3B,CACA;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACT,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,CAAC;gBACH,CAAC;YACH,CAAC;YA7FD,qEA6FC,CAAA;;;;;;;;QCpGY,gBAAgB;;;;;;;YAAhB,gCAAA,gBAAgB,GAAG,uDAA0B,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCClE,wBAAU,CAAC,gBAAgB,GAAG,mCAAsB,CAAC;;;;;;;;QCDxC,WAAW;;;;;;;YAAX,2BAAA,WAAW,GAAG,qCAAiB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCpD,wBAAU,CAAC,WAAW,GAAG,yBAAiB,CAAC;;;;;;;;QCIrC,YAAY;;;;;;;;;;YAAZ,YAAY,GAAG,CAAI,KAAQ,KAAK,KAAK,CAAC;YA4C5C;;;;eAIG;YACH,iCAA8C,wBAAU;gBACtD,YAAoB,YAAe,EACf,SAA2B,EAC3B,OAAuB,EACvB,cAAgC,EAChC,SAAqB;oBACrC,OAAO,CAAC;oBALQ,iBAAY,GAAZ,YAAY,CAAG;oBACf,cAAS,GAAT,SAAS,CAAkB;oBAC3B,YAAO,GAAP,OAAO,CAAgB;oBACvB,mBAAc,GAAd,cAAc,CAAkB;oBAChC,cAAS,GAAT,SAAS,CAAY;gBAEzC,CAAC;gBA4GD,OAAO,MAAM,CAAO,qBAAgD,EAChD,SAA4B,EAC5B,OAAwB,EACxB,0BAA2D,EAC3D,SAAqB;oBACvC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,kBAAkB,CACH,qBAAsB,CAAC,YAAY,EACnC,qBAAsB,CAAC,SAAS,EAChC,qBAAsB,CAAC,OAAO,EAC9B,qBAAsB,CAAC,cAAc,IAAI,YAAY,EACrD,qBAAsB,CAAC,SAAS,CAAC,CAAC;oBAC9D,CAAC;oBAED,EAAE,CAAC,CAAC,0BAA0B,KAAK,SAAS,IAAI,yBAAW,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;wBACxF,MAAM,CAAC,IAAI,kBAAkB,CACxB,qBAAqB,EACxB,SAAS,EACT,OAAO,EACP,YAAY,EACD,0BAA0B,CAAC,CAAC;oBAC3C,CAAC;oBAED,MAAM,CAAC,IAAI,kBAAkB,CACxB,qBAAqB,EACxB,SAAS,EACT,OAAO,EACW,0BAA0B,EACjC,SAAS,CAAC,CAAC;gBAC1B,CAAC;gBAES,UAAU,CAAC,UAA2B;oBAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAuB,kBAAkB,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACnF,YAAA,UAAU;4BACV,OAAO,EAAE,IAAI,CAAC,OAAO;4BACrB,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,cAAc,EAAE,IAAI,CAAC,cAAc;4BACnC,OAAA,KAAK,EAAE,CAAC,CAAC;oBACb,CAAC;oBACD,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;oBACpD,GAAG,CAAC;wBACF,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;4BACd,IAAI,eAAwB,CAAC;4BAC7B,IAAI,CAAC;gCACH,eAAe,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;4BACrC,CAAE;4BAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACtB,MAAM,CAAC;4BACT,CAAC;4BACD,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gCACrB,UAAU,CAAC,QAAQ,EAAE,CAAC;gCACtB,KAAK,CAAC;4BACR,CAAC;wBACH,CAAC;wBACD,IAAI,KAAQ,CAAC;wBACb,IAAI,CAAC;4BACH,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;wBAChC,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;wBACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;4BACtB,KAAK,CAAC;wBACR,CAAC;wBACD,IAAI,CAAC;4BACH,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;wBACzB,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;oBACH,CAAC,QAAQ,IAAI,EAAE;gBACjB,CAAC;gBAED,OAAe,QAAQ,CAAO,KAA2B;oBACvD,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;oBACxC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC;4BACH,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC3B,CAAC;oBACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,eAAwB,CAAC;wBAC7B,IAAI,CAAC;4BACH,eAAe,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;wBACD,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;4BACrB,UAAU,CAAC,QAAQ,EAAE,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;wBACD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACT,CAAC;oBACH,CAAC;oBACD,IAAI,KAAQ,CAAC;oBACb,IAAI,CAAC;wBACH,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC5C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBACD,MAAM,CAAqC,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;YA9OD,qDA8OC,CAAA;;;;;;;;;;;;;;;;;YCnSD,wBAAU,CAAC,QAAQ,GAAG,uCAAkB,CAAC,MAAM,CAAC;;;;;;;;QCDnC,GAAG;;;;;;;YAAH,mBAAA,GAAG,GAAG,2BAAY,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCvC,wBAAU,CAAC,EAAE,GAAG,QAAG,CAAC;;;;;;;;ICDpB,mBAA0B,GAAQ;QAChC,oEAAoE;QACpE,mFAAmF;QACnF,uCAAuC;QACvC,+DAA+D;QAC/D,MAAM,CAAC,CAAC,iBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAND,mCAMC,CAAA;;;;;;;YAAA,CAAC;;;;;;;;QCLW,KAAK;;;;;;;;;;YAAL,qBAAA,KAAK,GAAG,IAAI,+BAAc,CAAC,yBAAW,CAAC,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;YCGrD;;;;eAIG;YACH,iCAAwC,wBAAU;gBAqDhD,YAAoB,MAAM,GAAW,CAAC,EAClB,SAAS,GAAc,aAAK;oBAC9C,OAAO,CAAC;oBAFU,WAAM,GAAN,MAAM,CAAY;oBAClB,cAAS,GAAT,SAAS,CAAmB;oBAE9C,EAAE,CAAC,CAAC,CAAC,qBAAS,CAAC,MAAM,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAClB,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,SAAS,GAAG,aAAK,CAAC;oBACzB,CAAC;gBACH,CAAC;gBA7DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAgCG;gBACH,OAAO,MAAM,CAAC,MAAM,GAAW,CAAC,EAClB,SAAS,GAAc,aAAK;oBACxC,MAAM,CAAC,IAAI,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBACnD,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBACxB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;oBAE5C,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;oBAEV,IAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACvC,CAAC;gBAaS,UAAU,CAAC,UAA8B;oBACjD,MAAM,KAAK,GAAG,CAAC,CAAC;oBAChB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAM,EAAE;wBACrE,OAAA,KAAK,EAAE,YAAA,UAAU,EAAE,QAAA,MAAM;qBAC1B,CAAC,CAAC,CAAC;gBACN,CAAC;YACH,CAAC;YAzED,qDAyEC,CAAA;;;;;;;;QClFY,QAAQ;;;;;;;YAAR,wBAAA,QAAQ,GAAG,uCAAkB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCClD,wBAAU,CAAC,QAAQ,GAAG,mBAAc,CAAC;;;;;;;;ICGrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6CG;IACH,eAA4B,GAAG,WAA6D;QAC1F,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC;IAHD,2BAGC,CAAA;IAoCD,mCAAmC;IACnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6CG;IACH,qBAAkC,GAAG,WAA6D;QACjG,IAAI,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAC1C,IAAI,SAAS,GAAc,IAAI,CAAC;QAC/B,IAAI,IAAI,GAAQ,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACpD,EAAE,CAAC,CAAC,yBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,SAAS,GAAc,WAAW,CAAC,GAAG,EAAE,CAAC;YACzC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACtF,UAAU,GAAW,WAAW,CAAC,GAAG,EAAE,CAAC;YACzC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpC,UAAU,GAAW,WAAW,CAAC,GAAG,EAAE,CAAC;QACzC,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAgB,WAAW,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,CAAC,IAAI,iCAAe,CAAM,WAAW,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,2BAAgB,CAAI,UAAU,CAAC,CAAC,CAAC;IACpG,CAAC;IAlBD,uCAkBC,CAAA;;;;;;;;;;;;;;;;;;;;QC1JY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,mBAAW,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCjC,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;;ICO/B;;;;;;;OAOG;IACH,cAAwB,GAAG,WAAwD;QACjF,mEAAmE;QACnE,4BAA4B;QAC5B,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,WAAW,GAAyB,WAAW,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC;QAED,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IATD,yBASC,CAAA;IAgBD,oBAA8B,GAAG,WAA4D;QAC3F,mEAAmE;QACnE,4BAA4B;QAC5B,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,WAAW,GAA2B,WAAW,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAkB,WAAW,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,iCAAe,CAAS,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,YAAY,EAAK,CAAC,CAAC;IAC9E,CAAC;IAZD,qCAYC,CAAA;;;;;;;;;;;;;;;;YAED;gBACE,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;YAJD,yCAIC,CAAA;YAED;;;;eAIG;YACH,6BAAuC,iCAAe;gBAKpD,YAAY,WAA0B;oBACpC,MAAM,WAAW,CAAC,CAAC;oBALb,aAAQ,GAAY,KAAK,CAAC;oBAC1B,gBAAW,GAAsB,EAAE,CAAC;oBACpC,kBAAa,GAAmB,EAAE,CAAC;gBAI3C,CAAC;gBAES,KAAK,CAAC,UAAe;oBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;oBAE/B,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7B,IAAI,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;4BAChC,IAAI,YAAY,GAAG,qCAAiB,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;4BAEtE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gCACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gCACtC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BACzB,CAAC;wBACH,CAAC;wBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAErB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACnD,EAAE,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;gCACrB,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gCAEzC,YAAY,CAAC,WAAW,EAAE,CAAC;gCAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;4BAC5B,CAAC;wBACH,CAAC;wBAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC5B,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC;YArDD,6CAqDC,CAAA;;;;;;;;;;;;;;;;;YCtHD,wBAAU,CAAC,IAAI,GAAG,iBAAU,CAAC;;;;;;;ICH7B,6BAA6B;IAC7B,kBAAyB,CAAC;IAA1B,yBAA0B,CAAA;;;;;;;;;;;;;;;;;;;;;YCG1B;;;;eAIG;YACH,8BAAwC,wBAAU;gBAoChD;oBACE,OAAO,CAAC;gBACV,CAAC;gBArCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA8BG;gBACH,OAAO,MAAM;oBACX,MAAM,CAAC,IAAI,eAAe,EAAK,CAAC;gBAClC,CAAC;gBAMS,UAAU,CAAC,UAAyB;oBAC5C,WAAI,EAAE,CAAC;gBACT,CAAC;YACH,CAAC;YA3CD,+CA2CC,CAAA;;;;;;;;QClDY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;QCDlB,EAAE;;;;;;;YAAF,kBAAA,EAAE,GAAG,iCAAe,CAAC,EAAE,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCrC,wBAAU,CAAC,EAAE,GAAG,OAAQ,CAAC;;;;;;;;;ICMzB,2BAAwC,GAAG,WAE2C;QACpF,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,WAAW,GAA2B,WAAW,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAO,WAAW,CAAC,CAAC,CAAC;IACrE,CAAC;IARD,mDAQC,CAAA;IAwBD,mCAAmC;IAEnC,iCAA8C,GAAG,WAE4C;QAC3F,IAAI,MAAM,GAAyB,IAAI,CAAC;QAExC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,WAAW,GAAgC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;QAE7B,MAAM,CAAC,IAAI,+BAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAO,WAAW,CAAC,CAAC,CAAC;IACjG,CAAC;IAXD,+DAWC,CAAA;;;;;;;;;;;;;;;;YAED;gBACE,YAAoB,WAAwC;oBAAxC,gBAAW,GAAX,WAAW,CAA6B;gBAC5D,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,2BAA2B,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1F,CAAC;YACH,CAAC;YAED,0CAAgD,iCAAe;gBAC7D,YAAsB,WAA0B,EAC5B,WAAwC;oBAC1D,MAAM,WAAW,CAAC,CAAC;oBAFC,gBAAW,GAAX,WAAW,CAAe;oBAC5B,gBAAW,GAAX,WAAW,CAA6B;gBAE5D,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAAiC;oBACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC/B,CAAC;gBAED,cAAc,CAAC,QAAiC;oBAC9C,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC/B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC/B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC/B,CAAC;gBAEO,qBAAqB;oBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;oBAC1C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC5FD,wBAAU,CAAC,iBAAiB,GAAG,2CAAuB,CAAC;;;;;;;;;ICUvD,kBAAqB,KAAsB;QACzC,MAAM,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC;QAErD,EAAE,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;YACrB,UAAU,CAAC,QAAQ,EAAE,CAAC;YACtB,MAAM,CAAC;QACT,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEjC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;QAEjB,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;;;;;;;YAED;;;;eAIG;YACH,8BAAwC,wBAAU;gBAsChD,YAAoB,GAAW,EAAU,SAAqB;oBAC5D,OAAO,CAAC;oBADU,QAAG,GAAH,GAAG,CAAQ;oBAAU,cAAS,GAAT,SAAS,CAAY;oBAE5D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;gBAtCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA8BG;gBACH,OAAO,MAAM,CAAI,GAAW,EAAE,SAAqB;oBACjD,MAAM,CAAC,IAAI,eAAe,CAAI,GAAG,EAAE,SAAS,CAAC,CAAC;gBAChD,CAAC;gBAOS,UAAU,CAAC,UAAyC;oBAC5D,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC,GAAG,IAAI,CAAC;oBAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAE3B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACrC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAA,IAAI,EAAE,QAAA,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,YAAA,UAAU;yBAClD,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;4BACtC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;4BACtB,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxC,CAAC;wBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YA3DD,+CA2DC,CAAA;;;;;;;;QC3FY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;;;;;;;;YCE/B;;;;eAIG;YACH,8BAAqC,wBAAU;gBA+D7C,YAAY,KAAa,EACb,KAAa,EACb,SAAqB;oBAC/B,OAAO,CAAC;oBACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC7B,CAAC;gBApED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA6BG;gBACH,OAAO,MAAM,CAAC,KAAK,GAAW,CAAC,EACjB,KAAK,GAAW,CAAC,EACjB,SAAqB;oBACjC,MAAM,CAAC,IAAI,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;gBACtD,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBAExB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAElD,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;wBACnB,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAED,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBACxB,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBAEjB,IAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAeS,UAAU,CAAC,UAA8B;oBACjD,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACrD,OAAA,KAAK,EAAE,OAAA,KAAK,EAAE,OAAA,KAAK,EAAE,YAAA,UAAU;yBAChC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC;4BACF,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gCACrB,UAAU,CAAC,QAAQ,EAAE,CAAC;gCACtB,KAAK,CAAC;4BACR,CAAC;4BACD,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;4BACzB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gCACtB,KAAK,CAAC;4BACR,CAAC;wBACH,CAAC,QAAQ,IAAI,EAAE;oBACjB,CAAC;gBACH,CAAC;YACH,CAAC;YA/FD,+CA+FC,CAAA;;;;;;;;QCvGY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;;;;;;;;;;;;;;YCG/B;;;;eAIG;YACH,8BAAwC,wBAAU;gBAOhD,YAAoB,eAAmD,EACnD,iBAAuF;oBACzG,OAAO,CAAC;oBAFU,oBAAe,GAAf,eAAe,CAAoC;oBACnD,sBAAiB,GAAjB,iBAAiB,CAAsE;gBAE3G,CAAC;gBARD,OAAO,MAAM,CAAI,eAAmD,EACnD,iBAAuF;oBACtG,MAAM,CAAC,IAAI,eAAe,CAAI,eAAe,EAAE,iBAAiB,CAAC,CAAC;gBACpE,CAAC;gBAOS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,EAAE,eAAe,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC;oBAEpD,IAAI,QAA+B,CAAC;oBAEpC,IAAI,CAAC;wBACH,QAAQ,GAA0B,eAAe,EAAE,CAAC;wBACpD,MAAM,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC;oBACtE,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YAxBD,+CAwBC,CAAA;YAED,8BAAiC,iCAAe;gBAC9C,YAAY,WAA0B,EAClB,QAA+B,EAC/B,iBAAuF;oBACzG,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAAuB;oBAC/B,sBAAiB,GAAjB,iBAAiB,CAAsE;oBAEzG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC;gBAEO,MAAM;oBACZ,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAChE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC,GAAG,CAAC,qCAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;wBAC5C,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;QCtDY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;QCDlB,MAAM;;;;;;;YAAN,sBAAA,MAAM,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC7C,wBAAU,CAAC,KAAK,GAAG,cAAM,CAAC;;;;;;;ICH1B,gBAAuB,KAAU;QAC/B,MAAM,CAAC,KAAK,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YCOD;;;;eAIG;YACH,8BAAqC,wBAAU;gBAuE7C,YAAY,OAAO,GAAkB,CAAC,EAC1B,MAA2B,EAC3B,SAAqB;oBAC/B,OAAO,CAAC;oBAPF,WAAM,GAAW,CAAC,CAAC,CAAC;oBACpB,YAAO,GAAW,CAAC,CAAC;oBAQ1B,EAAE,CAAC,CAAC,qBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC1D,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,yBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC/B,SAAS,GAAe,MAAM,CAAC;oBACjC,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,yBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC5B,SAAS,GAAG,aAAK,CAAC;oBACpB,CAAC;oBAED,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,OAAO,GAAG,eAAM,CAAC,OAAO,CAAC;wBAC5B,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;wBACvB,OAAQ,CAAC;gBACvB,CAAC;gBAxFD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAyCG;gBACH,OAAO,MAAM,CAAC,YAAY,GAAkB,CAAC,EAC/B,MAA2B,EAC3B,SAAqB;oBACjC,MAAM,CAAC,IAAI,eAAe,CAAC,YAAY,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;gBAC9D,CAAC;gBAED,OAAO,QAAQ,CAAC,KAAU;oBAExB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;oBAC5C,MAAM,MAAM,GAAU,IAAK,CAAC;oBAE5B,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEvB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC;oBACT,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACzB,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;oBAC/B,CAAC;oBAED,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBACxB,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACjC,CAAC;gBA2BS,UAAU,CAAC,UAA8B;oBACjD,MAAM,KAAK,GAAG,CAAC,CAAC;oBAChB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAE5C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE;wBAC3D,OAAA,KAAK,EAAE,QAAA,MAAM,EAAE,YAAA,UAAU;qBAC1B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YApGD,+CAoGC,CAAA;;;;;;;;QChHY,KAAK;;;;;;;YAAL,qBAAA,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC5C,wBAAU,CAAC,KAAK,GAAG,aAAW,CAAC;;;;;;;;;ICQ/B;;;;;OAKG;IACH,kBAA4B,GAAG,WAAyE;QACtG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC5C,CAAC;IAHD,iCAGC,CAAA;IA6CD,mCAAmC;IAEnC;;;;;;OAMG;IACH,mBAAgC,GAAG,WAAyE;QAC1G,MAAM,OAAO,GAAgC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACjF,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;YAClC,WAAW,CAAC,GAAG,EAAE,CAAC;QACpB,CAAC;QACD,MAAM,CAAC,IAAI,iCAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,CAAC;IAND,mCAMC,CAAA;;;;;;;;;;;;;;;;;;;;;;YAED;gBAIE,YAAY,OAAsC;oBAChD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACzB,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxE,CAAC;YACH,CAAC;YAXD,uCAWC,CAAA;YAED;;;;eAIG;YACH,4BAAyC,uBAAU;gBAOjD,YAAY,WAA0B,EAC1B,OAAsC,EACtC,MAAM,GAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC3C,MAAM,WAAW,CAAC,CAAC;oBATb,UAAK,GAAG,CAAC,CAAC;oBAGV,cAAS,GAA6B,EAAE,CAAC;oBACzC,WAAM,GAAG,CAAC,CAAC;oBAMjB,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;oBAChE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,CAAC;gBAES,KAAK,CAAC,KAAU;oBACxB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,EAAE,CAAC,CAAC,kBAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnB,SAAS,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,qBAAU,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;wBACnD,SAAS,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,KAAK,CAAC,qBAAU,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC9E,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;oBAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;oBAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,QAAQ,GAAqC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC9D,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;4BAC/B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC5C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,oBAAoB;wBACrC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,cAAc;oBACZ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;oBAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAErC,uCAAuC;oBACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC5B,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,QAAQ,KAAK,UAAU,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;4BACpE,MAAM,CAAC;wBACT,CAAC;oBACH,CAAC;oBAED,IAAI,cAAc,GAAG,KAAK,CAAC;oBAC3B,MAAM,IAAI,GAAU,EAAE,CAAC;oBACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC5B,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;wBAE7B,wDAAwD;wBACxD,kBAAkB;wBAClB,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;4BAC5B,cAAc,GAAG,IAAI,CAAC;wBACxB,CAAC;wBAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;4BAChB,WAAW,CAAC,QAAQ,EAAE,CAAC;4BACvB,MAAM,CAAC;wBACT,CAAC;wBAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;oBAED,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACnB,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAES,WAAW,CAAC,IAAW;oBAC/B,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC1C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAtGD,2CAsGC,CAAA;YAOD;gBAGE,YAAoB,QAAqB;oBAArB,aAAQ,GAAR,QAAQ,CAAa;oBACvC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACpC,CAAC;gBAED,QAAQ;oBACN,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI;oBACF,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACvC,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;gBAED,YAAY;oBACV,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oBACnC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC;gBACvC,CAAC;YACH,CAAC;YAED;gBAIE,YAAoB,KAAU;oBAAV,UAAK,GAAL,KAAK,CAAK;oBAHtB,UAAK,GAAG,CAAC,CAAC;oBACV,WAAM,GAAG,CAAC,CAAC;oBAGjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC7B,CAAC;gBAED,CAAC,qBAAU,CAAC;oBACV,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI,CAAC,KAAW;oBACd,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAC1F,CAAC;gBAED,QAAQ;oBACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,CAAC;gBAED,YAAY;oBACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC;gBAC1C,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAsC,iCAAe;gBAKnD,YAAY,WAA+B,EACvB,MAA2B,EAC3B,UAAyB,EACzB,KAAa;oBAC/B,MAAM,WAAW,CAAC,CAAC;oBAHD,WAAM,GAAN,MAAM,CAAqB;oBAC3B,eAAU,GAAV,UAAU,CAAe;oBACzB,UAAK,GAAL,KAAK,CAAQ;oBAPjC,sBAAiB,GAAG,IAAI,CAAC;oBACzB,WAAM,GAAQ,EAAE,CAAC;oBACjB,eAAU,GAAG,KAAK,CAAC;gBAOnB,CAAC;gBAED,CAAC,qBAAU,CAAC;oBACV,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,uFAAuF;gBACvF,yFAAyF;gBACzF,IAAI;oBACF,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC3C,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACrC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;oBAChD,CAAC;gBACH,CAAC;gBAED,QAAQ;oBACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,CAAC;gBAED,YAAY;oBACV,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;gBACrD,CAAC;gBAED,cAAc;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;oBAC/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC7B,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC/B,CAAC;gBAED,SAAS,CAAC,KAAU,EAAE,KAAa;oBACjC,MAAM,CAAC,qCAAiB,CAAW,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACzE,CAAC;YACH,CAAC;YAAA;;;;;;;QC5TY,GAAG;;;;;;;YAAH,mBAAA,GAAG,GAAG,eAAS,CAAA,CAAC;;;;;;;;;;;;;;;;;YCC7B,wBAAU,CAAC,GAAG,GAAG,SAAS,CAAC;;;;;;;;QCDd,IAAI;;;;;;;YAAJ,oBAAA,IAAI,GAAuB,+BAAc,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCE9D,wBAAU,CAAC,IAAI,GAAG,WAAU,CAAC;;;;;;;;QCFvB,MAAM,EA2BC,MAAM;;;;;;;YA3Bb,MAAM,GAAG,YAAI,CAAC,MAAM,CAAC;YAE3B,EAAE,CAAC,CAAC,OAAa,MAAO,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC9C,CAAC;oBACO,MAAO,CAAC,MAAM,GAAG,wBAAwB,MAAc,EAAE,GAAG,OAAsB;wBACtF,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;4BAC5C,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;wBACpE,CAAC;wBAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;wBAC9B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;wBAC3B,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC;4BACzC,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;4BAC5B,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gCAC5C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;oCACvB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wCAC/B,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;oCAC5B,CAAC;gCACH,CAAC;4BACH,CAAC;wBACH,CAAC;wBAED,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;gBACJ,CAAC,CAAC,EAAE,CAAC;YACP,CAAC;YAEY,sBAAA,MAAM,GAA0D,MAAM,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YCP3F;;;;eAIG;YACH,+BAAyC,0BAAgB;gBA2BvD,YAAY,iBAAkE,EAAE,WAAyB;oBACvG,EAAE,CAAC,CAAC,iBAAiB,YAAY,wBAAU,CAAC,CAAC,CAAC;wBAC5C,MAAM,WAAW,EAAkB,iBAAiB,CAAC,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC;wBACR,IAAI,CAAC,aAAa,GAAG,YAAI,CAAC,SAAS,CAAC;wBACpC,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAK,CAAC;wBAChC,EAAE,CAAC,CAAC,OAAO,iBAAiB,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,IAAI,CAAC,GAAG,GAAG,iBAAiB,CAAC;wBAC/B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,gEAAgE;4BAChE,eAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;wBAClC,CAAC;wBACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;4BACxB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;wBAC3D,CAAC;wBACD,IAAI,CAAC,WAAW,GAAG,IAAI,6BAAa,EAAE,CAAC;oBACzC,CAAC;gBACH,CAAC;gBAjCD,cAAc,CAAC,CAAe;oBAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC;gBAED;;;;;;mBAMG;gBACH,OAAO,MAAM,CAAI,iBAAkD;oBACjE,MAAM,CAAC,IAAI,gBAAgB,CAAI,iBAAiB,CAAC,CAAC;gBACpD,CAAC;gBAsBD,IAAI,CAAI,QAAwB;oBAC9B,MAAM,IAAI,GAAG,IAAI,gBAAgB,CAAI,IAAI,EAAQ,IAAI,CAAC,WAAW,CAAC,CAAC;oBACnE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,iGAAiG;gBACjG,SAAS,CAAC,MAAiB,EAAE,QAAmB,EAAE,aAAoC;oBACpF,MAAM,IAAI,GAAG,IAAI,CAAC;oBAClB,MAAM,CAAC,IAAI,wBAAU,CAAC,CAAC,QAAuB;wBAC5C,MAAM,MAAM,GAAG,mBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;wBAClC,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,QAAQ,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAChC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACpB,CAAC;wBAED,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;4BACjC,MAAM,MAAM,GAAG,mBAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;gCAC3B,QAAQ,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;4BAChC,CAAC;4BAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gCAClB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACnB,CAAC;wBACH,CAAC,EACC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAC1B,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAE7B,MAAM,CAAC;4BACL,MAAM,MAAM,GAAG,mBAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;4BACpC,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;gCAC3B,QAAQ,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;4BAChC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACpB,CAAC;4BACD,YAAY,CAAC,WAAW,EAAE,CAAC;wBAC7B,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACL,CAAC;gBAEO,cAAc;oBACpB,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;oBAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;oBAE9B,IAAI,MAAM,GAAc,IAAI,CAAC;oBAC7B,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,QAAQ;4BACpB,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;4BAC1C,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACvB,CAAE;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClB,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,YAAY,GAAG,IAAI,2BAAY,CAAC;wBACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;4BACtC,MAAM,CAAC,KAAK,EAAE,CAAC;wBACjB,CAAC;oBACH,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,MAAM,GAAG,CAAC,CAAQ;wBACvB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;wBACvC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;4BACjB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACvB,CAAC;wBAED,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;wBAE/B,IAAI,CAAC,WAAW,GAAG,uBAAU,CAAC,MAAM,CAClC,CAAC,CAAC,KAAK,MAAM,CAAC,UAAU,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAChD,CAAC,CAAC;4BACA,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;4BAC7C,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gCACpB,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAClC,CAAC;4BACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gCAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;4BACjC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,2EAA2E;oCACtG,0DAA0D,CAAC,CAAC,CAAC;4BACjE,CAAC;4BACD,IAAI,CAAC,WAAW,GAAG,IAAI,6BAAa,EAAE,CAAC;4BACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACrB,CAAC,EACD;4BACE,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;4BAC7C,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gCACpB,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAClC,CAAC;4BACD,MAAM,CAAC,KAAK,EAAE,CAAC;4BACf,IAAI,CAAC,WAAW,GAAG,IAAI,6BAAa,EAAE,CAAC;4BACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACrB,CAAC,CACF,CAAC;wBAEF,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,YAAY,6BAAa,CAAC,CAAC,CAAC;4BAC5C,YAAY,CAAC,GAAG,CAAoB,KAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC1E,CAAC;oBACH,CAAC,CAAC;oBAEF,MAAM,CAAC,OAAO,GAAG,CAAC,CAAQ,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAEjD,MAAM,CAAC,OAAO,GAAG,CAAC,CAAa;wBAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wBACzC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BAClB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxB,CAAC;wBACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACf,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACpB,CAAC;oBACH,CAAC,CAAC;oBAEF,MAAM,CAAC,SAAS,GAAG,CAAC,CAAe;wBACjC,MAAM,MAAM,GAAG,mBAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChD,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,QAAQ,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAChC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACxB,CAAC;oBACH,CAAC,CAAC;gBACJ,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;oBACxB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACtC,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC;oBACD,IAAI,YAAY,GAAG,IAAI,2BAAY,EAAE,CAAC;oBACtC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrD,YAAY,CAAC,GAAG,CAAC;wBACf,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;wBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC7E,MAAM,CAAC,KAAK,EAAE,CAAC;4BACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACrB,CAAC;oBACH,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;gBAED,WAAW;oBACT,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;oBAChC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtC,MAAM,CAAC,KAAK,EAAE,CAAC;wBACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC;oBACD,KAAK,CAAC,WAAW,EAAE,CAAC;oBACpB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,WAAW,GAAG,IAAI,6BAAa,EAAE,CAAC;oBACzC,CAAC;gBACH,CAAC;YACH,CAAC;YA5MD,iDA4MC,CAAA;;;;;;;;QCrOY,SAAS;;;;;;;YAAT,yBAAA,SAAS,GAAG,mCAAgB,CAAC,MAAM,CAAA,CAAC;;;;;;;;;;;;;;;;;YCCjD,wBAAU,CAAC,SAAS,GAAG,qBAAe,CAAC;;;;;;;;;ICKvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA+BG;IACH,gBAA0B,eAAgC;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAI,eAAe,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;YAMD;gBAEE,YAAoB,eAAgC;oBAAhC,oBAAe,GAAf,eAAe,CAAiB;gBACpD,CAAC;gBAED,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACnF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,kCAAe;gBAG/C,YAAY,WAA4B,EAAE,eAAgC;oBACxE,MAAM,WAAW,CAAC,CAAC;oBAHb,WAAM,GAAQ,EAAE,CAAC;oBAIvB,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;gBACrD,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAAiC;oBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC9ED,wBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAwCG;IACH,qBAA+B,UAAkB,EAAE,gBAAgB,GAAW,IAAI;QAChF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAI,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAFD,uCAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,UAAkB,EAAU,gBAAwB;oBAApD,eAAU,GAAV,UAAU,CAAQ;oBAAU,qBAAgB,GAAhB,gBAAgB,CAAQ;gBACxE,CAAC;gBAED,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1G,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAAuC,wBAAU;gBAI/C,YAAY,WAA4B,EAAU,UAAkB,EAAU,gBAAwB;oBACpG,MAAM,WAAW,CAAC,CAAC;oBAD6B,eAAU,GAAV,UAAU,CAAQ;oBAAU,qBAAgB,GAAhB,gBAAgB,CAAQ;oBAH9F,YAAO,GAAe,CAAC,EAAE,CAAC,CAAC;oBAC3B,UAAK,GAAW,CAAC,CAAC;gBAI1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;oBAChC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oBACnC,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBAC9F,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;oBAEhB,EAAE,CAAC,CAAC,KAAK,GAAG,gBAAgB,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACnB,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;4BACjC,MAAM,GAAG,CAAC,CAAC;4BACX,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC3B,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClB,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;wBAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACtB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC3B,CAAC;oBACH,CAAC;oBACD,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC7GD,wBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICK/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA0CG;IACH,oBAA8B,cAAsB;QAClD,IAAI,MAAM,GAAW,SAAS,CAAC,MAAM,CAAC;QAEtC,IAAI,SAAS,GAAc,aAAK,CAAC;QACjC,EAAE,CAAC,CAAC,yBAAW,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC5C,MAAM,EAAE,CAAC;QACX,CAAC;QAED,IAAI,sBAAsB,GAAW,IAAI,CAAC;QAC1C,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,sBAAsB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;QAED,IAAI,aAAa,GAAW,MAAM,CAAC,iBAAiB,CAAC;QACrD,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAI,cAAc,EAAE,sBAAsB,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;IAChH,CAAC;IApBD,qCAoBC,CAAA;IAiID,oCAAoC,KAAU;QAC5C,MAAM,UAAU,GAA8B,KAAK,CAAC,UAAU,CAAC;QAE/D,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QAClC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACzC,KAAK,CAAC,OAAO,CAAC,WAAW,GAAS,IAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;IAOD,gCAAmC,KAAuB;QACxD,MAAM,EAAE,sBAAsB,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;QAChF,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,MAAM,GAA6B,IAAI,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAiB,mBAAmB,EAAE,cAAc,EAAE,EAAE,YAAA,UAAU,EAAE,SAAA,OAAO,EAAE,CAAC,CAAC,CAAC;YACvI,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED,6BAAgC,GAAmB;QACjD,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QACpC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;;;;;;;;;;;;YAzJD;gBACE,YAAoB,cAAsB,EACtB,sBAA8B,EAC9B,aAAqB,EACrB,SAAoB;oBAHpB,mBAAc,GAAd,cAAc,CAAQ;oBACtB,2BAAsB,GAAtB,sBAAsB,CAAQ;oBAC9B,kBAAa,GAAb,aAAa,CAAQ;oBACrB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAC/C,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CACjG,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED;gBAAA;oBACE,WAAM,GAAQ,EAAE,CAAC;gBAEnB,CAAC;YAAD,CAAC;YASD;;;;eAIG;YACH,mCAAsC,wBAAU;gBAI9C,YAAY,WAA4B,EACpB,cAAsB,EACtB,sBAA8B,EAC9B,aAAqB,EACrB,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAJD,mBAAc,GAAd,cAAc,CAAQ;oBACtB,2BAAsB,GAAtB,sBAAsB,CAAQ;oBAC9B,kBAAa,GAAb,aAAa,CAAQ;oBACrB,cAAS,GAAT,SAAS,CAAW;oBAPhC,aAAQ,GAAsB,EAAE,CAAC;oBASvC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnC,IAAI,CAAC,YAAY,GAAG,sBAAsB,IAAI,IAAI,IAAI,sBAAsB,GAAG,CAAC,CAAC;oBACjF,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,MAAM,iBAAiB,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAA,OAAO,EAAE,gBAAA,cAAc,EAAE,CAAC;wBACxE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,0BAA0B,EAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC;oBACpH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,UAAU,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAA,OAAO,EAAE,CAAC;wBACjD,MAAM,aAAa,GAAqB,EAAE,gBAAA,cAAc,EAAE,wBAAA,sBAAsB,EAAE,UAAU,EAAE,IAAI,EAAE,WAAA,SAAS,EAAE,CAAC;wBAChH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;wBACpG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,aAAa,CAAC,CAAC,CAAC;oBAC9F,CAAC;gBACH,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAC5B,IAAI,mBAA+B,CAAC;oBACpC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;wBAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;4BACxC,mBAAmB,GAAG,OAAO,CAAC;wBAChC,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;oBACzC,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;oBACzB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBAES,SAAS;oBACjB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBACvC,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;wBACjC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACnC,CAAC;oBACD,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAES,YAAY,CAAC,OAAmB;oBACxC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3B,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;oBACxC,WAAW,CAAC,WAAW,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;oBAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;wBAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;wBAC3C,MAAM,iBAAiB,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAA,OAAO,EAAE,gBAAA,cAAc,EAAE,CAAC;wBACxE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,EAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC;oBACzH,CAAC;gBACH,CAAC;gBAED,WAAW;oBACT,MAAM,OAAO,GAAe,IAAI,OAAO,EAAK,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC5B,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBAED,YAAY,CAAC,OAAmB;oBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAE/B,MAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9D,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;wBACrB,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;oBAChD,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCnMD,wBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICK7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAqCG;IACH,sBAAmC,QAAkC,EAClC,eAAyD;QAC1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAO,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC;IAC9E,CAAC;IAHD,yCAGC,CAAA;;;;;;;;;;;;;YAMD;gBAEE,YAAoB,QAAkC,EAClC,eAAyD;oBADzD,aAAQ,GAAR,QAAQ,CAA0B;oBAClC,oBAAe,GAAf,eAAe,CAA0C;gBAC7E,CAAC;gBAED,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACxG,CAAC;YACH,CAAC;YAOD;;;;eAIG;YACH,qCAA2C,kCAAe;gBAGxD,YAAY,WAA4B,EACpB,QAAkC,EAClC,eAAgE;oBAClF,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAA0B;oBAClC,oBAAe,GAAf,eAAe,CAAiD;oBAJ5E,aAAQ,GAA4B,EAAE,CAAC;oBAM7C,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;gBAC9C,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;wBACjC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;wBACnC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;wBACtB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC9B,CAAC;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBAES,SAAS;oBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;wBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBACtC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;wBACnC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;wBACtB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC9B,CAAC;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;gBAED,UAAU,CAAC,UAAe,EAAE,UAAa,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC1E,CAAC;gBAED,cAAc,CAAC,QAA+B;oBAC5C,IAAI,CAAC,WAAW,CAAQ,QAAS,CAAC,OAAO,CAAC,CAAC;gBAC7C,CAAC;gBAEO,UAAU,CAAC,KAAQ;oBACzB,IAAI,CAAC;wBACH,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;wBAC7C,MAAM,eAAe,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC1D,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;4BACpB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;wBACrC,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAEO,WAAW,CAAC,OAAyB;oBAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAE/B,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;wBACxB,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;wBACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC9B,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBAC1B,YAAY,CAAC,WAAW,EAAE,CAAC;oBAC7B,CAAC;gBACH,CAAC;gBAEO,YAAY,CAAC,eAAoB;oBACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAE/B,MAAM,MAAM,GAAa,EAAE,CAAC;oBAC5B,MAAM,YAAY,GAAG,IAAI,2BAAY,EAAE,CAAC;oBACxC,MAAM,OAAO,GAAG,EAAE,QAAA,MAAM,EAAE,cAAA,YAAY,EAAE,CAAC;oBACzC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEvB,MAAM,iBAAiB,GAAG,sCAAiB,CAAC,IAAI,EAAE,eAAe,EAAO,OAAO,CAAC,CAAC;oBAEjF,EAAE,CAAC,CAAC,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACC,iBAAkB,CAAC,OAAO,GAAG,OAAO,CAAC;wBAE5C,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBAC5B,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzKD,wBAAU,CAAC,SAAS,CAAC,YAAY,GAAG,2BAAY,CAAC;;;;;;;;;ICOjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCG;IACH,oBAA8B,eAAsC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAI,eAAe,CAAC,CAAC,CAAC;IAC/D,CAAC;IAFD,qCAEC,CAAA;;;;;;;;;;;;;;;;;;;YAMD;gBAEE,YAAoB,eAAsC;oBAAtC,oBAAe,GAAf,eAAe,CAAuB;gBAC1D,CAAC;gBAED,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACvF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,mCAAsC,kCAAe;gBAKnD,YAAY,WAA4B,EAAU,eAAsC;oBACtF,MAAM,WAAW,CAAC,CAAC;oBAD6B,oBAAe,GAAf,eAAe,CAAuB;oBAHhF,gBAAW,GAAY,KAAK,CAAC;oBAKnC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAES,SAAS;oBACjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAChC,CAAC;oBACD,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC3B,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAAiC;oBAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,cAAc;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAED,UAAU;oBAER,IAAI,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;oBAEnC,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;wBACjC,mBAAmB,CAAC,WAAW,EAAE,CAAC;oBACpC,CAAC;oBAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAChC,CAAC;oBAED,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBAEjB,MAAM,eAAe,GAAG,mBAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;oBAEzD,EAAE,CAAC,CAAC,eAAe,KAAK,yBAAW,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,mBAAmB,GAAG,IAAI,4BAAY,EAAE,CAAC;wBACzC,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;wBAC/C,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;wBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,mBAAmB,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;wBAClE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC3B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCrID,wBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;ICE7C;;;;;;;OAOG;IACH,eAAyB,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,SAAqB;QAC5C,IAAI,OAAyB,CAAC;QAC9B,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,QAAsB,CAAC;QAE3B,MAAM,UAAU,GAAG;YACjB,OAAO,GAAG,IAAI,6BAAa,CAAI,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YAClE,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC,CAAC;QAEF,MAAM,CAAC,IAAI,wBAAU,CAAI,CAAC,QAAqB;YAC7C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,OAAO,GAAG,UAAU,EAAE,CAAC;gBACvB,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,CAAC,KAAQ,KAAK,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EACjC,CAAC,GAAQ;oBACP,IAAI,CAAC,GAAG,OAAO,CAAC;oBAChB,OAAO,GAAG,IAAI,CAAC;oBACf,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACf,CAAC,EACD,MAAM,OAAO,CAAC,QAAQ,EAAE,CACzB,CAAC;YACJ,CAAC;YAED,IAAI,EAAE,CAAC;YAEP,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,OAAO,GAAG,UAAU,EAAE,CAAC;YACzB,CAAC;YACD,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE3C,MAAM,CAAC;gBACL,IAAI,EAAE,CAAC;gBACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACzB,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBACf,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IA5CD,2BA4CC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YCtDD,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICGnC;;;;;;;;;OASG;IACH,gBAA6B,QAAiE;QAC5F,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IACpC,CAAC;IAJD,6BAIC,CAAA;;;;;;;;;;YAMD;gBAGE,YAAoB,QAAqE;oBAArE,aAAQ,GAAR,QAAQ,CAA6D;gBACzF,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAoC,kCAAe;gBACjD,YAAY,WAA4B,EACpB,QAAqE,EACrE,MAAqB;oBACvC,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAA6D;oBACrE,WAAM,GAAN,MAAM,CAAe;gBAEzC,CAAC;gBAED,qEAAqE;gBACrE,oDAAoD;gBACpD,KAAK,CAAC,GAAQ;oBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,MAAW,CAAC;wBAEhB,IAAI,CAAC;4BACH,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC3C,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAC5B,MAAM,CAAC;wBACT,CAAC;wBAED,IAAI,CAAC,WAAW,EAAE,CAAC;wBACb,IAAI,CAAC,WAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACrC,sCAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YChED,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,cAAM,CAAC;YACpC,wBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,cAAM,CAAC;;;;;;;;ICFrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACH,oBAA8B,OAAsC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,qCAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IAFD,qCAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCzCD,wBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;;;;;;;;;YCA7C,wBAAU,CAAC,SAAS,CAAC,aAAa,GAAG,6BAAa,CAAC;;;;;;;;;;;;;;;;;YCAnD,wBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;ICDrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,2BAAgB,CAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YC3CD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICI3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgDG;IACH,kBAAkC,OAAwD,EACxD,cAAuG,EACvG,UAAU,GAAW,MAAM,CAAC,iBAAiB;QAC7E,EAAE,CAAC,CAAC,OAAO,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC;YACvC,UAAU,GAAW,cAAc,CAAC;YACpC,cAAc,GAAG,IAAI,CAAC;QACxB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAO,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;IACnF,CAAC;IARD,iCAQC,CAAA;;;;;;;;;;YASD;gBACE,YAAoB,OAAwD,EACxD,cAA4F,EAC5F,UAAU,GAAW,MAAM,CAAC,iBAAiB;oBAF7C,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;oBAC5F,eAAU,GAAV,UAAU,CAAmC;gBACjE,CAAC;gBAED,IAAI,CAAC,QAAuB,EAAE,MAAW;oBACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAC7C,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAC7D,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAXD,iDAWC,CAAA;YAED;;;;eAIG;YACH,iCAAiD,kCAAe;gBAM9D,YAAY,WAA0B,EAClB,OAAwD,EACxD,cAA4F,EAC5F,UAAU,GAAW,MAAM,CAAC,iBAAiB;oBAC/D,MAAM,WAAW,CAAC,CAAC;oBAHD,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;oBAC5F,eAAU,GAAV,UAAU,CAAmC;oBARzD,iBAAY,GAAY,KAAK,CAAC;oBAC9B,WAAM,GAAQ,EAAE,CAAC;oBACjB,WAAM,GAAW,CAAC,CAAC;oBACjB,UAAK,GAAW,CAAC,CAAC;gBAO5B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAES,QAAQ,CAAC,KAAQ;oBACzB,IAAI,MAA0B,CAAC;oBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACvC,CAAC;gBAEO,SAAS,CAAC,GAAuB,EAAE,KAAQ,EAAE,KAAa;oBAChE,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAO,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC7D,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC7E,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;gBAEO,qBAAqB,CAAC,UAAa,EAAE,UAAa,EAAE,UAAkB,EAAE,UAAkB;oBAChG,IAAI,MAAS,CAAC;oBACd,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC/E,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YA5ED,qDA4EC,CAAA;;;;;;;;ICrKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuDG;IACH,mBAAmC,OAAyD,EACzD,cAA4F;QAC7H,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,2BAAgB,CAAC,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAHD,mCAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YC1DD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICK3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA0CG;IACH,oBAAoC,eAA8B,EAC9B,cAAuG,EACvG,UAAU,GAAW,MAAM,CAAC,iBAAiB;QAC/E,EAAE,CAAC,CAAC,OAAO,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC;YACvC,UAAU,GAAW,cAAc,CAAC;YACpC,cAAc,GAAG,IAAI,CAAC;QACxB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,eAAe,EAAO,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;IAC7F,CAAC;IARD,qCAQC,CAAA;;;;;;;;;;YASD,yEAAyE;YACzE,oFAAoF;YACpF;gBACE,YAAoB,GAAuB,EACvB,cAA4F,EAC5F,UAAU,GAAW,MAAM,CAAC,iBAAiB;oBAF7C,QAAG,GAAH,GAAG,CAAoB;oBACvB,mBAAc,GAAd,cAAc,CAA8E;oBAC5F,eAAU,GAAV,UAAU,CAAmC;gBACjE,CAAC;gBAED,IAAI,CAAC,QAAuB,EAAE,MAAW;oBACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/G,CAAC;YACH,CAAC;YATD,qDASC,CAAA;YAED;;;;eAIG;YACH,mCAAmD,kCAAe;gBAMhE,YAAY,WAA0B,EAClB,GAAuB,EACvB,cAA4F,EAC5F,UAAU,GAAW,MAAM,CAAC,iBAAiB;oBAC/D,MAAM,WAAW,CAAC,CAAC;oBAHD,QAAG,GAAH,GAAG,CAAoB;oBACvB,mBAAc,GAAd,cAAc,CAA8E;oBAC5F,eAAU,GAAV,UAAU,CAAmC;oBARzD,iBAAY,GAAY,KAAK,CAAC;oBAC9B,WAAM,GAAQ,EAAE,CAAC;oBACjB,WAAM,GAAW,CAAC,CAAC;oBACjB,UAAK,GAAW,CAAC,CAAC;gBAO5B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClC,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;wBAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;wBAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;wBACrB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;wBAErC,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACjE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAEO,SAAS,CAAC,GAAuB,EACvB,WAA+B,EAC/B,cAA2F,EAC3F,KAAQ,EACR,KAAa;oBAC7B,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAO,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC7D,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBACvE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAEO,eAAe,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB;oBAC5D,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,IAAI,MAAS,CAAC;oBACd,IAAI,CAAC;wBACH,MAAM,GAAG,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC1E,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAED,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC;gBAED,WAAW,CAAC,GAAQ;oBAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAjFD,yDAiFC,CAAA;;;;;;;;ICrKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiDG;IACH,qBAAqC,eAA8B,EAC9B,cAA4F;QAC/H,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,+BAAkB,CAAC,eAAe,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAHD,uCAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCpDD,wBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICC/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4CG;IACH,eAAyB,SAAuE;QAC9F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAFD,2BAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAAuE,EACvE,MAAsB;oBADtB,cAAS,GAAT,SAAS,CAA8D;oBACvE,WAAM,GAAN,MAAM,CAAgB;gBAC1C,CAAC;gBAED,IAAI,CAAC,UAA8B,EAAE,MAAW;oBAC9C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAiC,wBAAU;gBAIzC,YAAY,WAA6B,EACrB,SAAuE,EACvE,MAAsB;oBACxC,MAAM,WAAW,CAAC,CAAC;oBAFD,cAAS,GAAT,SAAS,CAA8D;oBACvE,WAAM,GAAN,MAAM,CAAgB;oBALlC,UAAK,GAAW,CAAC,CAAC;oBAClB,UAAK,GAAW,CAAC,CAAC;gBAM1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,CAAC;gBACH,CAAC;gBAEO,aAAa,CAAC,KAAQ;oBAC5B,IAAI,MAAW,CAAC;oBAEhB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC5D,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1GD,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICCnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAkCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,qBAAqB,EAAE,CAAC,CAAC;IAChD,CAAC;IAFD,2CAEC,CAAA;;;;;;;YAMD;gBACE,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,uBAAuB,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,sCAAmE,wBAAU;gBAC3E,YAAY,WAA4B;oBACtC,MAAM,WAAW,CAAC,CAAC;gBACrB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAClC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC/DD,wBAAU,CAAC,SAAS,CAAC,aAAa,GAAG,6BAAa,CAAC;;;;;;;;;ICKnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyCG;IACH,kBAA4B,gBAA6D;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,iCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,gBAA6D;oBAA7D,qBAAgB,GAAhB,gBAAgB,CAA6C;gBACjF,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,iCAAuC,kCAAe;gBAKpD,YAAY,WAA0B,EAClB,gBAA6D;oBAC/E,MAAM,WAAW,CAAC,CAAC;oBADD,qBAAgB,GAAhB,gBAAgB,CAA6C;oBAJzE,aAAQ,GAAY,KAAK,CAAC;oBAC1B,yBAAoB,GAAiB,IAAI,CAAC;gBAKlD,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAEvD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;wBAC/B,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAEO,QAAQ,CAAC,KAAQ,EAAE,QAAuC;oBAChE,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACjB,YAAY,CAAC,WAAW,EAAE,CAAC;wBAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAC5B,CAAC;oBAED,YAAY,GAAG,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;oBACjD,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,CAAC;oBACrD,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,SAAS;oBACP,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wBACzB,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC;wBAC/C,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;4BACjB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;4BACjC,YAAY,CAAC,WAAW,EAAE,CAAC;4BAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBAC5B,CAAC;wBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACrB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCvID,wBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;;;ICGzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6CG;IACH,sBAAgC,OAAe,EAAE,SAAS,GAAc,aAAK;QAC3E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;IACjE,CAAC;IAFD,yCAEC,CAAA;IAgED,sBAAsB,UAAuC;QAC3D,UAAU,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;;;;;;;;;;YA5DD;gBACE,YAAoB,OAAe,EAAU,SAAoB;oBAA7C,YAAO,GAAP,OAAO,CAAQ;oBAAU,cAAS,GAAT,SAAS,CAAW;gBACjE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,qCAAwC,wBAAU;gBAKhD,YAAY,WAA0B,EAClB,OAAe,EACf,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAFD,YAAO,GAAP,OAAO,CAAQ;oBACf,cAAS,GAAT,SAAS,CAAW;oBANhC,0BAAqB,GAAiB,IAAI,CAAC;oBAC3C,cAAS,GAAM,IAAI,CAAC;oBACpB,aAAQ,GAAY,KAAK,CAAC;gBAMlC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;gBACnG,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAED,aAAa;oBACX,IAAI,CAAC,aAAa,EAAE,CAAC;oBAErB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACxB,CAAC;gBACH,CAAC;gBAEO,aAAa;oBACnB,MAAM,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;oBAEzD,EAAE,CAAC,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;wBACnC,qBAAqB,CAAC,WAAW,EAAE,CAAC;wBACpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCjHD,wBAAU,CAAC,SAAS,CAAC,YAAY,GAAG,2BAAY,CAAC;;;;;;;;;ICAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6BG;IACH,wBAAqC,YAAY,GAAM,IAAI;QACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7D,CAAC;IAFD,6CAEC,CAAA;;;;;;;YAOD;gBAEE,YAAoB,YAAe;oBAAf,iBAAY,GAAZ,YAAY,CAAG;gBACnC,CAAC;gBAED,IAAI,CAAC,UAA6B,EAAE,MAAW;oBAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,wBAAwB,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,uCAA6C,wBAAU;gBAGrD,YAAY,WAA8B,EAAU,YAAe;oBACjE,MAAM,WAAW,CAAC,CAAC;oBAD+B,iBAAY,GAAZ,YAAY,CAAG;oBAF3D,YAAO,GAAY,IAAI,CAAC;gBAIhC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAES,SAAS;oBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC3C,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCxED,wBAAU,CAAC,SAAS,CAAC,cAAc,GAAG,+BAAc,CAAC;;;;;;;;;ICKrD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsCG;IACH,eAAyB,KAAkB,EAClB,SAAS,GAAc,aAAK;QACnD,MAAM,aAAa,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,QAAQ,GAAG,aAAa,GAAG,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAS,KAAK,CAAC,CAAC;QACtF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IAC3D,CAAC;IALD,2BAKC,CAAA;;;;;;;;;;;;;;;;YAMD;gBACE,YAAoB,KAAa,EACb,SAAoB;oBADpB,UAAK,GAAL,KAAK,CAAQ;oBACb,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAiC,wBAAU;gBAuBzC,YAAY,WAA0B,EAClB,KAAa,EACb,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAFD,UAAK,GAAL,KAAK,CAAQ;oBACb,cAAS,GAAT,SAAS,CAAW;oBAxBhC,UAAK,GAAe,EAAE,CAAC;oBACvB,WAAM,GAAY,KAAK,CAAC;oBACxB,YAAO,GAAY,KAAK,CAAC;gBAwBjC,CAAC;gBAtBD,OAAe,QAAQ,CAAC,KAAU;oBAChC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC5B,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBAC3B,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;oBAClC,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;oBAEtC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;wBAClE,KAAK,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAClD,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;wBACpD,IAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;oBACxB,CAAC;gBACH,CAAC;gBAQO,SAAS,CAAC,SAAoB;oBACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE;wBAChE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS;qBAClE,CAAC,CAAC,CAAC;gBACN,CAAC;gBAEO,oBAAoB,CAAC,YAA+B;oBAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;oBAC7E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,oBAAoB,CAAC,2BAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5D,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,oBAAoB,CAAC,2BAAY,CAAC,cAAc,EAAE,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;YAED;gBACE,YAAoB,IAAY,EACZ,YAAiB;oBADjB,SAAI,GAAJ,IAAI,CAAQ;oBACZ,iBAAY,GAAZ,YAAY,CAAK;gBACrC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC3ID,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICKnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4CG;IACH,mBAA6B,qBAAoD,EACpD,iBAAmC;QAC9D,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,2BAA2B,CAAC,IAAI,EAAE,iBAAiB,CAAC;iBACtD,IAAI,CAAC,IAAI,iBAAiB,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAC9D,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACjE,CAAC;IAPD,mCAOC,CAAA;;;;;;;;;;;;;;;;YAMD;gBACE,YAAoB,qBAAoD;oBAApD,0BAAqB,GAArB,qBAAqB,CAA+B;gBACxE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAC5F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAwC,kCAAe;gBAKrD,YAAY,WAA0B,EAClB,qBAAoD;oBACtE,MAAM,WAAW,CAAC,CAAC;oBADD,0BAAqB,GAArB,qBAAqB,CAA+B;oBALhE,cAAS,GAAY,KAAK,CAAC;oBAC3B,+BAA0B,GAAwB,EAAE,CAAC;oBACrD,WAAM,GAAa,EAAE,CAAC;gBAK9B,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAClC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBAClC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAA+B;oBACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,cAAc,CAAC,QAA+B;oBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBAChD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC;wBACH,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;wBACxD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BAClB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;wBACtC,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAEO,kBAAkB,CAAC,YAAmC;oBAC5D,YAAY,CAAC,WAAW,EAAE,CAAC;oBAE3B,MAAM,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;oBAC9E,IAAI,KAAK,GAAM,IAAI,CAAC;oBAEpB,EAAE,CAAC,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;wBACrC,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;oBACzC,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBAEO,QAAQ,CAAC,aAA8B,EAAE,KAAQ;oBACvD,MAAM,oBAAoB,GAAG,sCAAiB,CAAC,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;oBAC3E,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;oBAE/B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC3D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAEO,WAAW;oBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,0BAA0B,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,0CAA6C,wBAAU;gBACrD,YAAsB,MAAqB,EAAU,iBAAkC;oBACrF,OAAO,CAAC;oBADY,WAAM,GAAN,MAAM,CAAe;oBAAU,sBAAiB,GAAjB,iBAAiB,CAAiB;gBAEvF,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,2BAA2B,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,0CAA6C,wBAAU;gBAGrD,YAAoB,MAAqB,EAAU,MAAqB;oBACtE,OAAO,CAAC;oBADU,WAAM,GAAN,MAAM,CAAe;oBAAU,WAAM,GAAN,MAAM,CAAe;oBAFhE,qBAAgB,GAAY,KAAK,CAAC;gBAI1C,CAAC;gBAES,KAAK,CAAC,MAAW;oBACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC3B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzB,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC3B,CAAC;gBAEO,iBAAiB;oBACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;wBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCxMD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICI3C;;;;;;;;;;;OAWG;IACH,kBAA4B,OAAiC,EAAE,OAAyB;QACtF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,iCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,OAAgC,EAAU,OAAwB;oBAAlE,YAAO,GAAP,OAAO,CAAyB;oBAAU,YAAO,GAAP,OAAO,CAAiB;gBACtF,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,iCAA2C,kCAAe;gBAGxD,YAAY,WAA0B,EAAE,OAAgC,EAAE,OAAwB;oBAChG,MAAM,WAAW,CAAC,CAAC;oBAHb,WAAM,GAAa,EAAE,CAAC;oBAI5B,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACzB,CAAC;oBAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBACzB,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAA+B;oBACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,KAAK,GAAG,KAAK,CAAC;oBAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC1B,IAAI,CAAC;wBACH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gCACnC,KAAK,GAAG,IAAI,CAAC;gCACb,MAAM,CAAC;4BACT,CAAC;wBACH,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAEO,OAAO,CAAC,CAAI,EAAE,CAAI;oBACxB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;gBACjB,CAAC;YACH,CAAC;YA9CD,qDA8CC,CAAA;;;;;;;;;;;;;;;;;YCrFD,wBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;;ICAzC;;;;;;;;;;;;;OAaG;IACH,qBAA+B,GAAW,EAAE,OAAiC,EAAE,OAAyB;QACtG,MAAM,CAAC,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,UAAS,CAAI,EAAE,CAAI;YAC5C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAPD,uCAOC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCrBD,wBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICI/C;;;;;;;;OAQG;IACH,8BAA2C,OAAiC,EAAE,WAAyB;QACrG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,4BAA4B,CAAO,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;IACjF,CAAC;IAFD,yDAEC,CAAA;;;;;;;;;;;;;YAOD;gBACE,YAAoB,OAAgC,EAChC,WAAwB;oBADxB,YAAO,GAAP,OAAO,CAAyB;oBAChC,gBAAW,GAAX,WAAW,CAAa;gBAC5C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,8BAA8B,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3G,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,6CAAmD,wBAAU;gBAI3D,YAAY,WAA0B,EAC1B,OAAgC,EACxB,WAAwB;oBAC1C,MAAM,WAAW,CAAC,CAAC;oBADD,gBAAW,GAAX,WAAW,CAAa;oBAJpC,WAAM,GAAY,KAAK,CAAC;oBAM9B,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAEO,OAAO,CAAC,CAAM,EAAE,CAAM;oBAC5B,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;gBACjB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBAEtB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,GAAG,GAAQ,KAAK,CAAC;oBAErB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBAChB,GAAG,GAAG,mBAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC;wBACxC,EAAE,CAAC,CAAC,GAAG,KAAK,yBAAW,CAAC,CAAC,CAAC;4BACxB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAC/C,CAAC;oBACH,CAAC;oBAED,IAAI,MAAM,GAAQ,KAAK,CAAC;oBAExB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,MAAM,GAAG,mBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;wBAC/C,EAAE,CAAC,CAAC,MAAM,KAAK,yBAAW,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAW,CAAC,CAAC,CAAC,CAAC;wBAC/C,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC;oBAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCjFD,wBAAU,CAAC,SAAS,CAAC,oBAAoB,GAAG,2CAAoB,CAAC;;;;;;;;ICDjE;;;;;;;;;;OAUG;IACH,iCAA2C,GAAW,EAAE,OAAiC;QACvF,MAAM,CAAC,2CAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAS,CAAI,EAAE,CAAI;YACxD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAPD,+DAOC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCjBD,wBAAU,CAAC,SAAS,CAAC,uBAAuB,GAAG,iDAAuB,CAAC;;;;;;;;;ICEvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA0CG;IACH,aAAuB,cAAsD,EACtD,KAAwB,EACxB,QAAqB;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;IACpE,CAAC;IAJD,uBAIC,CAAA;;;;;;;YAOD;gBACE,YAAoB,cAAsD,EACtD,KAAwB,EACxB,QAAqB;oBAFrB,mBAAc,GAAd,cAAc,CAAwC;oBACtD,UAAK,GAAL,KAAK,CAAmB;oBACxB,aAAQ,GAAR,QAAQ,CAAa;gBACzC,CAAC;gBACD,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,2BAA8B,wBAAU;gBAItC,YAAY,WAA0B,EAC1B,cAAsD,EACtD,KAAwB,EACxB,QAAqB;oBAC/B,MAAM,WAAW,CAAC,CAAC;oBAEnB,MAAM,cAAc,GAAG,IAAI,wBAAU,CAAI,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAC1E,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBACzC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oBACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;gBACvC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;oBAChC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;oBAChC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC1B,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;oBAChC,cAAc,CAAC,QAAQ,EAAE,CAAC;oBAC1B,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCpHD,wBAAU,CAAC,SAAS,CAAC,EAAE,GAAG,QAAG,CAAC;YAC9B,wBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,QAAG,CAAC;;;;;;;;;ICE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,EAAK,CAAC,CAAC;IACjD,CAAC;IAFD,+BAEC,CAAA;;;;;;;;;;YAMD;gBACE,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAAuC,kCAAe;gBAIpD,YAAY,WAA0B;oBACpC,MAAM,WAAW,CAAC,CAAC;oBAJb,iBAAY,GAAY,KAAK,CAAC;oBAC9B,oBAAe,GAAY,KAAK,CAAC;gBAIzC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC5B,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC3C,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCvFD,wBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAO,CAAC;;;;;;;;;ICIvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4CG;IACH,oBAAoC,OAAwD,EACxD,cAA4F;QAC9H,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;IACxE,CAAC;IAHD,qCAGC,CAAA;;;;;;;;;;YAQD;gBACE,YAAoB,OAAwD,EACxD,cAA4F;oBAD5F,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;gBAChH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,wBAAwB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,uCAAgD,kCAAe;gBAK7D,YAAY,WAA0B,EAClB,OAAwD,EACxD,cAA4F;oBAC9G,MAAM,WAAW,CAAC,CAAC;oBAFD,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;oBANxG,oBAAe,GAAY,KAAK,CAAC;oBACjC,iBAAY,GAAY,KAAK,CAAC;oBAC9B,UAAK,GAAW,CAAC,CAAC;gBAM1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC;gBACH,CAAC;gBAEO,OAAO,CAAC,KAAQ;oBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC5B,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1D,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBACvE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAEO,eAAe,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB;oBAC5D,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;wBAC9E,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3B,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAED,WAAW,CAAC,GAAQ;oBAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAEtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCjJD,wBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICO7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4CG;IACH,gBAA6B,OAAmD,EACnD,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,SAAS,GAAc,SAAS;QAC3D,UAAU,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,iBAAiB,GAAG,UAAU,CAAC;QAE3E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;IACvE,CAAC;IAND,6BAMC,CAAA;;;;;;;;;;;;;;;;YAOD;gBACE,YAAoB,OAAmD,EACnD,UAAkB,EAClB,SAAoB;oBAFpB,YAAO,GAAP,OAAO,CAA4C;oBACnD,eAAU,GAAV,UAAU,CAAQ;oBAClB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC5G,CAAC;YACH,CAAC;YATD,6CASC,CAAA;YASD;;;;eAIG;YACH,+BAA4C,kCAAe;gBAMzD,YAAY,WAA0B,EAClB,OAAmD,EACnD,UAAkB,EAClB,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAHD,YAAO,GAAP,OAAO,CAA4C;oBACnD,eAAU,GAAV,UAAU,CAAQ;oBAClB,cAAS,GAAT,SAAS,CAAW;oBARhC,UAAK,GAAW,CAAC,CAAC;oBAClB,WAAM,GAAW,CAAC,CAAC;oBACnB,iBAAY,GAAY,KAAK,CAAC;oBAQpC,EAAE,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBAC1C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAED,OAAe,QAAQ,CAAO,GAAsB;oBAClD,MAAM,EAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAC,GAAG,GAAG,CAAC;oBAC/C,UAAU,CAAC,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACzD,CAAC;gBAES,KAAK,CAAC,KAAU;oBACxB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAErC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACxB,IAAI,MAAM,GAAG,mBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBAClD,EAAE,CAAC,CAAC,MAAM,KAAK,0BAAW,CAAC,CAAC,CAAC;4BAC3B,WAAW,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;wBACnC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BAC3B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;wBACnD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,KAAK,GAAsB,EAAE,UAAU,EAAE,IAAI,EAAE,QAAA,MAAM,EAAE,OAAA,KAAK,EAAE,OAAA,KAAK,EAAE,CAAC;4BAC5E,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;wBACzE,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAEO,qBAAqB,CAAC,MAAW,EAAE,KAAQ,EAAE,KAAa;oBAChE,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAO,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBAChE,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACzB,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7B,CAAC;oBACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YA3ED,iDA2EC,CAAA;;;;;;;;;;;;;;;;;YCnKD,wBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;;;YCJrC;;;;;;;;;eASG;YACH,sCAA6C,KAAK;gBAChD;oBACE,MAAM,GAAG,GAAQ,MAAM,uBAAuB,CAAC,CAAC;oBACzC,IAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,yBAAyB,CAAC;oBAClD,IAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;oBACxB,IAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBACrC,CAAC;YACH,CAAC;YAPD,+DAOC,CAAA;;;;;;;;;ICXD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoCG;IACH,mBAA6B,KAAa,EAAE,YAAgB;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;IAC/D,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;YAMD;gBAEE,YAAoB,KAAa,EAAU,YAAgB;oBAAvC,UAAK,GAAL,KAAK,CAAQ;oBAAU,iBAAY,GAAZ,YAAY,CAAI;oBACzD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACd,MAAM,IAAI,iDAAuB,CAAC;oBACpC,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC/F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAqC,wBAAU;gBAE7C,YAAY,WAA0B,EAAU,KAAa,EAAU,YAAgB;oBACrF,MAAM,WAAW,CAAC,CAAC;oBAD2B,UAAK,GAAL,KAAK,CAAQ;oBAAU,iBAAY,GAAZ,YAAY,CAAI;gBAEvF,CAAC;gBAES,KAAK,CAAC,CAAI;oBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;wBACpB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;4BAC7C,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBACtC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,WAAW,CAAC,KAAK,CAAC,IAAI,iDAAuB,CAAC,CAAC;wBACjD,CAAC;oBACH,CAAC;oBACD,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzFD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACH,gBAA0B,SAA+C,EAC/C,OAAa;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAHD,6BAGC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAA+C,EAC/C,OAAa;oBADb,cAAS,GAAT,SAAS,CAAsC;oBAC/C,YAAO,GAAP,OAAO,CAAM;gBACjC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,wBAAU;gBAI1C,YAAY,WAA0B,EAClB,SAA+C,EAC/C,OAAY;oBAC9B,MAAM,WAAW,CAAC,CAAC;oBAFD,cAAS,GAAT,SAAS,CAAsC;oBAC/C,YAAO,GAAP,OAAO,CAAK;oBAJhC,UAAK,GAAW,CAAC,CAAC;oBAMhB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC7B,CAAC;gBAED,qDAAqD;gBACrD,qEAAqE;gBAC3D,KAAK,CAAC,KAAQ;oBACtB,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAClE,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1FD,wBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICCrC;;;;;;;OAOG;IACH,kBAA4B,QAAoB;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClD,CAAC;IAFD,iCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,QAAoB;oBAApB,aAAQ,GAAR,QAAQ,CAAY;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7E,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAmC,wBAAU;gBAC3C,YAAY,WAA0B,EAAE,QAAoB;oBAC1D,MAAM,WAAW,CAAC,CAAC;oBACnB,IAAI,CAAC,GAAG,CAAC,IAAI,4BAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCpCD,wBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,kBAAQ,CAAC;YACxC,wBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,kBAAQ,CAAC;;;;;;;;;ICDzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCG;IACH,cAAwB,SAAsE,EACtE,OAAa;QACnC,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;YACpC,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAC;QACrD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3E,CAAC;IAND,yBAMC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAAsE,EACtE,MAAqB,EACrB,UAAmB,EACnB,OAAa;oBAHb,cAAS,GAAT,SAAS,CAA6D;oBACtE,WAAM,GAAN,MAAM,CAAe;oBACrB,eAAU,GAAV,UAAU,CAAS;oBACnB,YAAO,GAAP,OAAO,CAAM;gBACjC,CAAC;gBAED,IAAI,CAAC,QAAuB,EAAE,MAAW;oBACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1H,CAAC;YACH,CAAC;YAVD,mDAUC,CAAA;YAED;;;;eAIG;YACH,kCAA4C,wBAAU;gBAGpD,YAAY,WAA0B,EAClB,SAAsE,EACtE,MAAqB,EACrB,UAAmB,EACnB,OAAa;oBAC/B,MAAM,WAAW,CAAC,CAAC;oBAJD,cAAS,GAAT,SAAS,CAA6D;oBACtE,WAAM,GAAN,MAAM,CAAe;oBACrB,eAAU,GAAV,UAAU,CAAS;oBACnB,YAAO,GAAP,OAAO,CAAM;oBANzB,UAAK,GAAW,CAAC,CAAC;gBAQ1B,CAAC;gBAEO,cAAc,CAAC,KAAU;oBAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAErC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxB,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;oBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC1E,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;wBACvD,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;gBACxD,CAAC;YACH,CAAC;YAlCD,uDAkCC,CAAA;;;;;;;;;;;;;;;;;YChGD,wBAAU,CAAC,SAAS,CAAC,IAAI,GAAG,WAAI,CAAC;;;;;;;;ICDjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiCG;IACH,mBAA6B,SAAsE,EACtE,OAAa;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,wBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IAC1E,CAAC;IAHD,mCAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCpCD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;;;YCJ3C;;;;;;;;;eASG;YACH,yBAAgC,KAAK;gBACnC;oBACE,MAAM,GAAG,GAAQ,MAAM,yBAAyB,CAAC,CAAC;oBAC3C,IAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,YAAY,CAAC;oBACrC,IAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;oBACxB,IAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBACrC,CAAC;YACH,CAAC;YAPD,qCAOC,CAAA;;;;;;;;;ICZD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgDG;IACH,eAA4B,SAAuE,EACvE,cAA+C,EAC/C,YAAgB;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IACrF,CAAC;IAJD,2BAIC,CAAA;;;;;;;;;;YASD;gBACE,YAAoB,SAAuE,EACvE,cAA+C,EAC/C,YAAkB,EAClB,MAAsB;oBAHtB,cAAS,GAAT,SAAS,CAA8D;oBACvE,mBAAc,GAAd,cAAc,CAAiC;oBAC/C,iBAAY,GAAZ,YAAY,CAAM;oBAClB,WAAM,GAAN,MAAM,CAAgB;gBAC1C,CAAC;gBAED,IAAI,CAAC,QAAuB,EAAE,MAAW;oBACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC/H,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAoC,wBAAU;gBAI5C,YAAY,WAA0B,EAClB,SAAuE,EACvE,cAA+C,EAC/C,YAAkB,EAClB,MAAsB;oBACxC,MAAM,WAAW,CAAC,CAAC;oBAJD,cAAS,GAAT,SAAS,CAA8D;oBACvE,mBAAc,GAAd,cAAc,CAAiC;oBAC/C,iBAAY,GAAZ,YAAY,CAAM;oBAClB,WAAM,GAAN,MAAM,CAAgB;oBAPlC,UAAK,GAAW,CAAC,CAAC;oBAClB,iBAAY,GAAY,KAAK,CAAC;gBAQtC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBAEO,aAAa,CAAC,KAAQ,EAAE,KAAa;oBAC3C,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrD,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBAEO,KAAK,CAAC,KAAU,EAAE,KAAa;oBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;wBACtC,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;gBAEO,kBAAkB,CAAC,KAAQ,EAAE,KAAa;oBAChD,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC7C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC;gBAEO,UAAU,CAAC,KAAU;oBAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxB,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;wBACnE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC9B,WAAW,CAAC,KAAK,CAAC,IAAI,uBAAU,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCrJD,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAQ,aAAK,CAAC;;;;;;;;;;;YCJxC;gBAAA;oBACS,SAAI,GAAG,CAAC,CAAC;oBACR,YAAO,GAAU,EAAE,CAAC;oBACpB,UAAK,GAAU,EAAE,CAAC;gBAuC5B,CAAC;gBArCC,GAAG,CAAC,GAAQ;oBACV,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChD,CAAC;gBAED,GAAG,CAAC,GAAQ,EAAE,KAAU;oBACtB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACzB,IAAI,CAAC,IAAI,EAAE,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;oBAC1B,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,MAAM,CAAC,GAAQ;oBACb,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAAC,MAAM,CAAC,KAAK,CAAC;oBAAC,CAAC;oBAC/B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,KAAK;oBACH,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAChB,CAAC;gBAED,OAAO,CAAC,EAAY,EAAE,OAAY;oBAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;wBACnC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC;YACH,CAAC;YA1CD,uCA0CC,CAAA;;;;;;;;QCvCY,GAAG;;;;;;;;;;YAAH,mBAAA,GAAG,GAAG,YAAI,CAAC,GAAG,IAAI,CAAC,MAAM,yBAAW,CAAC,EAAE,CAAA,CAAC;;;;;;;;;;;YCHrD;gBAAA;oBACU,WAAM,GAAW,EAAE,CAAC;gBA4B9B,CAAC;gBA1BC,MAAM,CAAC,GAAW;oBAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oBACxB,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,GAAG,CAAC,GAAW,EAAE,KAAU;oBACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,GAAG,CAAC,GAAW;oBACb,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;gBAED,OAAO,CAAC,EAAkC,EAAE,OAAa;oBACvD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;wBACvB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;4BACvD,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;wBACrC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,KAAK;oBACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACnB,CAAC;YACH,CAAC;YA7BD,+BA6BC,CAAA;;;;;;;;;ICrBD;;;;;;;;;;;;;;;;;;;;OAoBG;IACH,iBAAiC,WAA4B,EAC5B,eAAiC,EACjC,gBAAwE;QACvG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC9F,CAAC;IAJD,+BAIC,CAAA;;;;;;;;;;;;;;;;;;;;;;YAiBD;gBACE,YAAmB,MAAqB,EACpB,WAA4B,EAC5B,eAAiC,EACjC,gBAAwE;oBAHzE,WAAM,GAAN,MAAM,CAAe;oBACpB,gBAAW,GAAX,WAAW,CAAiB;oBAC5B,oBAAe,GAAf,eAAe,CAAkB;oBACjC,qBAAgB,GAAhB,gBAAgB,CAAwD;gBAC5F,CAAC;gBAED,IAAI,CAAC,UAA+C,EAAE,MAAW;oBAC/D,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAC5C,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAC1E,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAyC,wBAAU;gBAKjD,YAAY,WAAgD,EACxC,WAA4B,EAC5B,eAAiC,EACjC,gBAAwE;oBAC1F,MAAM,WAAW,CAAC,CAAC;oBAHD,gBAAW,GAAX,WAAW,CAAiB;oBAC5B,oBAAe,GAAf,eAAe,CAAkB;oBACjC,qBAAgB,GAAhB,gBAAgB,CAAwD;oBAPpF,WAAM,GAAyB,IAAI,CAAC;oBACrC,2BAAsB,GAAY,KAAK,CAAC;oBACxC,UAAK,GAAW,CAAC,CAAC;gBAOzB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,GAAM,CAAC;oBACX,IAAI,CAAC;wBACH,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAChC,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAChB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC1B,CAAC;gBAEO,MAAM,CAAC,KAAQ,EAAE,GAAM;oBAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAEzB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,IAAI,iBAAO,EAAE,GAAG,IAAI,SAAG,EAAE,CAAC;oBAC7E,CAAC;oBAED,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAE5B,IAAI,OAAU,CAAC;oBACf,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC;4BACH,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;wBACxC,CAAE;wBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAClB,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,GAAQ,KAAK,CAAC;oBACvB,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,iBAAO,EAAK,CAAC,CAAC;wBAC1C,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;wBAClE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBACzC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;4BAC1B,IAAI,QAAa,CAAC;4BAClB,IAAI,CAAC;gCACH,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,iBAAiB,CAAO,GAAG,EAAc,KAAK,CAAC,CAAC,CAAC;4BACxF,CAAE;4BAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCAChB,MAAM,CAAC;4BACT,CAAC;4BACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,uBAAuB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC9E,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACtB,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG;4BACxB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACnB,CAAC,CAAC,CAAC;wBAEH,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjB,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAES,SAAS;oBACjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG;4BACxB,KAAK,CAAC,QAAQ,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;wBAEH,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjB,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAED,WAAW,CAAC,GAAM;oBAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;gBAED,WAAW;oBACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;wBACjD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;wBACnC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;4BACrB,KAAK,CAAC,WAAW,EAAE,CAAC;wBACtB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,sCAA4C,wBAAU;gBACpD,YAAoB,GAAM,EACN,KAAiB,EACjB,MAAoC;oBACtD,OAAO,CAAC;oBAHU,QAAG,GAAH,GAAG,CAAG;oBACN,UAAK,GAAL,KAAK,CAAY;oBACjB,WAAM,GAAN,MAAM,CAA8B;gBAExD,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpC,CAAC;gBAES,SAAS;oBACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACnB,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC;YAED;;;;;;;eAOG;YACH,gCAA6C,wBAAU;gBACrD,YAAmB,GAAM,EACL,YAAwB,EACxB,oBAA2C;oBAC7D,OAAO,CAAC;oBAHS,QAAG,GAAH,GAAG,CAAG;oBACL,iBAAY,GAAZ,YAAY,CAAY;oBACxB,yBAAoB,GAApB,oBAAoB,CAAuB;gBAE/D,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;oBACxC,MAAM,EAAC,oBAAoB,EAAE,YAAY,EAAC,GAAG,IAAI,CAAC;oBAClD,EAAE,CAAC,CAAC,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzD,YAAY,CAAC,GAAG,CAAC,IAAI,yBAAyB,CAAC,oBAAoB,CAAC,CAAC,CAAC;oBACxE,CAAC;oBACD,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrD,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;YACH,CAAC;YAhBD,mDAgBC,CAAA;YAED;;;;eAIG;YACH,wCAAwC,4BAAY;gBAClD,YAAoB,MAA4B;oBAC9C,OAAO,CAAC;oBADU,WAAM,GAAN,MAAM,CAAsB;oBAE9C,MAAM,CAAC,KAAK,EAAE,CAAC;gBACjB,CAAC;gBAED,WAAW;oBACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnC,KAAK,CAAC,WAAW,EAAE,CAAC;wBACpB,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;wBAClB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;4BACxD,MAAM,CAAC,WAAW,EAAE,CAAC;wBACvB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCxPD,wBAAU,CAAC,SAAS,CAAC,OAAO,GAAQ,iBAAO,CAAC;;;;;;;;;ICC5C;;;;;;;;;OASG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,sBAAsB,EAAE,CAAC,CAAC;IACjD,CAAC;IAFD,6CAEC,CAAA;;;;;;;;;;YAAA,CAAC;YAMF;gBACE,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,wBAAwB,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,uCAA0C,wBAAU;gBACxC,KAAK,CAAC,MAAS;oBACvB,WAAI,EAAE,CAAC;gBACT,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YClCD,wBAAU,CAAC,SAAS,CAAC,cAAc,GAAG,+BAAc,CAAC;;;;;;;;;ICArD;;;;;;;;OAQG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;IAC1C,CAAC;IAFD,+BAEC,CAAA;;;;;;;YAMD;gBACE,IAAI,CAAE,QAA6B,EAAE,MAAW;oBAC9C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAgC,wBAAU;gBACxC,YAAY,WAAgC;oBAC1C,MAAM,WAAW,CAAC,CAAC;gBACrB,CAAC;gBAEO,cAAc,CAAC,OAAgB;oBACrC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAErC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1B,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;gBAES,KAAK,CAAC,KAAc;oBAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC/CD,wBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAO,CAAC;;;;;;;;;ICMvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCG;IACH,eAAyB,gBAA0D;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACxD,CAAC;IAFD,2BAEC,CAAA;;;;;;;;;;;;;;;;YAMD;gBACE,YAAoB,gBAA0D;oBAA1D,qBAAgB,GAAhB,gBAAgB,CAA0C;gBAC9E,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAO,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAoC,kCAAe;gBAMjD,YAAY,WAA0B,EAClB,gBAA0D;oBAC5E,MAAM,WAAW,CAAC,CAAC;oBADD,qBAAgB,GAAhB,gBAAgB,CAA0C;oBAJtE,aAAQ,GAAY,KAAK,CAAC;gBAMlC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,QAAQ,GAAG,oBAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC;wBACxD,EAAE,CAAC,CAAC,QAAQ,KAAK,0BAAW,CAAC,CAAC,CAAC;4BAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;wBACxC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;wBAC/D,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,aAAa;oBACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAC5C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,SAAS,CAAC,WAAW,EAAE,CAAC;oBAC1B,CAAC;oBACD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAAE,UAAkB,EAAE,UAAkB;oBAC7E,IAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YClHD,wBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICInC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyCG;IACH,mBAA6B,QAAgB,EAAE,SAAS,GAAc,aAAK;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IAC/D,CAAC;IAFD,mCAEC,CAAA;IAwDD,sBAAyB,UAAkC;QACzD,UAAU,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;;;;;;;;;;YApDD;gBACE,YAAoB,QAAgB,EAChB,SAAoB;oBADpB,aAAQ,GAAR,QAAQ,CAAQ;oBAChB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAqC,wBAAU;gBAM7C,YAAY,WAA0B,EAClB,QAAgB,EAChB,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAAQ;oBAChB,cAAS,GAAT,SAAS,CAAW;oBALhC,aAAQ,GAAY,KAAK,CAAC;gBAOlC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;oBACxF,CAAC;gBACH,CAAC;gBAED,aAAa;oBACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;oBAC5C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,SAAS,CAAC,WAAW,EAAE,CAAC;oBAC1B,CAAC;oBACD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCtGD,wBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICE3C;;;;;;;;;;;;;;;;OAgBG;IACH,cAA2B,SAAuE,EACvE,cAAsD,EACtD,YAAgB;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IACpF,CAAC;IAJD,yBAIC,CAAA;;;;;;;;;;YASD;gBACE,YAAoB,SAAuE,EACvE,cAA+C,EAC/C,YAAkB,EAClB,MAAsB;oBAHtB,cAAS,GAAT,SAAS,CAA8D;oBACvE,mBAAc,GAAd,cAAc,CAAiC;oBAC/C,iBAAY,GAAZ,YAAY,CAAM;oBAClB,WAAM,GAAN,MAAM,CAAgB;gBAC1C,CAAC;gBAED,IAAI,CAAC,QAAuB,EAAE,MAAW;oBACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9H,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,6BAAmC,wBAAU;gBAK3C,YAAY,WAA0B,EAClB,SAAuE,EACvE,cAA+C,EAC/C,YAAkB,EAClB,MAAsB;oBACxC,MAAM,WAAW,CAAC,CAAC;oBAJD,cAAS,GAAT,SAAS,CAA8D;oBACvE,mBAAc,GAAd,cAAc,CAAiC;oBAC/C,iBAAY,GAAZ,YAAY,CAAM;oBAClB,WAAM,GAAN,MAAM,CAAgB;oBAPlC,aAAQ,GAAY,KAAK,CAAC;oBAC1B,UAAK,GAAW,CAAC,CAAC;oBAQxB,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;wBACxC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;wBAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;4BACtC,MAAM,CAAC;wBACT,CAAC;wBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAEO,aAAa,CAAC,KAAQ,EAAE,KAAa;oBAC3C,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrD,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;4BACtC,MAAM,CAAC;wBACT,CAAC;wBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAEO,kBAAkB,CAAC,KAAQ,EAAE,KAAa;oBAChD,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC7C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;oBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACjC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,KAAK,CAAC,IAAI,uBAAU,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCtHD,wBAAU,CAAC,SAAS,CAAC,IAAI,GAAQ,WAAI,CAAC;;;;;;;ICFtC;;;;;OAKG;IACH,kBAA+B,IAAgD;QAC7E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAFD,iCAEC,CAAA;;;;;;;;;;;;;;;;;;;;YCND,yBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,cAAQ,CAAC;YACpC,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,cAAQ,CAAC;;;;;;;;;ICAxC;;;;;;;OAOG;IACH,eAAyB,SAAsE,EACtE,OAAa;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAHD,2BAGC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAAsE,EACtE,OAAa,EACb,MAAsB;oBAFtB,cAAS,GAAT,SAAS,CAA6D;oBACtE,YAAO,GAAP,OAAO,CAAM;oBACb,WAAM,GAAN,MAAM,CAAgB;gBAC1C,CAAC;gBAED,IAAI,CAAC,QAA6B,EAAE,MAAW;oBAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAiC,wBAAU;gBAGzC,YAAY,WAA8B,EACtB,SAAsE,EACtE,OAAY,EACZ,MAAsB;oBACxC,MAAM,WAAW,CAAC,CAAC;oBAHD,cAAS,GAAT,SAAS,CAA6D;oBACtE,YAAO,GAAP,OAAO,CAAK;oBACZ,WAAM,GAAN,MAAM,CAAgB;oBALlC,UAAK,GAAW,CAAC,CAAC;oBAOxB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC;gBACjC,CAAC;gBAEO,cAAc,CAAC,eAAwB;oBAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,MAAM,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/E,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCnED,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;;;;;;;;;YCAnC,yBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,SAAG,CAAC;;;;;;;;;ICA/B;;;;;;;;;;;;;;;;;;;;;;;;;OAyBG;IACH,eAA4B,KAAQ;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IAFD,2BAEC,CAAA;;;;;;;YAMD;gBAIE,YAAY,KAAQ;oBAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAoC,wBAAU;gBAI5C,YAAY,WAA0B,EAAE,KAAQ;oBAC9C,MAAM,WAAW,CAAC,CAAC;oBACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,CAAC;gBAES,KAAK,CAAC,CAAI;oBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YChED,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICCnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;IAC9C,CAAC;IAFD,uCAEC,CAAA;;;;;;;;;;YAMD;gBACE,IAAI,CAAC,UAAuC,EAAE,MAAW;oBACvD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAAuC,wBAAU;gBAC/C,YAAY,WAAwC;oBAClD,MAAM,WAAW,CAAC,CAAC;gBACrB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,2BAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxD,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,WAAW,CAAC,IAAI,CAAC,2BAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChD,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,WAAW,CAAC,IAAI,CAAC,2BAAY,CAAC,cAAc,EAAE,CAAC,CAAC;oBAChD,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC7ED,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICA/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4CG;IACH,gBAA6B,WAAoC,EAAE,IAAQ;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;IAFD,6BAEC,CAAA;;;;;;;YAQD;gBAEE,YAAoB,WAAoC,EAAU,IAAQ;oBAAtD,gBAAW,GAAX,WAAW,CAAyB;oBAAU,SAAI,GAAJ,IAAI,CAAI;gBAC1E,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1F,CAAC;YACH,CAAC;YARD,6CAQC,CAAA;YAED;;;;eAIG;YACH,+BAA4C,wBAAU;gBAMpD,YAAY,WAA0B,EAClB,WAAoC,EAC5C,IAAQ;oBAClB,MAAM,WAAW,CAAC,CAAC;oBAFD,gBAAW,GAAX,WAAW,CAAyB;oBAHxD,aAAQ,GAAY,KAAK,CAAC;oBAMxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,KAAK,WAAW,CAAC;gBAC7C,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACpD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;wBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAEO,UAAU,CAAC,KAAQ;oBACzB,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,WAAW,CAAI,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBAChD,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;gBACpB,CAAC;gBAES,SAAS;oBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAzCD,iDAyCC,CAAA;;;;;;;;IChHD;;;;;;;;;;;OAWG;IACH,aAAuB,QAAiC;QACtD,MAAM,GAAG,GAAsB,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC;cAC3D,CAAC,CAAC,EAAE,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;cACpC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,uBAAc,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IALD,uBAKC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YChBD,yBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,SAAG,CAAC;;;;;;;;;;;;;;;;;YCA/B,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;;;;;;;;;YCAnC,yBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;;;;;;;;;;;YCAzC,yBAAU,CAAC,SAAS,CAAC,QAAQ,GAAQ,mBAAQ,CAAC;YAC9C,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAQ,mBAAQ,CAAC;;;;;;;;;;;;;;;;;YCD7C,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAQ,uBAAU,CAAC;YACjD,yBAAU,CAAC,SAAS,CAAC,UAAU,GAAQ,uBAAU,CAAC;;;;;;;;;ICKlD;;;;;;;OAOG;IACH,mBAAgC,OAA4C,EAC5C,IAAO,EACP,UAAU,GAAW,MAAM,CAAC,iBAAiB;QAC3E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;IACrE,CAAC;IAJD,mCAIC,CAAA;;;;;;;;;;;;;;;;YAMD;gBACE,YAAoB,OAA4C,EAC5C,IAAO,EACP,UAAkB;oBAFlB,YAAO,GAAP,OAAO,CAAqC;oBAC5C,SAAI,GAAJ,IAAI,CAAG;oBACP,eAAU,GAAV,UAAU,CAAQ;gBACtC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAC9C,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CACrD,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAXD,mDAWC,CAAA;YAED;;;;eAIG;YACH,kCAA+C,kCAAe;gBAO5D,YAAY,WAA0B,EAClB,OAA4C,EAC5C,GAAM,EACN,UAAkB;oBACpC,MAAM,WAAW,CAAC,CAAC;oBAHD,YAAO,GAAP,OAAO,CAAqC;oBAC5C,QAAG,GAAH,GAAG,CAAG;oBACN,eAAU,GAAV,UAAU,CAAQ;oBAT9B,aAAQ,GAAY,KAAK,CAAC;oBAC1B,iBAAY,GAAY,KAAK,CAAC;oBAC9B,WAAM,GAAsB,EAAE,CAAC;oBAC/B,WAAM,GAAW,CAAC,CAAC;oBACjB,UAAK,GAAW,CAAC,CAAC;gBAO5B,CAAC;gBAES,KAAK,CAAC,KAAU;oBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;wBAC3B,MAAM,GAAG,GAAG,oBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;wBACpD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;wBACrC,EAAE,CAAC,CAAC,GAAG,KAAK,0BAAW,CAAC,CAAC,CAAC;4BACxB,WAAW,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;wBACnC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,MAAM,EAAE,CAAC;4BACd,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;wBACpC,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAEO,SAAS,CAAC,GAAQ,EAAE,KAAQ,EAAE,KAAa;oBACjD,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAO,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC7D,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAClC,CAAC;wBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC;oBACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/B,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAClD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAClC,CAAC;wBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAlED,uDAkEC,CAAA;;;;;;;;;;;;;;;;;YC5GD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;ICD3C;;;;;;;;;;OAUG;IACH,aAAuB,QAAiC;QACtD,MAAM,GAAG,GAAsB,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC;cAC3D,CAAC,CAAC,EAAE,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;cACpC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,uBAAc,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IALD,uBAKC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCfD,yBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,SAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;YCE/B;;eAEG;YACH,oCAA8C,yBAAU;gBAMtD,YAAsB,MAAqB,EACrB,cAAgC;oBACpD,OAAO,CAAC;oBAFY,WAAM,GAAN,MAAM,CAAe;oBACrB,mBAAc,GAAd,cAAc,CAAkB;oBAJ5C,cAAS,GAAW,CAAC,CAAC;gBAMhC,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBACjD,CAAC;gBAES,UAAU;oBAClB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC9B,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACvB,CAAC;gBAED,OAAO;oBACL,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;oBAClC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBAChB,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,4BAAY,EAAE,CAAC;wBACnD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;6BACvB,SAAS,CAAC,IAAI,qBAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClE,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;4BACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;4BACxB,UAAU,GAAG,4BAAY,CAAC,KAAK,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;wBAChC,CAAC;oBACH,CAAC;oBACD,MAAM,CAAC,UAAU,CAAC;gBACpB,CAAC;gBAED,QAAQ;oBACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAI,IAAI,CAAC,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;YA1CD,2DA0CC,CAAA;YAED,oCAAuC,2BAAiB;gBACtD,YAAY,WAAuB,EACf,WAAqC;oBACvD,MAAM,WAAW,CAAC,CAAC;oBADD,gBAAW,GAAX,WAAW,CAA0B;gBAEzD,CAAC;gBACS,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBACS,SAAS;oBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;gBACS,YAAY;oBACpB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,MAAM,UAAU,GAAU,WAAY,CAAC,WAAW,CAAC;wBAC5C,WAAY,CAAC,SAAS,GAAG,CAAC,CAAC;wBAC3B,WAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAC7B,WAAY,CAAC,WAAW,GAAG,IAAI,CAAC;wBACvC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;4BACf,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC3B,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAED;gBACE,YAAoB,WAAqC;oBAArC,gBAAW,GAAX,WAAW,CAA0B;gBACzD,CAAC;gBACD,IAAI,CAAC,UAAyB,EAAE,MAAW;oBAEzC,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBACtB,WAAY,CAAC,SAAS,EAAE,CAAC;oBAEhC,MAAM,UAAU,GAAG,IAAI,kBAAkB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;oBACnE,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBAEnD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,UAAW,CAAC,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;oBACxD,CAAC;oBAED,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;YACH,CAAC;YAED,iCAAoC,wBAAU;gBAI5C,YAAY,WAA0B,EAClB,WAAqC;oBACvD,MAAM,WAAW,CAAC,CAAC;oBADD,gBAAW,GAAX,WAAW,CAA0B;gBAEzD,CAAC;gBAES,YAAY;oBAEpB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,MAAM,QAAQ,GAAU,WAAY,CAAC,SAAS,CAAC;oBAC/C,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAEM,WAAY,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;oBAC7C,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAED,GAAG;oBACH,wEAAwE;oBACxE,wEAAwE;oBACxE,yEAAyE;oBACzE,0EAA0E;oBAC1E,0EAA0E;oBAC1E,yEAAyE;oBACzE,eAAe;oBACf,MAAM;oBACN,0BAA0B;oBAC1B,eAAe;oBACf,gBAAgB;oBAChB,aAAa;oBACb,kBAAkB;oBAClB,MAAM;oBACN,4EAA4E;oBAC5E,oEAAoE;oBACpE,gDAAgD;oBAChD,4EAA4E;oBAC5E,6BAA6B;oBAC7B,2EAA2E;oBAC3E,6CAA6C;oBAC7C,GAAG;oBACH,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;oBAC5B,MAAM,gBAAgB,GAAU,WAAY,CAAC,WAAW,CAAC;oBACzD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBAEvB,EAAE,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;wBACzE,gBAAgB,CAAC,WAAW,EAAE,CAAC;oBACjC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;;YC3JD,kCAA4C,yBAAU;gBACpD,YAAsB,MAAqB,EACvB,cAAgC,EAChC,QAAkD;oBACpE,OAAO,CAAC;oBAHY,WAAM,GAAN,MAAM,CAAe;oBACvB,mBAAc,GAAd,cAAc,CAAkB;oBAChC,aAAQ,GAAR,QAAQ,CAA0C;gBAEtE,CAAC;gBAES,UAAU,CAAC,UAAyB;oBAC5C,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;oBAClC,MAAM,WAAW,GAAG,IAAI,6CAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC3E,MAAM,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACjE,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;oBACxC,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;YACH,CAAC;YAdD,uDAcC,CAAA;;;;;;;;ICfD;;;;;;;;;;;;;;;;;;OAkBG;IACH,mBAA6B,uBAAwD,EACxD,QAAmD;QAC9E,IAAI,cAAgC,CAAC;QACrC,EAAE,CAAC,CAAC,OAAO,uBAAuB,KAAK,UAAU,CAAC,CAAC,CAAC;YAClD,cAAc,GAAqB,uBAAuB,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,cAAc,GAAG;gBACf,MAAM,CAAa,uBAAuB,CAAC;YAC7C,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,CAAC,QAAQ;YACd,IAAI,6CAAqB,CAAC,IAAI,EAAE,cAAc,CAAC;YAC/C,IAAI,yCAAmB,CAAC,IAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAdD,mCAcC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YClCD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAQ,qBAAS,CAAC;;;;;;;;;;;;;;;;;YCAhD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;;;;;;;;;YCD3C,yBAAU,CAAC,SAAS,CAAC,iBAAiB,GAAG,qCAAiB,CAAC;;;;;;;;;ICC3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAkCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;IAC3C,CAAC;IAFD,iCAEC,CAAA;;;;;;;YAMD;gBACE,IAAI,CAAC,UAA8B,EAAE,MAAW;oBAC9C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,iCAAoC,wBAAU;gBAI5C,YAAY,WAA+B;oBACzC,MAAM,WAAW,CAAC,CAAC;oBAHb,YAAO,GAAY,KAAK,CAAC;gBAIjC,CAAC;gBAED,KAAK,CAAC,KAAQ;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC5C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACtB,CAAC;oBAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACpB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCvED,yBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;ICJzC,aAAoB,IAAc,EAAE,OAAY;QAC9C;YACE,MAAM,CAAC,CAAC,CAAQ,OAAQ,CAAC,IAAI,CAAC,KAAK,CAAQ,OAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QAC3E,CAAC;QACM,OAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,OAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAPD,uBAOC,CAAA;;;;;;;;;;;ICHD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAwCG;IACH,mBAA6B,SAAgC,EAAE,OAAa;QAC1E,MAAM,CAAC;YACL,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;YAC5B,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SAC3C,CAAC;IACJ,CAAC;IALD,mCAKC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YC9CD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;ICD3C;;;;;;;;;;;;;;;;;;;;;;;;;;OA0BG;IACH,eAAyB,GAAG,UAAoB;QAC9C,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QACjC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,SAAG,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;IACrD,CAAC;IAND,2BAMC,CAAA;IAMD,iBAAiB,KAAe,EAAE,MAAc;QAC9C,MAAM,MAAM,GAAG,CAAC,CAAS;YACvB,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChC,MAAM,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;oBAC7B,WAAW,GAAG,CAAC,CAAC;gBAClB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC;YACH,CAAC;YACD,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;YCrDD,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;ICCnC;;;;;;;;;;;;OAYG;IACH,iBAA2B,QAAmD;QAC5E,MAAM,CAAC,QAAQ,GAAG,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI,iBAAO,EAAK,EAAE,QAAQ,CAAC;YACtD,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,iBAAO,EAAK,CAAC,CAAC;IAC3D,CAAC;IAHD,+BAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YCjBD,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAQ,iBAAO,CAAC;;;;;;;;ICA5C;;;;;OAKG;IACH,yBAAmC,KAAQ;QACzC,MAAM,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,iCAAe,CAAI,KAAK,CAAC,CAAC,CAAC;IAC7D,CAAC;IAFD,+CAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YCRD,yBAAU,CAAC,SAAS,CAAC,eAAe,GAAG,iCAAe,CAAC;;;;;;;;ICCvD;;;;;;;OAOG;IACH,uBAAiC,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,UAAU,GAAW,MAAM,CAAC,iBAAiB,EAC7C,SAAqB;QACpD,MAAM,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,6BAAa,CAAI,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;IACvF,CAAC;IAJD,2CAIC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YCbD,yBAAU,CAAC,SAAS,CAAC,aAAa,GAAG,6BAAa,CAAC;;;;;;;;ICAnD;;;;OAIG;IACH;QACE,MAAM,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,2BAAY,EAAK,CAAC,CAAC;IACrD,CAAC;IAFD,uCAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;YCPD,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;;;;;;;;;YCA/C,yBAAU,CAAC,SAAS,CAAC,IAAI,GAAG,WAAI,CAAC;;;;;;;;;;;;;;;;;YCAjC,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICErC;;;;;;;;;;;;;OAaG;IACH,gBAA0B,KAAK,GAAW,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IARD,6BAQC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,KAAa,EACb,MAAqB;oBADrB,UAAK,GAAL,KAAK,CAAQ;oBACb,WAAM,GAAN,MAAM,CAAe;gBACzC,CAAC;gBACD,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,wBAAU;gBAC1C,YAAY,WAA4B,EACpB,KAAa,EACb,MAAqB;oBACvC,MAAM,WAAW,CAAC,CAAC;oBAFD,UAAK,GAAL,KAAK,CAAQ;oBACb,WAAM,GAAN,MAAM,CAAe;gBAEzC,CAAC;gBACD,QAAQ;oBACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;wBAC/B,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;4BAChB,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;wBAC1B,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;wBACzB,CAAC;wBACD,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBACpB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YChED,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICQrC;;;;;;;;;;;;;;;OAeG;IACH,oBAA8B,QAA6D;QACzF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,qCAEC,CAAA;;;;;;;;;;;;;;;;;;;YAMD;gBACE,YAAsB,QAA6D,EAC7D,MAAqB;oBADrB,aAAQ,GAAR,QAAQ,CAAqD;oBAC7D,WAAM,GAAN,MAAM,CAAe;gBAC3C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,mCAAyC,kCAAe;gBAMtD,YAAY,WAA0B,EAClB,QAA6D,EAC7D,MAAqB;oBACvC,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAAqD;oBAC7D,WAAM,GAAN,MAAM,CAAe;gBAEzC,CAAC;gBAED,QAAQ;oBACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBAEpB,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wBACvC,IAAI,OAAO,GAAQ,IAAI,CAAC,OAAO,CAAC;wBAChC,IAAI,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBAEnD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACb,aAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;4BAC9B,OAAO,GAAG,oBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;4BACjD,EAAE,CAAC,CAAC,OAAO,KAAK,0BAAW,CAAC,CAAC,CAAC;gCAC5B,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;4BAC1B,CAAC;4BACD,mBAAmB,GAAG,sCAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;wBACzD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;4BAC1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;wBAClC,CAAC;wBAED,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBAEpB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;wBACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBACvB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;wBAE/C,aAAa,CAAC,IAAI,EAAE,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAES,YAAY;oBACpB,MAAM,EAAE,aAAa,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;oBACpD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;wBAClB,aAAa,CAAC,WAAW,EAAE,CAAC;wBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC5B,CAAC;oBACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBACxB,mBAAmB,CAAC,WAAW,EAAE,CAAC;wBAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAClC,CAAC;oBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBAExC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;oBAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAEhC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;oBACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;oBAE/C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzHD,yBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICC7C;;;;;;;;;;;;;;;;OAgBG;IACH,eAAyB,KAAK,GAAW,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC;IAFD,2BAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,KAAa,EACb,MAAqB;oBADrB,UAAK,GAAL,KAAK,CAAQ;oBACb,WAAM,GAAN,MAAM,CAAe;gBACzC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,8BAAiC,wBAAU;gBACzC,YAAY,WAA4B,EACpB,KAAa,EACb,MAAqB;oBACvC,MAAM,WAAW,CAAC,CAAC;oBAFD,UAAK,GAAL,KAAK,CAAQ;oBACb,WAAM,GAAN,MAAM,CAAe;gBAEzC,CAAC;gBACD,KAAK,CAAC,GAAQ;oBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;wBAC/B,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;4BAChB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC1B,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;wBACzB,CAAC;wBACD,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBACpB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC7DD,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICQnC;;;;;;;;;;;;;;;OAeG;IACH,mBAA6B,QAAsD;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;;;;;;;;;;YAMD;gBACE,YAAsB,QAAsD,EACtD,MAAqB;oBADrB,aAAQ,GAAR,QAAQ,CAA8C;oBACtD,WAAM,GAAN,MAAM,CAAe;gBAC3C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAwC,kCAAe;gBAMrD,YAAY,WAA0B,EAClB,QAAsD,EACtD,MAAqB;oBACvC,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAA8C;oBACtD,WAAM,GAAN,MAAM,CAAe;gBAEzC,CAAC;gBAED,KAAK,CAAC,GAAQ;oBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;wBACzB,IAAI,OAAO,GAAQ,IAAI,CAAC,OAAO,CAAC;wBAChC,IAAI,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBAEnD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACb,MAAM,GAAG,IAAI,iBAAO,EAAE,CAAC;4BACvB,OAAO,GAAG,oBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC1C,EAAE,CAAC,CAAC,OAAO,KAAK,0BAAW,CAAC,CAAC,CAAC;gCAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;4BACpC,CAAC;4BACD,mBAAmB,GAAG,sCAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;wBACzD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;4BACnB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;wBAClC,CAAC;wBAED,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBAEpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBACvB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;wBAE/C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAES,YAAY;oBACpB,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;oBAC7C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,WAAW,EAAE,CAAC;wBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC;oBACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBACxB,mBAAmB,CAAC,WAAW,EAAE,CAAC;wBAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAClC,CAAC;oBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBAExC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;oBACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAEhC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;oBAE/C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzHD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICI3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiCG;IACH,gBAA0B,QAAyB;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjD,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,QAAyB;oBAAzB,aAAQ,GAAR,QAAQ,CAAiB;gBAC7C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC5E,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAqC,kCAAe;gBAIlD,YAAY,WAA4B,EAAE,QAAyB;oBACjE,MAAM,WAAW,CAAC,CAAC;oBAHb,aAAQ,GAAY,KAAK,CAAC;oBAIhC,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;gBAC9C,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,SAAS;oBACP,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1FD,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICGrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmCG;IACH,oBAA8B,MAAc,EAAE,SAAS,GAAc,aAAK;QACxE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;IAC9D,CAAC;IAFD,qCAEC,CAAA;IA6CD,8BAAiC,KAAU;QACzC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACnC,UAAU,CAAC,UAAU,EAAE,CAAC;QAClB,IAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;;;;;;;;;;YA3CD;gBACE,YAAoB,MAAc,EACd,SAAoB;oBADpB,WAAM,GAAN,MAAM,CAAQ;oBACd,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,mCAAsC,wBAAU;gBAI9C,YAAY,WAA0B,EAClB,MAAc,EACd,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAFD,WAAM,GAAN,MAAM,CAAQ;oBACd,cAAS,GAAT,SAAS,CAAW;oBAJxC,aAAQ,GAAY,KAAK,CAAC;oBAMxB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,QAAA,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC3F,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAED,UAAU;oBACR,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACxC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCpFD,yBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICA7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoCG;IACH,cAA2B,WAAmD,EAAE,IAAY;QAC1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;IAFD,yBAEC,CAAA;;;;;;;YAED;gBACE,YAAoB,WAAmD,EAAU,IAAY;oBAAzE,gBAAW,GAAX,WAAW,CAAwC;oBAAU,SAAI,GAAJ,IAAI,CAAQ;gBAC7F,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,6BAAmC,wBAAU;gBAc3C,YAAY,WAA0B,EAAU,WAAmD,EAAE,IAAY;oBAC/G,MAAM,WAAW,CAAC,CAAC;oBAD2B,gBAAW,GAAX,WAAW,CAAwC;oBAb3F,UAAK,GAAW,CAAC,CAAC;oBAClB,mBAAc,GAAY,KAAK,CAAC;oBActC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,cAAc,GAAG,OAAO,IAAI,KAAK,WAAW,CAAC;gBACpD,CAAC;gBAbD,IAAI,IAAI;oBACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpB,CAAC;gBAED,IAAI,IAAI,CAAC,KAAY;oBACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,CAAC;gBAQS,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;wBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAEO,QAAQ,CAAC,KAAQ;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,WAAW,CAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACxD,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;oBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC9FD,yBAAU,CAAC,SAAS,CAAC,IAAI,GAAG,WAAI,CAAC;;;;;;;;;ICMjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmDG;IACH,uBAAiC,SAAwB,EACxB,QAAkC;QACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;IAHD,2CAGC,CAAA;;;;;;;;;;;;;YAED;gBACE,YAAoB,SAAwB,EACxB,QAAiC;oBADjC,cAAS,GAAT,SAAS,CAAe;oBACxB,aAAQ,GAAR,QAAQ,CAAyB;gBACrD,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,uBAAuB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnG,CAAC;YACH,CAAC;YARD,2DAQC,CAAA;YAED;;;;eAIG;YACH,sCAAmD,wBAAU;gBAK3D,YAAY,WAAwB,EAChB,SAAwB,EACxB,QAAiC;oBACnD,MAAM,WAAW,CAAC,CAAC;oBAFD,cAAS,GAAT,SAAS,CAAe;oBACxB,aAAQ,GAAR,QAAQ,CAAyB;oBAN7C,OAAE,GAAQ,EAAE,CAAC;oBACb,OAAE,GAAQ,EAAE,CAAC;oBACb,iBAAY,GAAG,KAAK,CAAC;oBAM3B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,gCAAgC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzF,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAEM,SAAS;oBACd,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;oBAC1D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBAED,WAAW;oBACT,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAClC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACtC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;wBACnB,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;wBACnB,IAAI,QAAQ,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACb,QAAQ,GAAG,oBAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACpC,EAAE,CAAC,CAAC,QAAQ,KAAK,0BAAW,CAAC,CAAC,CAAC;gCAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;4BACxC,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;wBACrB,CAAC;wBACD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,KAAc;oBACjB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxB,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;gBAED,KAAK,CAAC,KAAQ;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;YACH,CAAC;YA/DD,+DA+DC,CAAA;YAED,+CAAqD,wBAAU;gBAC7D,YAAY,WAAwB,EAAU,MAAqC;oBACjF,MAAM,WAAW,CAAC,CAAC;oBADyB,WAAM,GAAN,MAAM,CAA+B;gBAEnF,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzB,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;gBAC1B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YChKD,yBAAU,CAAC,SAAS,CAAC,aAAa,GAAG,6BAAa,CAAC;;;;;;;;ICAnD;QACE,MAAM,CAAC,IAAI,kBAAO,EAAE,CAAC;IACvB,CAAC;IAED;;;;;;;;;;;OAWG;IACH;QACE,MAAM,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC9D,CAAC;IAFD,2BAEC,CAAA;;;;;;;;;;YAAA,CAAC;;;;;;;;;;;;;;;;;YClBF,yBAAU,CAAC,SAAS,CAAC,KAAK,GAAG,aAAK,CAAC;;;;;;;;;ICGnC;;;;;;;;;;;;;;;OAeG;IACH,gBAA0B,SAAuE;QAC/F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,SAAuE,EACvE,MAAsB;oBADtB,cAAS,GAAT,SAAS,CAA8D;oBACvE,WAAM,GAAN,MAAM,CAAgB;gBAC1C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1F,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,wBAAU;gBAK1C,YAAY,WAAwB,EAChB,SAAuE,EACvE,MAAsB;oBACxC,MAAM,WAAW,CAAC,CAAC;oBAFD,cAAS,GAAT,SAAS,CAA8D;oBACvE,WAAM,GAAN,MAAM,CAAgB;oBANlC,cAAS,GAAY,KAAK,CAAC;oBAE3B,UAAK,GAAW,CAAC,CAAC;gBAM1B,CAAC;gBAEO,gBAAgB,CAAC,KAAQ;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;oBACpE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAEO,OAAO,CAAC,KAAQ;oBACtB,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC9D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;wBAC/B,CAAC;oBACH,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAErC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC;wBAChE,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,KAAK,CAAC,IAAI,uBAAU,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC7FD,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICCrC;;;;;;;;;;OAUG;IACH,cAAwB,KAAa;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC;IAFD,yBAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,KAAa;oBAAb,UAAK,GAAL,KAAK,CAAQ;gBACjC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,6BAAgC,wBAAU;gBAGxC,YAAY,WAA0B,EAAU,KAAa;oBAC3D,MAAM,WAAW,CAAC,CAAC;oBAD2B,UAAK,GAAL,KAAK,CAAQ;oBAF7D,UAAK,GAAW,CAAC,CAAC;gBAIlB,CAAC;gBAES,KAAK,CAAC,CAAI;oBAClB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC9CD,yBAAU,CAAC,SAAS,CAAC,IAAI,GAAG,WAAI,CAAC;;;;;;;;;ICIjC;;;;;;;;;;;OAWG;IACH,mBAA6B,QAAyB;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpD,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,QAAyB;oBAAzB,aAAQ,GAAR,QAAQ,CAAiB;gBAC7C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/E,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAwC,kCAAe;gBAKrD,YAAY,WAA4B,EAC5B,QAAyB;oBACnC,MAAM,WAAW,CAAC,CAAC;oBALb,aAAQ,GAAY,KAAK,CAAC;oBAC1B,mBAAc,GAAY,KAAK,CAAC;oBAKtC,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;gBAC9C,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACxB,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC3ED,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICC3C;;;;;;;;;;;OAWG;IACH,mBAA6B,SAA+C;QAC1E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAFD,mCAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAA+C;oBAA/C,cAAS,GAAT,SAAS,CAAsC;gBACnE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAqC,wBAAU;gBAI7C,YAAY,WAA0B,EAClB,SAA+C;oBACjE,MAAM,WAAW,CAAC,CAAC;oBADD,cAAS,GAAT,SAAS,CAAsC;oBAJ3D,aAAQ,GAAY,IAAI,CAAC;oBACzB,UAAK,GAAW,CAAC,CAAC;gBAK1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAEO,gBAAgB,CAAC,KAAQ;oBAC/B,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;wBACnD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;oBAClC,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC/DD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;ICI3C;;;;;;;;;;;OAWG;IACH,mBAA6B,GAAG,KAA2B;QACzD,IAAI,SAAS,GAAc,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,yBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,GAAG,EAAE,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,SAAS,GAAG,IAAI,CAAC;QACnB,CAAC;QAED,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QACzB,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,qBAAY,CAAC,IAAI,mCAAgB,CAAO,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAiB,IAAI,CAAC,CAAC;QAC5F,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,qBAAY,CAAC,IAAI,iCAAe,CAAS,KAAK,EAAE,SAAS,CAAC,EAAiB,IAAI,CAAC,CAAC;QAC1F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,qBAAY,CAAC,IAAI,iCAAe,CAAI,SAAS,CAAC,EAAiB,IAAI,CAAC,CAAC;QAC9E,CAAC;IACH,CAAC;IAhBD,mCAgBC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YChCD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;ACJ3C;;EAEE;;;;;6BA2OW,SAAS;;;;;;;YAvOtB;gBAeE,YAAoB,IAAS;oBAAT,SAAI,GAAJ,IAAI,CAAK;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,CAAC,CAAC,CAAC;wBACjE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;wBACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;wBACxB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,oDAAoD;wBACpD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;4BACjC,yBAAyB;4BACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iCAAiC,EAAE,CAAC;wBAC/D,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;4BACpC,+BAA+B;4BAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;wBAC3D,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;4BACvC,mCAAmC;4BACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gCAAgC,EAAE,CAAC;wBAC9D,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;4BACzC,aAAa;4BACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kCAAkC,EAAE,CAAC;wBAChE,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,qBAAqB;4BACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;wBAC1D,CAAC;wBAED,IAAI,EAAE,GAAG,wBAAwB,MAAW;4BAC1C,OAAa,cAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBAC9D,CAAC,CAAC;wBAEI,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAE1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBA7CO,QAAQ,CAAC,CAAM;oBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrD,CAAC;gBA6CD,qBAAqB;oBACnB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,kBAAkB,CAAC;gBACjE,CAAC;gBAED,oBAAoB;oBAClB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC3C,CAAC;gBAED,sBAAsB;oBACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACpC,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,oBAAoB,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvF,CAAC;gBAED,iBAAiB;oBACf,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,0GAA0G;oBAC1G,oGAAoG;oBACpG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;wBAC5C,IAAI,yBAAyB,GAAG,IAAI,CAAC;wBACrC,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;wBAClC,IAAI,CAAC,SAAS,GAAG;4BACf,yBAAyB,GAAG,KAAK,CAAC;wBACpC,CAAC,CAAC;wBACF,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;wBAC9B,MAAM,CAAC,yBAAyB,CAAC;oBACnC,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBAED,gEAAgE;gBAChE,iDAAiD;gBACjD,gBAAgB,CAAC,OAAY,EAAE,GAAG,IAAW;oBAC3C,IAAI,EAAE,GAAG;wBACP,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAQ,MAAM,CAAC;wBACtC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;4BAClC,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBACjC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,CAAC,IAAI,QAAQ,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC;wBACjC,CAAC;oBACH,CAAC,CAAC;oBAEI,EAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBACtB,EAAG,CAAC,IAAI,GAAG,IAAI,CAAC;oBAEtB,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,4BAA4B,CAAC,IAAW;oBACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACnF,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBAC3B,CAAC;gBAED,iCAAiC;oBAC/B,IAAI,EAAE,GAAG;wBACP,MAAM,EAAE,QAAQ,EAAE,GAAS,YAAa,CAAC;wBACzC,IAAI,MAAM,GAAG,QAAQ,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;wBAC9D,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;wBACzF,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;oBAEI,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAE1B,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,6BAA6B;oBAC3B,qEAAqE;oBACrE,4DAA4D;oBAC5D,iGAAiG;oBACjG,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEvB,IAAI,aAAa,GAAG,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;oBAC/D,IAAI,eAAe,GAAG,8BAA8B,KAAU;wBAC5D,MAAM,QAAQ,GAAS,oBAAqB,CAAC,QAAQ,CAAC;wBACtD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI;4BACvB,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ;4BAC9B,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC1C,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjE,CAAC;oBACH,CAAC,CAAC;oBACI,eAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAEvC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;oBAEzD,IAAI,EAAE,GAAG;wBACP,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAS,YAAa,CAAC;wBACxD,IAAI,MAAM,GAAG,QAAQ,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;wBAC9D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;wBACvD,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;oBAEI,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACpB,EAAG,CAAC,aAAa,GAAG,aAAa,CAAC;oBAExC,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,YAAY,CAAC,MAAW;oBACtB,wGAAwG;oBACxG,6EAA6E;oBAC7E,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;wBAC/B,+FAA+F;wBAC/F,8BAA8B;wBAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5E,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACT,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;4BAClC,IAAI,CAAC;gCACH,IAAI,EAAE,CAAC;4BACT,CAAC;oCAAS,CAAC;gCACT,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gCAC5B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;4BACrC,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,gCAAgC;oBAC9B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC7C,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,KAAU;wBACnC,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;wBACxB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBAC5B,CAAC,CAAC;oBAEF,IAAI,EAAE,GAAG;wBACP,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAS,YAAa,CAAC;wBAClD,IAAI,MAAM,GAAG,QAAQ,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;wBAC9D,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBAClC,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;oBAEI,EAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBACtB,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAE1B,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,kCAAkC;oBAChC,IAAI,EAAE,GAAG;wBACP,MAAM,QAAQ,GAAS,YAAa,CAAC,QAAQ,CAAC;wBAC9C,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAC1B,MAAM,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC;wBAEjC,IAAI,MAAM,GAAG,QAAQ,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;wBAC9D,yGAAyG;wBACzG,kGAAkG;wBAClG,IAAI,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACzC,MAAM,CAAC,kBAAkB,GAAG;4BAC1B,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;4BAC9B,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;4BACzB,MAAM,GAAG,IAAI,CAAC;wBAChB,CAAC,CAAC;wBACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBACzB,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;oBAEI,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAE1B,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,4BAA4B;oBAC1B,IAAI,EAAE,GAAG;wBACP,MAAM,QAAQ,GAAS,YAAa,CAAC,QAAQ,CAAC;wBAC9C,IAAI,MAAM,GAAG,QAAQ,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;wBAC9D,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;wBACtF,MAAM,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC;oBAEI,EAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAE1B,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;YACH,CAAC;YAtOD,uDAsOC,CAAA;YACY,yBAAA,SAAS,GAAG,IAAI,mBAAmB,CAAC,YAAI,CAAC,CAAA,CAAC;;;;;;;;;;;;;;;YC1OvD,4BAAmC,+BAAc;gBACxC,KAAK;oBAEV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAE3B,MAAM,EAAC,OAAO,EAAC,GAAG,IAAI,CAAC;oBACvB,IAAI,KAAU,CAAC;oBACf,IAAI,KAAK,GAAW,CAAC,CAAC,CAAC;oBACvB,IAAI,KAAK,GAAW,OAAO,CAAC,MAAM,CAAC;oBACnC,IAAI,MAAM,GAAqB,OAAO,CAAC,KAAK,EAAE,CAAC;oBAE/C,GAAG,CAAC;wBACF,EAAE,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACvD,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC,QAAQ,EAAE,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE;oBAExD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,OAAO,EAAE,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;4BACrD,MAAM,CAAC,WAAW,EAAE,CAAC;wBACvB,CAAC;wBACD,MAAM,KAAK,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YA3BD,2CA2BC,CAAA;;;;;;;;;;;;;;;;;;YC1BD;;;;eAIG;YACH,yBAAmC,yBAAW;gBAE5C,YAAsB,SAAwB,EACxB,IAAyB;oBAC7C,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC;oBAFH,cAAS,GAAT,SAAS,CAAe;oBACxB,SAAI,GAAJ,IAAI,CAAqB;gBAE/C,CAAC;gBAES,cAAc,CAAC,SAAwB,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBAC5E,0DAA0D;oBAC1D,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACpD,CAAC;oBACD,qDAAqD;oBACrD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC7B,oEAAoE;oBACpE,0EAA0E;oBAC1E,sCAAsC;oBACtC,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC,YAAY,CACzE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CACtC,CAAC,CAAC;gBACL,CAAC;gBACS,cAAc,CAAC,SAAwB,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBAC5E,qEAAqE;oBACrE,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACpD,CAAC;oBACD,sEAAsE;oBACtE,2EAA2E;oBAC3E,WAAW;oBACX,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,qBAAS,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;wBAC7B,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;oBAClC,CAAC;oBACD,sFAAsF;oBACtF,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC;YACH,CAAC;YApCD,qCAoCC,CAAA;;;;;;;;QC1CY,IAAI;;;;;;;;;;YAAJ,oBAAA,IAAI,GAAG,IAAI,6BAAa,CAAC,uBAAU,CAAC,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;YCSlD;;;;eAIG;YACH,oCAA8C,yBAAU;gBAUtD,YAAmB,MAAqB,EACpB,SAAS,GAAW,CAAC,EACrB,SAAS,GAAc,WAAI;oBAC7C,OAAO,CAAC;oBAHS,WAAM,GAAN,MAAM,CAAe;oBACpB,cAAS,GAAT,SAAS,CAAY;oBACrB,cAAS,GAAT,SAAS,CAAkB;oBAE7C,EAAE,CAAC,CAAC,CAAC,qBAAS,CAAC,SAAS,CAAC,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACrB,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,SAAS,GAAG,WAAI,CAAC;oBACxB,CAAC;gBACH,CAAC;gBAnBD,OAAO,MAAM,CAAI,MAAqB,EAAE,KAAK,GAAW,CAAC,EAAE,SAAS,GAAc,WAAI;oBACpF,MAAM,CAAC,IAAI,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;gBAC7D,CAAC;gBAED,OAAO,QAAQ,CAAI,GAAmB;oBACpC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;oBACnC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBAcS,UAAU,CAAC,UAAyB;oBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEjC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE;wBAC/D,QAAA,MAAM,EAAE,YAAA,UAAU;qBACnB,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YA/BD,2DA+BC,CAAA;;;;;;;;IC5CD;;;;;;;;;;OAUG;IACH,qBAA+B,SAAoB,EAAE,KAAK,GAAW,CAAC;QACpE,MAAM,CAAC,IAAI,6CAAqB,CAAI,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAFD,uCAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCbD,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICG/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyCG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;IACzC,CAAC;IAFD,+BAEC,CAAA;;;;;;;;;;YAMD;gBACE,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC7D,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAqC,kCAAe;gBAKlD,YAAY,WAA0B;oBACpC,MAAM,WAAW,CAAC,CAAC;oBALb,WAAM,GAAW,CAAC,CAAC;oBACnB,iBAAY,GAAY,KAAK,CAAC;gBAKtC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,sCAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBACpE,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAEO,gBAAgB;oBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;oBACpD,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACjD,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACtB,iBAAiB,CAAC,WAAW,EAAE,CAAC;wBAChC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;gBAED,WAAW,CAAC,GAAQ;oBAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC9B,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC/GD,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,gBAAO,CAAC;YACtC,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,gBAAO,CAAC;;;;;;;;;ICGvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8CG;IACH,mBAAmC,OAAwD,EACxD,cAA4F;QAC7H,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;IACnE,CAAC;IAHD,mCAGC,CAAA;;;;;;;;;;YAQD;gBACE,YAAoB,OAAwD,EACxD,cAA4F;oBAD5F,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;gBAChH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACnG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAA2C,kCAAe;gBAIxD,YAAY,WAA0B,EAClB,OAAwD,EACxD,cAA4F;oBAC9G,MAAM,WAAW,CAAC,CAAC;oBAFD,YAAO,GAAP,OAAO,CAAiD;oBACxD,mBAAc,GAAd,cAAc,CAA8E;oBALxG,UAAK,GAAW,CAAC,CAAC;gBAO1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,MAA0B,CAAC;oBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAE;oBAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACvC,CAAC;gBAEO,SAAS,CAAC,MAA0B,EAAE,KAAQ,EAAE,KAAa;oBACnE,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACjD,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACtB,iBAAiB,CAAC,WAAW,EAAE,CAAC;oBAClC,CAAC;oBACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,sCAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBACnF,CAAC;gBAES,SAAS;oBACjB,MAAM,EAAC,iBAAiB,EAAC,GAAG,IAAI,CAAC;oBACjC,EAAE,CAAC,CAAC,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnD,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAChC,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBACtE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;gBAEO,cAAc,CAAC,UAAa,EAAE,UAAa,EAAE,UAAkB,EAAE,UAAkB;oBACzF,IAAI,MAAS,CAAC;oBACd,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC/E,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YClJD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICI3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2CG;IACH,qBAAqC,eAA8B,EAC9B,cAG0C;QAC7E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,CAAC;IAC7E,CAAC;IAND,uCAMC,CAAA;;;;;;;;;;YAQD;gBACE,YAAoB,UAAyB,EACzB,cAA4F;oBAD5F,eAAU,GAAV,UAAU,CAAe;oBACzB,mBAAc,GAAd,cAAc,CAA8E;gBAChH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAA6C,kCAAe;gBAI1D,YAAY,WAA0B,EAClB,KAAoB,EACpB,cAA4F;oBAC9G,MAAM,WAAW,CAAC,CAAC;oBAFD,UAAK,GAAL,KAAK,CAAe;oBACpB,mBAAc,GAAd,cAAc,CAA8E;oBALxG,UAAK,GAAW,CAAC,CAAC;gBAO1B,CAAC;gBAES,KAAK,CAAC,KAAU;oBACxB,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACjD,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACtB,iBAAiB,CAAC,WAAW,EAAE,CAAC;oBAClC,CAAC;oBACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,sCAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC9F,CAAC;gBAES,SAAS;oBACjB,MAAM,EAAC,iBAAiB,EAAC,GAAG,IAAI,CAAC;oBACjC,EAAE,CAAC,CAAC,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnD,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAChC,CAAC;gBAED,cAAc,CAAC,QAAsB;oBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBACzE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAEO,iBAAiB,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB;oBAC9D,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;oBAC7C,IAAI,MAAS,CAAC;oBACd,IAAI,CAAC;wBACH,MAAM,GAAG,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC1E,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBAED,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1ID,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICG/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCG;IACH,cAAwB,KAAa;QACnC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAND,yBAMC,CAAA;;;;;;;;;;;;;YAMD;gBACE,YAAoB,KAAa;oBAAb,UAAK,GAAL,KAAK,CAAQ;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnB,MAAM,IAAI,iDAAuB,CAAC;oBACpC,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvE,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,6BAAgC,wBAAU;gBAGxC,YAAY,WAA0B,EAAU,KAAa;oBAC3D,MAAM,WAAW,CAAC,CAAC;oBAD2B,UAAK,GAAL,KAAK,CAAQ;oBAFrD,UAAK,GAAW,CAAC,CAAC;gBAI1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;4BACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;4BAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YClFD,yBAAU,CAAC,SAAS,CAAC,IAAI,GAAG,WAAI,CAAC;;;;;;;;;ICGjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmCG;IACH,kBAA4B,KAAa;QACvC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,iCAAe,EAAK,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAND,iCAMC,CAAA;;;;;;;;;;;;;YAMD;gBACE,YAAoB,KAAa;oBAAb,UAAK,GAAL,KAAK,CAAQ;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnB,MAAM,IAAI,iDAAuB,CAAC;oBACpC,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3E,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,iCAAoC,wBAAU;gBAI5C,YAAY,WAA0B,EAAU,KAAa;oBAC3D,MAAM,WAAW,CAAC,CAAC;oBAD2B,UAAK,GAAL,KAAK,CAAQ;oBAHrD,SAAI,GAAa,IAAI,KAAK,EAAE,CAAC;oBAC7B,UAAK,GAAW,CAAC,CAAC;gBAI1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;oBACtB,CAAC;gBACH,CAAC;gBAES,SAAS;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAEvB,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACd,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wBACjE,MAAM,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC;wBAExB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC/B,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;4BAC9B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC9B,CAAC;oBACH,CAAC;oBAED,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1GD,yBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;;;ICMzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCG;IACH,mBAA6B,QAAyB;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpD,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,QAAyB;oBAAzB,aAAQ,GAAR,QAAQ,CAAiB;gBAC7C,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/E,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAwC,kCAAe;gBAErD,YAAY,WAA4B,EACpB,QAAyB;oBAC3C,MAAM,WAAW,CAAC,CAAC;oBADD,aAAQ,GAAR,QAAQ,CAAiB;oBAE3C,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;gBAC9C,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC;gBAED,cAAc;oBACZ,OAAO;gBACT,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC7ED,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmCG;IACH,mBAA6B,SAA+C;QAC1E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAFD,mCAEC,CAAA;;;;;;;YAMD;gBACE,YAAoB,SAA+C;oBAA/C,cAAS,GAAT,SAAS,CAAsC;gBACnE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,kCAAqC,wBAAU;gBAG7C,YAAY,WAA0B,EAClB,SAA+C;oBACjE,MAAM,WAAW,CAAC,CAAC;oBADD,cAAS,GAAT,SAAS,CAAsC;oBAH3D,UAAK,GAAW,CAAC,CAAC;gBAK1B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,MAAe,CAAC;oBACpB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC/C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACvB,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC;gBAEO,cAAc,CAAC,KAAQ,EAAE,eAAwB;oBACvD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;wBAC7B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCvFD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICK3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAqCG;IACH,kBAA4B,gBAA6D;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,iCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAoB,gBAA6D;oBAA7D,qBAAgB,GAAhB,gBAAgB,CAA6C;gBACjF,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,iCAAuC,kCAAe;gBAGpD,YAAsB,WAA0B,EAC5B,gBAA6D;oBAC/E,MAAM,WAAW,CAAC,CAAC;oBAFC,gBAAW,GAAX,WAAW,CAAe;oBAC5B,qBAAgB,GAAhB,gBAAgB,CAA6C;gBAEjF,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC;gBAEO,mBAAmB,CAAC,KAAQ;oBAClC,IAAI,QAAQ,GAAkC,IAAI,CAAC;oBACnD,IAAI,CAAC;wBACH,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC1C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBACxC,CAAC;gBAEO,eAAe,CAAC,KAAQ,EAAE,QAAuC;oBACvE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,sCAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAES,YAAY;oBACpB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,SAAS,CAAC,WAAW,EAAE,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC;gBAED,cAAc;oBACZ,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCjHD,yBAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,mBAAQ,CAAC;;;;;;;;;ICGzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsCG;IACH,sBAAgC,QAAgB,EAAE,SAAS,GAAc,aAAK;QAC5E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IAClE,CAAC;IAFD,yCAEC,CAAA;IAmDD,sBAAyB,GAAmB;QAC1C,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;QAC3B,UAAU,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;;;;;;;;;;YAhDD;gBACE,YAAoB,QAAgB,EAChB,SAAoB;oBADpB,aAAQ,GAAR,QAAQ,CAAQ;oBAChB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAClG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,qCAAwC,wBAAU;gBAGhD,YAAY,WAA0B,EAClB,QAAgB,EAChB,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAAQ;oBAChB,cAAS,GAAT,SAAS,CAAW;gBAExC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;gBAED,aAAa;oBACX,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACd,SAAS,CAAC,WAAW,EAAE,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzFD,yBAAU,CAAC,SAAS,CAAC,YAAY,GAAG,2BAAY,CAAC;;;;;;;;;ICEjD;;;;;OAKG;IACH,sBAAgC,SAAS,GAAc,aAAK;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,CAAC;IAFD,yCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAmB,KAAQ,EAAS,QAAgB;oBAAjC,UAAK,GAAL,KAAK,CAAG;oBAAS,aAAQ,GAAR,QAAQ,CAAQ;gBAEpD,CAAC;YACH,CAAC;YAJD,yCAIC,CAAA;YAAA,CAAC;YAEF;gBACE,YAAoB,SAAoB;oBAApB,cAAS,GAAT,SAAS,CAAW;gBAExC,CAAC;gBAED,IAAI,CAAC,QAAqC,EAAE,MAAW;oBACrD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,qCAAwC,wBAAU;gBAGhD,YAAY,WAAwC,EAAU,SAAoB;oBAChF,MAAM,WAAW,CAAC,CAAC;oBADyC,cAAS,GAAT,SAAS,CAAW;oBAF1E,aAAQ,GAAW,CAAC,CAAC;oBAK3B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;gBAClC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;oBAC/B,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC/B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBAEpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCrDD,yBAAU,CAAC,SAAS,CAAC,YAAY,GAAG,2BAAY,CAAC;;;;;;;;;ICIjD;;;;;;;OAOG;IACH,iBAA2B,GAAkB,EAClB,WAAW,GAAQ,IAAI,EACvB,SAAS,GAAc,cAAK;QACrD,IAAI,eAAe,GAAG,eAAM,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,eAAe,GAAG,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;IAC1F,CAAC;IAND,+BAMC,CAAA;;;;;;;;;;;;;YAMD;gBACE,YAAoB,OAAe,EACf,eAAwB,EACxB,WAAgB,EAChB,SAAoB;oBAHpB,YAAO,GAAP,OAAO,CAAQ;oBACf,oBAAe,GAAf,eAAe,CAAS;oBACxB,gBAAW,GAAX,WAAW,CAAK;oBAChB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAC5C,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CACjF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAmC,wBAAU;gBAW3C,YAAY,WAA0B,EAClB,eAAwB,EACxB,OAAe,EACf,WAAgB,EAChB,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAJD,oBAAe,GAAf,eAAe,CAAS;oBACxB,YAAO,GAAP,OAAO,CAAQ;oBACf,gBAAW,GAAX,WAAW,CAAK;oBAChB,cAAS,GAAT,SAAS,CAAW;oBAdhC,UAAK,GAAW,CAAC,CAAC;oBAClB,mBAAc,GAAW,CAAC,CAAC;oBAI3B,kBAAa,GAAY,KAAK,CAAC;oBAWrC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC;gBAfD,IAAI,aAAa;oBACf,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC7B,CAAC;gBAED,IAAI,YAAY;oBACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC5B,CAAC;gBAWD,OAAe,eAAe,CAAC,KAAU;oBACvC,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;oBAChC,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;oBACjC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,aAAa,KAAK,YAAY,CAAC,CAAC,CAAC;wBAClE,MAAM,CAAC,aAAa,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAEO,eAAe;oBACrB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;oBACpH,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;gBACrC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;gBAED,aAAa;oBACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCnGD,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAO,CAAC;;;;;;;;;ICMvC;;;;;;;OAOG;IACH,qBAAkC,GAAkB,EAClB,cAAkC,EAClC,SAAS,GAAc,cAAK;QAC5D,IAAI,eAAe,GAAG,eAAM,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,eAAe,GAAG,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;IACjG,CAAC;IAND,uCAMC,CAAA;;;;;;;;;;;;;;;;YAOD;gBACE,YAAoB,OAAe,EACf,eAAwB,EACxB,cAAoC,EACpC,SAAoB;oBAHpB,YAAO,GAAP,OAAO,CAAQ;oBACf,oBAAe,GAAf,eAAe,CAAS;oBACxB,mBAAc,GAAd,cAAc,CAAsB;oBACpC,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAChD,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CACpF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAA0C,kCAAe;gBAYvD,YAAmB,WAA0B,EACzB,eAAwB,EACxB,OAAe,EACf,cAAoC,EACpC,SAAoB;oBACtC,OAAO,CAAC;oBALS,gBAAW,GAAX,WAAW,CAAe;oBACzB,oBAAe,GAAf,eAAe,CAAS;oBACxB,YAAO,GAAP,OAAO,CAAQ;oBACf,mBAAc,GAAd,cAAc,CAAsB;oBACpC,cAAS,GAAT,SAAS,CAAW;oBAfhC,wBAAmB,GAAiB,SAAS,CAAC;oBAC9C,UAAK,GAAW,CAAC,CAAC;oBAClB,mBAAc,GAAW,CAAC,CAAC;oBAI3B,kBAAa,GAAY,KAAK,CAAC;oBAWrC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC;gBAhBD,IAAI,aAAa;oBACf,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC7B,CAAC;gBAED,IAAI,YAAY;oBACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC5B,CAAC;gBAYD,OAAe,eAAe,CAAC,KAAU;oBACvC,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;oBAChC,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;oBACjC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,aAAa,KAAK,YAAY,CAAC,CAAC,CAAC;wBAClE,MAAM,CAAC,aAAa,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAEO,eAAe;oBACrB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC9B,MAAM,YAAY,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;oBAC/D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;oBAC3F,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;gBACrC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;gBAED,aAAa;oBACX,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjB,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;wBAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,sCAAiB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;oBAC3F,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC5GD,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICE/C;;;;;OAKG;IACH,mBAA6B,SAAS,GAAc,cAAK;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAFD,mCAEC,CAAA;;;;;;;;;;YAMD;gBACE,YAAmB,KAAQ,EAAS,SAAiB;oBAAlC,UAAK,GAAL,KAAK,CAAG;oBAAS,cAAS,GAAT,SAAS,CAAQ;gBACrD,CAAC;YACH,CAAC;YAHD,mCAGC,CAAA;YAAA,CAAC;YAEF;gBACE,YAAoB,SAAoB;oBAApB,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,QAAkC,EAAE,MAAW;oBAClD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9E,CAAC;YACH,CAAC;YAED,kCAAqC,wBAAU;gBAC7C,YAAY,WAAqC,EAAU,SAAoB;oBAC7E,MAAM,WAAW,CAAC,CAAC;oBADsC,cAAS,GAAT,SAAS,CAAW;gBAE/E,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;oBAEjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCzCD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICC3C;;;;OAIG;IACH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;IAC1C,CAAC;IAFD,+BAEC,CAAA;;;;;;;YAMD;gBACE,IAAI,CAAC,UAA2B,EAAE,MAAW;oBAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9D,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,gCAAmC,wBAAU;gBAI3C,YAAY,WAA4B;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAHb,UAAK,GAAQ,EAAE,CAAC;gBAIxB,CAAC;gBAES,KAAK,CAAC,CAAI;oBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCxCD,yBAAU,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAO,CAAC;;;;;;;;ICFvC;;;;;OAKG;IACH,mBAA6B,WAA4B;QACvD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,YAAI,CAAC,EAAE,IAAI,YAAI,CAAC,EAAE,CAAC,MAAM,IAAI,YAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxD,WAAW,GAAG,YAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxB,WAAW,GAAG,YAAI,CAAC,OAAO,CAAC;YAC7B,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,CAAC,IAAI,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM;YACrC,IAAI,KAAU,CAAC;YACf,IAAI,CAAC,SAAS,CAAC,CAAC,CAAI,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,GAAQ,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACL,CAAC;IAjBD,mCAiBC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCrBD,yBAAU,CAAC,SAAS,CAAC,SAAS,GAAG,qBAAS,CAAC;;;;;;;;;ICK3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmCG;IACH,gBAA0B,gBAAiC;QACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAI,gBAAgB,CAAC,CAAC,CAAC;IAC5D,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;;;;YAMD;gBAEE,YAAoB,gBAAiC;oBAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;gBACrD,CAAC;gBAED,IAAI,CAAC,UAAqC,EAAE,MAAW;oBACrD,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC,CAAC;oBAC1D,MAAM,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;oBAC/D,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC/B,gBAAgB,CAAC,GAAG,CAAC,sCAAiB,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACnF,CAAC;oBACD,MAAM,CAAC,kBAAkB,CAAC;gBAC5B,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,kCAAe;gBAI/C,YAAY,WAAsC;oBAChD,MAAM,WAAW,CAAC,CAAC;oBAHb,WAAM,GAAe,IAAI,kBAAO,EAAK,CAAC;oBAI5C,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAAiC;oBAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAAiC;oBACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,cAAc,CAAC,QAAiC;oBAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACrB,CAAC;gBAEO,UAAU;oBAChB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC/B,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACf,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;oBACD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAO,EAAK,CAAC;oBACjD,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCvHD,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;ICCrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA+CG;IACH,qBAA+B,UAAkB,EAClB,gBAAgB,GAAW,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAI,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAHD,uCAGC,CAAA;;;;;;;;;;YAMD;gBAEE,YAAoB,UAAkB,EAClB,gBAAwB;oBADxB,eAAU,GAAV,UAAU,CAAQ;oBAClB,qBAAgB,GAAhB,gBAAgB,CAAQ;gBAC5C,CAAC;gBAED,IAAI,CAAC,UAAqC,EAAE,MAAW;oBACrD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1G,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,oCAAuC,wBAAU;gBAI/C,YAAsB,WAAsC,EACxC,UAAkB,EAClB,gBAAwB;oBAC1C,MAAM,WAAW,CAAC,CAAC;oBAHC,gBAAW,GAAX,WAAW,CAA2B;oBACxC,eAAU,GAAV,UAAU,CAAQ;oBAClB,qBAAgB,GAAhB,gBAAgB,CAAQ;oBALpC,YAAO,GAAiB,CAAE,IAAI,kBAAO,EAAK,CAAE,CAAC;oBAC7C,UAAK,GAAW,CAAC,CAAC;oBAMxB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC/F,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oBACnC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAE3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7C,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzD,OAAO,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;oBAC7B,CAAC;oBACD,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC1D,MAAM,MAAM,GAAG,IAAI,kBAAO,EAAK,CAAC;wBAChC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;4BAC1C,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC7B,CAAC;oBACH,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAES,SAAS;oBACjB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;4BAC1C,OAAO,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;wBAC7B,CAAC;oBACH,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAES,YAAY;oBACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YClID,yBAAU,CAAC,SAAS,CAAC,WAAW,GAAG,yBAAW,CAAC;;;;;;;;;ICK/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgDG;IACH,oBAA8B,cAAsB,EACtB,sBAAsB,GAAW,IAAI,EACrC,SAAS,GAAc,cAAK;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAI,cAAc,EAAE,sBAAsB,EAAE,SAAS,CAAC,CAAC,CAAC;IACjG,CAAC;IAJD,qCAIC,CAAA;IAwGD,oCAAuC,KAA2B;QAChE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACrD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QACD,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;QACjC,IAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IAC9C,CAAC;IAaD,gCAAmC,KAAuB;QACxD,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,sBAAsB,EAAE,GAAG,KAAK,CAAC;QAC9E,IAAI,MAAM,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;QACrC,IAAI,MAAM,GAA6B,IAAI,CAAC;QAC5C,IAAI,OAAO,GAAe,EAAE,QAAA,MAAM,EAAE,YAAY,EAAO,IAAI,EAAE,CAAC;QAC9D,MAAM,aAAa,GAAmB,EAAE,YAAA,UAAU,EAAE,QAAA,MAAM,EAAE,SAAA,OAAO,EAAE,CAAC;QACtE,OAAO,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;QAC9F,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;IACjD,CAAC;IAED,6BAAgC,GAAmB;QACjD,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;QAC5C,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACtD,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC9C,CAAC;QACD,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;;;;;;;;;;;;;YAvID;gBAEE,YAAoB,cAAsB,EACtB,sBAA8B,EAC9B,SAAoB;oBAFpB,mBAAc,GAAd,cAAc,CAAQ;oBACtB,2BAAsB,GAAtB,sBAAsB,CAAQ;oBAC9B,cAAS,GAAT,SAAS,CAAW;gBACxC,CAAC;gBAED,IAAI,CAAC,UAAqC,EAAE,MAAW;oBACrD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,oBAAoB,CAC/C,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAC7E,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YASD;;;;eAIG;YACH,mCAAsC,wBAAU;gBAG9C,YAAsB,WAAsC,EACxC,cAAsB,EACtB,sBAA8B,EAC9B,SAAoB;oBACtC,MAAM,WAAW,CAAC,CAAC;oBAJC,gBAAW,GAAX,WAAW,CAA2B;oBACxC,mBAAc,GAAd,cAAc,CAAQ;oBACtB,2BAAsB,GAAtB,sBAAsB,CAAQ;oBAC9B,cAAS,GAAT,SAAS,CAAW;oBALhC,YAAO,GAAiB,EAAE,CAAC;oBAOjC,EAAE,CAAC,CAAC,sBAAsB,KAAK,IAAI,IAAI,sBAAsB,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnE,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;wBAC/B,MAAM,UAAU,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,QAAA,MAAM,EAAE,OAAO,EAAO,IAAI,EAAE,CAAC;wBACpE,MAAM,aAAa,GAAqB,EAAE,gBAAA,cAAc,EAAE,wBAAA,sBAAsB,EAAE,UAAU,EAAE,IAAI,EAAE,WAAA,SAAS,EAAE,CAAC;wBAChH,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;wBAC9E,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,aAAa,CAAC,CAAC,CAAC;oBAC9F,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;wBAC/B,MAAM,iBAAiB,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,QAAA,MAAM,EAAE,gBAAA,cAAc,EAAE,CAAC;wBACvE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,EAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC;oBAC9F,CAAC;gBACH,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;4BACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,CAAC;oBACH,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC1B,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC7B,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAES,SAAS;oBACjB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC1B,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;wBAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;4BACnB,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACpB,CAAC;oBACH,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC9B,CAAC;gBAED,UAAU;oBACR,MAAM,MAAM,GAAG,IAAI,kBAAO,EAAK,CAAC;oBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;gBAED,WAAW,CAAC,MAAkB;oBAC5B,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAClB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1JD,yBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICS7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAwCG;IACH,sBAAmC,QAAuB,EACvB,eAAkD;QACnF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAO,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC;IAC9E,CAAC;IAHD,yCAGC,CAAA;;;;;;;;;;;;;;;;;;;;;;YAMD;gBAEE,YAAoB,QAAuB,EACvB,eAAkD;oBADlD,aAAQ,GAAR,QAAQ,CAAe;oBACvB,oBAAe,GAAf,eAAe,CAAmC;gBACtE,CAAC;gBAED,IAAI,CAAC,UAAqC,EAAE,MAAW;oBACrD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,sBAAsB,CACjD,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAChD,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAOD;;;;eAIG;YACH,qCAA2C,kCAAe;gBAIxD,YAAY,WAAsC,EAC9B,QAAuB,EACvB,eAAkD;oBACpE,MAAM,WAAW,CAAC,CAAC;oBAFD,aAAQ,GAAR,QAAQ,CAAe;oBACvB,oBAAe,GAAf,eAAe,CAAmC;oBAL9D,aAAQ,GAAuB,EAAE,CAAC;oBAOxC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,sCAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;gBAChF,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACjC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAES,MAAM,CAAC,GAAQ;oBAEvB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAErB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;wBAEf,OAAO,EAAE,KAAK,GAAG,GAAG,EAAE,CAAC;4BACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;4BAChC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAC1B,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;wBACrC,CAAC;oBACH,CAAC;oBAED,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBAES,SAAS;oBACjB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;wBACf,OAAO,EAAE,KAAK,GAAG,GAAG,EAAE,CAAC;4BACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;4BAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;4BAC1B,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;wBACrC,CAAC;oBACH,CAAC;oBACD,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,CAAC;gBAES,YAAY;oBACpB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;wBACf,OAAO,EAAE,KAAK,GAAG,GAAG,EAAE,CAAC;4BACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;4BAChC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;4BAC7B,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;wBACrC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAe,EAAE,UAAe,EAChC,UAAkB,EAAE,UAAkB,EACtC,QAAiC;oBAE1C,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAEjC,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC;wBACjC,MAAM,eAAe,GAAG,oBAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC;wBAE9D,EAAE,CAAC,CAAC,eAAe,KAAK,0BAAW,CAAC,CAAC,CAAC;4BACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,0BAAW,CAAC,CAAC,CAAC,CAAC;wBACnC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,MAAM,GAAG,IAAI,kBAAO,EAAK,CAAC;4BAChC,MAAM,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;4BACxC,MAAM,OAAO,GAAG,EAAE,QAAA,MAAM,EAAE,cAAA,YAAY,EAAE,CAAC;4BACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAC5B,MAAM,iBAAiB,GAAG,sCAAiB,CAAC,IAAI,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;4BAE5E,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;gCAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;4BAC7C,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACC,iBAAkB,CAAC,OAAO,GAAG,OAAO,CAAC;gCAC5C,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;4BACtC,CAAC;4BAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAEhC,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtD,CAAC;gBACH,CAAC;gBAED,WAAW,CAAC,GAAQ;oBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClB,CAAC;gBAED,cAAc,CAAC,KAAmB;oBAChC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAQ,KAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjE,CAAC;gBACH,CAAC;gBAEO,WAAW,CAAC,KAAa;oBAC/B,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM,CAAC;oBACT,CAAC;oBAED,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAChC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;oBACzC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAClB,YAAY,CAAC,WAAW,EAAE,CAAC;gBAC7B,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC9MD,yBAAU,CAAC,SAAS,CAAC,YAAY,GAAG,2BAAY,CAAC;;;;;;;;;ICSjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAqCG;IACH,oBAA8B,eAAsC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAI,eAAe,CAAC,CAAC,CAAC;IAC3D,CAAC;IAFD,qCAEC,CAAA;;;;;;;;;;;;;;;;;;;YAMD;gBACE,YAAoB,eAAsC;oBAAtC,oBAAe,GAAf,eAAe,CAAuB;gBAC1D,CAAC;gBAED,IAAI,CAAC,UAAqC,EAAE,MAAW;oBACrD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACnF,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,+BAAkC,kCAAe;gBAI/C,YAAsB,WAAsC,EACxC,eAAsC;oBACxD,MAAM,WAAW,CAAC,CAAC;oBAFC,gBAAW,GAAX,WAAW,CAA2B;oBACxC,oBAAe,GAAf,eAAe,CAAuB;oBAExD,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAe,EAC9B,UAAkB,EAAE,UAAkB,EACtC,QAAiC;oBAC1C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAED,WAAW,CAAC,KAAU,EAAE,QAAiC;oBACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,cAAc,CAAC,QAAiC;oBAC9C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAES,MAAM,CAAC,GAAQ;oBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,8BAA8B,EAAE,CAAC;gBACxC,CAAC;gBAES,SAAS;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,CAAC,8BAA8B,EAAE,CAAC;gBACxC,CAAC;gBAEO,8BAA8B;oBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;oBACzC,CAAC;gBACH,CAAC;gBAEO,UAAU,CAAC,QAAQ,GAA4B,IAAI;oBACzD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACtB,QAAQ,CAAC,WAAW,EAAE,CAAC;oBACzB,CAAC;oBAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC/B,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACf,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACxB,CAAC;oBAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAO,EAAK,CAAC;oBAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAE9B,MAAM,eAAe,GAAG,oBAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;oBACzD,EAAE,CAAC,CAAC,eAAe,KAAK,0BAAW,CAAC,CAAC,CAAC;wBACpC,MAAM,GAAG,GAAG,0BAAW,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,sCAAiB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;oBAChF,CAAC;gBACH,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YC1ID,yBAAU,CAAC,SAAS,CAAC,UAAU,GAAG,uBAAU,CAAC;;;;;;;;;ICG7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAqCG;IACH,wBAAqC,GAAG,IAAkE;QACxG,IAAI,OAAY,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;YAChD,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,CAAC;QACD,MAAM,WAAW,GAAsB,IAAI,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;IACrE,CAAC;IAPD,6CAOC,CAAA;;;;;;;;;;YAqBD,mCAAmC;YAEnC;gBACE,YAAoB,WAA8B,EAC9B,OAA6C;oBAD7C,gBAAW,GAAX,WAAW,CAAmB;oBAC9B,YAAO,GAAP,OAAO,CAAsC;gBACjE,CAAC;gBAED,IAAI,CAAC,UAAyB,EAAE,MAAW;oBACzC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,wBAAwB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrG,CAAC;YACH,CAAC;YAED;;;;eAIG;YACH,uCAA6C,kCAAe;gBAI1D,YAAY,WAA0B,EAClB,WAA8B,EAC9B,OAA6C;oBAC/D,MAAM,WAAW,CAAC,CAAC;oBAFD,gBAAW,GAAX,WAAW,CAAmB;oBAC9B,YAAO,GAAP,OAAO,CAAsC;oBAJzD,cAAS,GAAa,EAAE,CAAC;oBAM/B,MAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;oBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBAE7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,GAAG,CAAC,sCAAiB,CAAO,IAAI,EAAE,UAAU,EAAO,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;oBACxC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;oBACrC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACzB,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBAC5C,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BACjB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAC7B,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,cAAc;oBACZ,OAAO;gBACT,CAAC;gBAES,KAAK,CAAC,KAAQ;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;wBACzB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC9B,CAAC;oBACH,CAAC;gBACH,CAAC;gBAEO,WAAW,CAAC,IAAW;oBAC7B,IAAI,MAAW,CAAC;oBAChB,IAAI,CAAC;wBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC1C,CAAE;oBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA;;;;;;;;;;;;;;;;YCjJD,yBAAU,CAAC,SAAS,CAAC,cAAc,GAAG,+BAAc,CAAC;;;;;;;;;;;;;;;;;YCArD,yBAAU,CAAC,SAAS,CAAC,GAAG,GAAG,cAAQ,CAAC;;;;;;;;ICDpC;;;;;OAKG;IACH,gBAA6B,OAAsC;QACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,iBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,CAAC;IAFD,6BAEC,CAAA;;;;;;;;;;;;;;;;;;;;;;;YCPD,yBAAU,CAAC,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;;;;;;;;;;;;;;;;;;;;YEJrC;gBACE,YAAmB,eAAuB,EACvB,iBAAiB,GAAW,MAAM,CAAC,iBAAiB;oBADpD,oBAAe,GAAf,eAAe,CAAQ;oBACvB,sBAAiB,GAAjB,iBAAiB,CAAmC;gBACvE,CAAC;YACH,CAAC;YAJD,+CAIC,CAAA;;;;;;;;;;;;;;;YCDD;gBAAA;oBACS,kBAAa,GAAsB,EAAE,CAAC;gBAgB/C,CAAC;gBAbC,kBAAkB;oBAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,iCAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,CAAC;gBAED,oBAAoB,CAAC,KAAa;oBAChC,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;oBAC5C,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBACnD,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,iCAAe,CAC3C,kBAAkB,CAAC,eAAe,EAClC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CACrB,CAAC;gBACJ,CAAC;YACH,CAAC;YAjBD,yDAiBC,CAAA;;;;;;;ICpBD,qBAA4B,WAAgB,EAAE,SAAgB;QAC5D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YACrD,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,YAAY,GAAG,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1D,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC7B,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;IACH,CAAC;IATD,uCASC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;YCAD;;;;eAIG;YACH,6BAAuC,yBAAU;gBAM/C,YAAmB,QAAuB,EAC9B,SAAoB;oBAC9B,MAAM,UAAU,UAA2B;wBACzC,MAAM,UAAU,GAAsB,IAAI,CAAC;wBAC3C,MAAM,KAAK,GAAG,UAAU,CAAC,kBAAkB,EAAE,CAAC;wBAC9C,UAAU,CAAC,GAAG,CAAC,IAAI,4BAAY,CAAC;4BAC9B,UAAU,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;wBACzC,CAAC,CAAC,CAAC,CAAC;wBACJ,UAAU,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;wBACxC,MAAM,CAAC,UAAU,CAAC;oBACpB,CAAC,CAAC,CAAC;oBAVc,aAAQ,GAAR,QAAQ,CAAe;oBALnC,kBAAa,GAAsB,EAAE,CAAC;oBAgB3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC7B,CAAC;gBAED,gBAAgB,CAAC,UAA2B;oBAC1C,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC5C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC;wBACxC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjC,UAAU,CAAC,GAAG,CACZ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAC,OAAO,EAAE,UAAU,EAAC,OAAO,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAC9F,OAAO,CAAC,KAAK,EACb,EAAC,SAAA,OAAO,EAAE,YAAA,UAAU,EAAC,CAAC,CACzB,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC;YA/BD,6CA+BC,CAAA;YACD,yBAAW,CAAC,cAAc,EAAE,CAAC,2CAAoB,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;YCrCpD;;;;eAIG;YACH,4BAAsC,kBAAO;gBAM3C,YAAmB,QAAuB,EAC9B,SAAoB;oBAC9B,OAAO,CAAC;oBAFS,aAAQ,GAAR,QAAQ,CAAe;oBALnC,kBAAa,GAAsB,EAAE,CAAC;oBAQ3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC7B,CAAC;gBAES,UAAU,CAAC,UAA2B;oBAC9C,MAAM,OAAO,GAAqB,IAAI,CAAC;oBACvC,MAAM,KAAK,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC;oBAC3C,UAAU,CAAC,GAAG,CAAC,IAAI,4BAAY,CAAC;wBAC9B,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;oBACtC,CAAC,CAAC,CAAC,CAAC;oBACJ,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBAED,KAAK;oBACH,MAAM,OAAO,GAAG,IAAI,CAAC;oBACrB,MAAM,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC/C,mCAAmC;oBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC;wBACxC,CAAC;4BACC,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;4BACvC,mBAAmB;4BACd,OAAO,CAAC,SAAS,CAAC,QAAQ,CACxB,QAAQ,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAChD,OAAO,CAAC,KAAK,CACd,CAAC;wBACJ,CAAC,CAAC,EAAE,CAAC;oBACP,CAAC;gBACH,CAAC;YACH,CAAC;YApCD,2CAoCC,CAAA;YACD,yBAAW,CAAC,aAAa,EAAE,CAAC,2CAAoB,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;YC/CnD,mCAA0C,+BAAc;gBAOtD,YAAY,eAAe,GAAuB,aAAa,EAC5C,SAAS,GAAW,MAAM,CAAC,iBAAiB;oBAC7D,MAAM,eAAe,EAAE,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC;oBADxB,cAAS,GAAT,SAAS,CAAmC;oBAJxD,UAAK,GAAW,CAAC,CAAC;oBAClB,UAAK,GAAW,CAAC,CAAC,CAAC;gBAK1B,CAAC;gBAED;;;;mBAIG;gBACI,KAAK;oBAEV,MAAM,EAAC,OAAO,EAAE,SAAS,EAAC,GAAG,IAAI,CAAC;oBAClC,IAAI,KAAU,EAAE,MAAwB,CAAC;oBAEzC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,SAAS,EAAE,CAAC;wBAC9E,EAAE,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACvD,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,OAAO,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;4BAChC,MAAM,CAAC,WAAW,EAAE,CAAC;wBACvB,CAAC;wBACD,MAAM,KAAK,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YAjCkB,oCAAe,GAAW,EAAE,CAAC;YAFhD,yDAmCC,CAAA;YAED;;;;eAIG;YACH,4BAAsC,yBAAW;gBAE/C,YAAsB,SAA+B,EAC/B,IAAyB,EACzB,KAAK,GAAW,SAAS,CAAC,KAAK,IAAI,CAAC;oBACxD,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC;oBAHH,cAAS,GAAT,SAAS,CAAsB;oBAC/B,SAAI,GAAJ,IAAI,CAAqB;oBACzB,UAAK,GAAL,KAAK,CAA+B;oBAExD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvC,CAAC;gBAEM,QAAQ,CAAC,KAAS,EAAE,KAAK,GAAW,CAAC;oBAC1C,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;wBACb,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,GAKT,IAAI,CAAC,GAAG,CACzB,IAAI,aAAa,CAAI,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAChD,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC7B,CAAC;gBAES,cAAc,CAAC,SAA+B,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBACnF,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;oBACrC,MAAM,EAAC,OAAO,EAAC,GAAG,SAAS,CAAC;oBAC5B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACnB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBACxC,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAES,cAAc,CAAC,SAA+B,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBACnF,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC;gBAED,OAAc,WAAW,CAAI,CAAmB,EAAE,CAAmB;oBACnE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxB,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BACxB,MAAM,CAAC,CAAC,CAAC;wBACX,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC7B,MAAM,CAAC,CAAC,CAAC;wBACX,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,CAAC,CAAC,CAAC,CAAC;wBACZ,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC7B,MAAM,CAAC,CAAC,CAAC;oBACX,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,CAAC,CAAC,CAAC;oBACZ,CAAC;gBACH,CAAC;YACH,CAAC;YAhDD,2CAgDC,CAAA;;;;;;;;QCpFK,eAAe;;;;;;;;;;;;;;;;;;;;;;YAAf,eAAe,GAAW,GAAG,CAAC;YAWpC,4BAAmC,2CAAoB;gBAKrD,YAAmB,eAA+D;oBAChF,MAAM,oCAAa,EAAE,eAAe,CAAC,CAAC;oBADrB,oBAAe,GAAf,eAAe,CAAgD;oBAJ1E,mBAAc,GAAyB,EAAE,CAAC;oBAC1C,oBAAe,GAA0B,EAAE,CAAC;oBAC5C,eAAU,GAAoB,EAAE,CAAC;gBAIzC,CAAC;gBAED,UAAU,CAAC,OAAe;oBACxB,MAAM,OAAO,GAAW,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC7C,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnB,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;oBACjF,CAAC;oBACD,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC,eAAe,CAAC;gBACjD,CAAC;gBAED,oBAAoB,CAAI,OAAe,EAAE,MAAY,EAAE,KAAW;oBAChE,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;oBACzE,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;oBAC3E,CAAC;oBACD,MAAM,QAAQ,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;oBACpE,MAAM,IAAI,GAAG,IAAI,+BAAc,CAAI,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACnD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,mBAAmB,CAAI,OAAe,EAAE,MAAY,EAAE,KAAW;oBAC/D,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;oBAC1E,CAAC;oBACD,MAAM,QAAQ,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;oBACpE,MAAM,OAAO,GAAG,IAAI,6BAAa,CAAI,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBAEO,0BAA0B,CAAC,UAA2B,EAC3B,UAAkB;oBACnD,MAAM,QAAQ,GAAkB,EAAE,CAAC;oBACnC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK;wBACzB,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,UAAU,EAAE,YAAY,EAAE,2BAAY,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAClG,CAAC,EAAE,CAAC,GAAG;wBACL,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,UAAU,EAAE,YAAY,EAAE,2BAAY,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBACjG,CAAC,EAAE;wBACD,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,UAAU,EAAE,YAAY,EAAE,2BAAY,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;oBACjG,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,QAAQ,CAAC;gBAClB,CAAC;gBAED,gBAAgB,CAAC,UAA2B,EAC3B,qBAAqB,GAAW,IAAI;oBACnD,MAAM,MAAM,GAAkB,EAAE,CAAC;oBACjC,MAAM,SAAS,GAAkB,EAAE,QAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;oBAC1D,MAAM,mBAAmB,GAAG,aAAa;yBACtC,2BAA2B,CAAC,qBAAqB,CAAC,CAAC,iBAAiB,CAAC;oBACxE,IAAI,YAA0B,CAAC;oBAE/B,IAAI,CAAC,QAAQ,CAAC;wBACZ,YAAY,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;4BACnC,IAAI,KAAK,GAAG,CAAC,CAAC;4BACd,oCAAoC;4BACpC,EAAE,CAAC,CAAC,CAAC,YAAY,yBAAU,CAAC,CAAC,CAAC;gCAC5B,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC7D,CAAC;4BACD,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,2BAAY,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACnF,CAAC,EAAE,CAAC,GAAG;4BACL,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,2BAAY,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBAClF,CAAC,EAAE;4BACD,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,2BAAY,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;wBAClF,CAAC,CAAC,CAAC;oBACL,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEN,EAAE,CAAC,CAAC,mBAAmB,KAAK,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACrD,IAAI,CAAC,QAAQ,CAAC,MAAM,YAAY,CAAC,WAAW,EAAE,EAAE,mBAAmB,CAAC,CAAC;oBACvE,CAAC;oBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAEhC,MAAM,CAAC;wBACL,IAAI,CAAC,OAAe,EAAE,MAAY,EAAE,UAAgB;4BAClD,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;4BACvB,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;wBACrF,CAAC;qBACF,CAAC;gBACJ,CAAC;gBAED,mBAAmB,CAAC,sBAAyC;oBAC3D,MAAM,SAAS,GAAkB,EAAE,MAAM,EAAE,sBAAsB,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;oBAClF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAChC,MAAM,CAAC;wBACL,IAAI,CAAC,OAA0B;4BAC7B,MAAM,YAAY,GAAa,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;4BACnF,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;4BACvB,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,OAAO,IAC3C,aAAa,CAAC,2BAA2B,CAAC,OAAO,CAAC,CACnD,CAAC;wBACJ,CAAC;qBACF,CAAC;gBACJ,CAAC;gBAED,KAAK;oBACH,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC3C,OAAO,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACjC,cAAc,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;oBACjC,CAAC;oBAED,KAAK,CAAC,KAAK,EAAE,CAAC;oBACd,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnE,OAAO,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAClC,MAAM,IAAI,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC;wBACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC;gBAED,OAAO,2BAA2B,CAAC,OAAe;oBAChD,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,IAAI,iCAAe,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;oBACvD,CAAC;oBACD,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;oBACpB,IAAI,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;oBACjD,IAAI,mBAAmB,GAAG,MAAM,CAAC,iBAAiB,CAAC;oBAEnD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;wBACvC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACV,KAAK,GAAG,CAAC;4BACT,KAAK,GAAG;gCACN,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,UAAU,GAAG,KAAK,CAAC;gCACnB,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,UAAU,GAAG,CAAC,CAAC,CAAC;gCAChB,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,EAAE,CAAC,CAAC,iBAAiB,KAAK,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;oCACnD,MAAM,IAAI,KAAK,CAAC,+CAA+C;wCAC7D,qDAAqD,CAAC,CAAC;gCAC3D,CAAC;gCACD,iBAAiB,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC;gCACzD,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,EAAE,CAAC,CAAC,mBAAmB,KAAK,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;oCACrD,MAAM,IAAI,KAAK,CAAC,+CAA+C;wCAC7D,qDAAqD,CAAC,CAAC;gCAC3D,CAAC;gCACD,mBAAmB,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC;gCAC3D,KAAK,CAAC;4BACR;gCACE,MAAM,IAAI,KAAK,CAAC,iDAAiD;oCAC/D,+CAA+C,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;wBACnE,CAAC;oBACH,CAAC;oBAED,EAAE,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5B,MAAM,CAAC,IAAI,iCAAe,CAAC,iBAAiB,CAAC,CAAC;oBAChD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,iCAAe,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;oBACrE,CAAC;gBACH,CAAC;gBAED,OAAO,YAAY,CAAC,OAAe,EACf,MAAY,EACZ,UAAgB,EAChB,2BAA2B,GAAY,KAAK;oBAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,+CAA+C;4BAC7D,2BAA2B,CAAC,CAAC;oBACjC,CAAC;oBACD,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC3B,MAAM,YAAY,GAAkB,EAAE,CAAC;oBACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBACtC,MAAM,WAAW,GAAG,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBAC7E,MAAM,QAAQ,GAAG,OAAO,MAAM,KAAK,QAAQ;wBACzC,KAAC,CAAM,KAAK,CAAC;wBACb,KAAC,CAAM;4BACL,oCAAoC;4BACpC,EAAE,CAAC,CAAC,2BAA2B,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,+BAAc,CAAC,CAAC,CAAC;gCACvE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BAC5B,CAAC;4BACD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACnB,CAAC,CAAC;oBACJ,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;oBAEpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;wBACrD,IAAI,YAA+B,CAAC;wBACpC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACV,KAAK,GAAG,CAAC;4BACT,KAAK,GAAG;gCACN,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,UAAU,GAAG,KAAK,CAAC;gCACnB,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,UAAU,GAAG,CAAC,CAAC,CAAC;gCAChB,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,YAAY,GAAG,2BAAY,CAAC,cAAc,EAAE,CAAC;gCAC7C,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,KAAK,CAAC;4BACR,KAAK,GAAG;gCACN,YAAY,GAAG,2BAAY,CAAC,WAAW,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC;gCAC/D,KAAK,CAAC;4BACR;gCACE,YAAY,GAAG,2BAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gCACpD,KAAK,CAAC;wBACV,CAAC;wBAED,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;4BACjB,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK,EAAE,cAAA,YAAY,EAAE,CAAC,CAAC;wBACnF,CAAC;oBACH,CAAC;oBACD,MAAM,CAAC,YAAY,CAAC;gBACtB,CAAC;YACH,CAAC;YA/ND,2CA+NC,CAAA;;;;;;;;yCCxNY,cAAc;;;;;;;YA1B3B;gBAGE,YAAY,IAAS;oBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;wBAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACrE,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;wBACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxE,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACvE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3E,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;wBACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACnE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvE,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;wBACvC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAClE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACzD,IAAI,CAAC,qBAAqB,GAAG,UAAS,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvF,CAAC;gBACH,CAAC;YACH,CAAC;YAxBD,+EAwBC,CAAA;YAEY,8BAAA,cAAc,GAAG,IAAI,+BAA+B,CAAC,YAAI,CAAC,CAAA,CAAC;;;;;;;;;;;;;;;YCzBxE,sCAA6C,+BAAc;gBAClD,KAAK;oBAEV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAE3B,MAAM,EAAC,OAAO,EAAC,GAAG,IAAI,CAAC;oBACvB,IAAI,KAAU,CAAC;oBACf,IAAI,KAAK,GAAW,CAAC,CAAC,CAAC;oBACvB,IAAI,KAAK,GAAW,OAAO,CAAC,MAAM,CAAC;oBACnC,IAAI,MAAM,GAAqB,OAAO,CAAC,KAAK,EAAE,CAAC;oBAE/C,GAAG,CAAC;wBACF,EAAE,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACvD,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC,QAAQ,EAAE,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE;oBAExD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,OAAO,EAAE,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;4BACrD,MAAM,CAAC,WAAW,EAAE,CAAC;wBACvB,CAAC;wBACD,MAAM,KAAK,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YA3BD,+DA2BC,CAAA;;;;;;;;;;;;;;;;;;YC1BD;;;;eAIG;YACH,mCAA6C,yBAAW;gBAEtD,YAAsB,SAAkC,EAClC,IAAyB;oBAC7C,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC;oBAFH,cAAS,GAAT,SAAS,CAAyB;oBAClC,SAAI,GAAJ,IAAI,CAAqB;gBAE/C,CAAC;gBAES,cAAc,CAAC,SAAkC,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBACtF,0DAA0D;oBAC1D,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACpD,CAAC;oBACD,qDAAqD;oBACrD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC7B,0EAA0E;oBAC1E,4EAA4E;oBAC5E,0CAA0C;oBAC1C,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,+BAAc,CAAC,qBAAqB,CACvF,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CACtC,CAAC,CAAC;gBACL,CAAC;gBACS,cAAc,CAAC,SAAkC,EAAE,EAAQ,EAAE,KAAK,GAAW,CAAC;oBACtF,qEAAqE;oBACrE,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;oBACpD,CAAC;oBACD,4EAA4E;oBAC5E,4EAA4E;oBAC5E,mBAAmB;oBACnB,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,+BAAc,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;wBACxC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;oBAClC,CAAC;oBACD,sFAAsF;oBACtF,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC;YACH,CAAC;YApCD,yDAoCC,CAAA;;;;;;;;QC1CY,cAAc;;;;;;;;;;YAAd,8BAAA,cAAc,GAAG,IAAI,iDAAuB,CAAC,2CAAoB,CAAC,CAAA,CAAC;;;;;;;;QC6L5E,SAAS,EAoBT,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAnCV,sCAAsC;YAEtC;;;;;;;;;;;;eAYG;YACC,SAAS,GAAG;gBACd,MAAA,WAAI;gBACJ,OAAA,aAAK;gBACL,gBAAA,+BAAc;gBACd,OAAA,cAAK;aACN,CAAC;YAEF;;;;;;;;;;;;eAYG;YACC,MAAM,GAAG;gBACX,cAAA,6BAAY;gBACZ,YAAA,yBAAU;gBACV,UAAA,qBAAQ;aACT,CAAC;YAGE,mCAAS;YACT,6BAAM","sourcesContent":["/**\n * Created by Mtui on 9/17/16.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'topnav',\n    template:`\n<nav class=\"nav-top-menu\" >\n\t<a><span class=\"title\">Sell Electronics</span></a>\n</nav>\n<div class=\"logo\">\n\t<div *hideItDevice=\"['mobile']\" class=\"leftpanel\" >\t\t\n\t\t<img src=\"/Images/ipad.png\"/>\n\t</div>\n\t\t<div class=\"logo-image\">\n\t\t\t<a href=\"\"><img src=\"/Images/iphone.jpg\"/></a>\n\t\t</div>\n\t<div *hideItDevice=\"['mobile']\" class=\"rightpanel\">\n\t\t<a href=\"\"><img src=\"/Images/macbook.png\"/></a>\n\t</div>\n</div>\n<nav  class=\"menu\">\t\t\n    <a  href=\"#\"><img src=\"/Images/appleicon.png\"/></a> \t\t\n    <a class=\"samsung\" href=\"#\" style=\"border-right-style: none !important;\"><img src=\"/Images/samsuguicon.png\"/></a>\n</nav>\n`\n})\n\nexport class TopNav{}\n\n\n","/**\n * Created by Mtui on 9/17/16.\n */\nimport {Component} from \"@angular/core\";\ndeclare var $:any;\n\n@Component({\n    selector: 'main-view',\n        template: `\n                    <div mwlResizable class=\"app\">\n                    <span class=\"heading-pharse\"><h2>SELL YOUR ELECTRONIC DEVICES BY CLICKING BELOW</h2></span>\n                               <div class=\"downbutton\">\n                                    <img src=\"/Images/downbutton.jpg\"/>                             \n                                </div> \n                                <div class=\"startbutton\" >\n                                    <img routerLink=\"/make\" routerLinkActive=\"active\" on-mouseover=\"over(event)\" on-mouseout=\"out(event)\" src=\"/Images/startbutton.jpg\"/>                                   \n                                </div>\n                                <div class=\"tradin\">\n                                    <span><a routerLink=\"/make\" routerLinkActive=\"active\">SELL YOUR DEVICE</a></span>         \n                                 </div>\n                    </div>                     \n                  `,\n})\n\nexport class MainView {\n\n    over(){\n       $('.startbutton').find(\"img\").attr(\"src\", \"/Images/startbuttonhover.jpg\");\n    }\n\n    out() {\n        $('.startbutton').find(\"img\").attr(\"src\", \"/Images/startbutton.jpg\");\n    }\n}\n\n","/**\n * Created by Mtui on 9/18/16.\n */\n\nimport { Component } from '@angular/core';\nimport { TopNav } from './Nav';\nimport { MainView } from './MainView';\n\n@Component ({\n    selector: 'entry',\n    template: '<topnav></topnav><main-view></main-view><footer></footer>'\n})\n\nexport class Entry{}","import { Component } from '@angular/core';\nimport { TopNav } from './views/Nav';\nimport { MainView } from './views/MainView';\nimport { Entry } from './views/Entry';\n\n\n@Component ({\n  selector: 'app',\n  template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent{}","/**\n * Created by Mtui on 9/18/16.\n */\n\nimport {Component, Renderer, AfterContentInit, ApplicationRef} from '@angular/core';\ndeclare var $:any;\n\n@Component({\n    selector: 'footer',\n    template: `<div class=\"footer-app\">\n            <span class=\"footer-text left\">1-999-999-9999</span>     \n              <div class=\"map\"><a href=\"https://www.google.com/maps/place/30+6th+Ave,+New+York,+NY+10013/@40.7199901,-74.0073711,17z/data=!3m1!4b1!4m5!3m4!1s0x89c2598ac19f1505:0xe91bd2f442592192!8m2!3d40.7199901!4d-74.0051824\"><img (mouseover)=\"over()\" (mouseleave)=\"out()\" src=\"/Images/map.png\"/></a> </div>\n            <span class=\"footer-text right\">30 6th Ave New York, NY</span>  \n</div>`\n})\n\nexport class Footer implements AfterContentInit{\n\n    private closed:boolean = false;\n\n    constructor(private renderer: Renderer, private appRef: ApplicationRef) {\n        /*var ua = navigator.userAgent.toLowerCase();\n         var isSafari = (ua.indexOf(\"safari\") != -1 && ua.indexOf(\"chrome\") == -1);\n         if( isSafari) {\n         $(\"body\").css(\"height\", \"auto !important\");\n         $(\"html\").css(\"height\", \"auto !important\");\n         }\n         this.shouldHideFooter();\n         this.renderer.listenGlobal('window', 'scroll', (evt) => {\n         this.shouldHideFooter();\n         });\n\n         this.renderer.listenGlobal('window', 'orientationchange', (evt) => {\n         this.shouldHideFooter();\n         });\n\n         }\n\n         shouldHideFooter() {\n\n         if (!closed && $(\"body\").scrollTop() < 25 || ($(\"body\").height() - $(\"body\").scrollTop() - 23) < 0 ) {\n\n         $('.footer-app').fadeOut(1);\n         this.closed = true;\n         }\n         else{\n         $('.footer-app').fadeIn(1);\n         this.closed = false;\n         }\n         }*/\n        this.appRef.tick();\n    }\n\n    public resizeHandler() {\n        if($(\"history\").length === 0) return;\n        setTimeout(() => this.getContentHeight(), 100);\n    }\n\n    getContentHeight() {\n        var docHeight = $(window).height();\n        var footerHeight = $('footer').height();\n        var footerTop = $('footer').position().top + footerHeight;\n\n        if (footerTop < docHeight) {\n            $('#footer').css('margin-top', 1200/*((200+ (docHeight - footerTop)) + 'px')*/);\n        }\n        return;\n        /*var containerHeight = $(\".app\")[0].scrollHeight;\n        var navHeight = $(\"topnav\").height() ;\n        var historyHeight =  $(\"history\").height();\n        var footer = $(\".footer-app\");\n        footer.css(\"top\", (containerHeight + navHeight + historyHeight + (this.isMobile() ? 800 : 560)));\n        footer.css(\"position\", \"absolute\");*/\n    }\n\n    isMobile() {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n            || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4)))\n            return true;\n        return false;\n    }\n\n    over(){\n        $('.map').find(\"img\").attr(\"src\", \"/Images/maphover.png\");\n    }\n    out() {\n        $('.map').find(\"img\").attr(\"src\", \"/Images/map.png\");\n    }\n\n    ngAfterContentInit() {\n        this.resizeHandler();\n    }\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\nexport enum DeviceTypes {\n    Tablet = 1,\n    Phone,\n    Laptop\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\nexport class DeviceDisplayOffset {\n    constructor(\n        public x: number,\n        public y: number\n    ){}\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\n\nexport enum DevicesModels {\n    Apple,\n    Samsung,\n    Motorola,\n    HTC,\n    Nokia\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\nimport { DeviceTypes } from \"./DeviceTypes\";\nimport { DeviceDisplayOffset } from \"./DeviceDisplayOffset\";\nimport {DevicesModels} from \"./DeviceModels\";\n\nexport class Device {\n    constructor(\n        public deviceType,\n        public deviceModel: DevicesModels,\n        public condition: string,\n        public resourceUrl: string,\n        public iconOffset: DeviceDisplayOffset,\n        public name: string,\n        public names: string[]\n    ){}\n\n    hasDeviceType(deviceType: DeviceTypes) {\n        return (deviceType === this.deviceType)\n    }\n}\n","/**\n * Created by Mtui on 9/20/16.\n */\nimport {Device} from \"./Device\"\n\nexport class UserDevice extends Device {\n    public filterdData: Device[];\n    public page: number;\n    public displayData: Device[];\n\n    constructor(){\n        super(null, null, null, null, null, null, null);\n    }\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\n\nimport { Component } from '@angular/core';\nimport {UserDevice} from \"../model/UserDevice\";\n\n@Component({\n    selector: 'history',\n    template: ` \n                <div class=\"history-noborder\">\n                <div class=\"rotate-right downbutton\">\n                        <img class=\"left\" src=\"/Images/downbutton.jpg\"/>\n                  </div>\n                    <div class=\"history-nav\">                       \n                     <div class=\"number-container\">\n                        <div [ngClass]=\"getStyle(1)\"><span class=\"number\">1</span></div>\n                        <div [ngClass]=\"getStyle(2)\"><span class=\"number\">2</span></div>\n                        <div [ngClass]=\"getStyle(3)\"><span class=\"number\">3</span></div>                                              \n                      </div>\n                   </div>                \n                </div>\n                \n`\n})\n\nexport class History{\n    private css: string =\"current-index-on\";\n\n    constructor(private userDevice: UserDevice) {\n\n    }\n\n    getStyle(page: number) {\n        if(page < this.userDevice.page)\n            return \"current-index-complete history-number\";\n        return (page === this.userDevice.page) ? \"current-index-on history-number\" : \"current-index-off history-number\";\n    }\n\n\n\n}\n","/**\n * Created by Mtui on 9/19/16.\n */\nimport { Http } from \"@angular/http\";\nimport {Injectable} from \"@angular/core\";\nimport {DeviceTypes} from \"../model/DeviceTypes\";\nimport {DevicesModels} from \"../model/DeviceModels\";\nimport {Device} from \"../model/Device\";\n\n@Injectable()\nexport class DeviceService {\n\n    private deviceData: Device[] = [];\n\n    constructor(private http: Http) {\n        this.loadDevices();\n    }\n\n    getDevices() {\n        return this.deviceData;\n    }\n\n    loadDevices() {\n        this.http.get(\"/resource/resource.json\")\n            .subscribe(\n                data => {\n                    this.populateDeviceData(data.json());\n                },\n                err => {\n                    console.log(err)\n                },\n                () => console.log(\"done\")\n            )\n    }\n    getModel(d) {\n        var model;\n\n        switch(d.deviceModel) {\n            case DevicesModels[DevicesModels.Apple]:\n                model = DevicesModels.Apple;\n                break;\n            case DevicesModels[DevicesModels.Samsung]:\n                model = DevicesModels.Samsung;\n                break;\n        }\n\n        return model;\n    }\n\n    getType(d) {\n        var type;\n\n        switch(d.deviceType) {\n            case DeviceTypes[DeviceTypes.Phone]:\n                type = DeviceTypes.Phone;\n                break;\n            case DeviceTypes[DeviceTypes.Tablet]:\n                type = DeviceTypes.Tablet;\n                break;\n            case DeviceTypes[DeviceTypes.Laptop]:\n                type = DeviceTypes.Laptop;\n                break;\n        }\n\n        return type;\n    }\n\n    populateDeviceData(data: Device[]) {\n        data.forEach(d => {\n            d.names.forEach(name => {\n                var imageName:string = name;\n                while(imageName.indexOf(\" \") !== -1){\n                    imageName = imageName.replace(\" \", \"\");\n                }\n                this.deviceData.push(\n                    new Device(\n                        this.getType(d),\n                        this.getModel(d),\n                        null,\n                        (d.resourceUrl + \"/\"+ imageName +\".jpg\"),\n                        null,\n                        name,\n                        null\n                    )\n                )\n            }\n        )\n\n        })\n    }\n}","/**\n * Created by Mtui on 9/21/16.\n */\nimport {Pipe, Injectable, PipeTransform} from \"@angular/core\";\nimport {Device} from \"../model/Device\";\nimport {DeviceTypes} from \"../model/DeviceTypes\";\n\n@Pipe({\n    name: \"hasDeviceType\"\n})\n\nexport class HasDeviceType implements PipeTransform {\n    transform(devices: Device[], deviceType: DeviceTypes): boolean{\n        for(var i = 0; i < devices.length; i++) {\n            var d: Device = devices[i];\n            if (d.deviceType === deviceType) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/**\n * Created by Mtui on 9/18/16.\n */\nimport {Component} from \"@angular/core\";\nimport { TopNav } from \"./Nav\";\nimport { Footer } from \"./Footer\";\nimport { History } from \"./History\";\nimport { DeviceService } from \"../services/DeviceService\"\nimport {UserDevice} from \"../model/UserDevice\";\nimport {HasDeviceType } from \"../utils/HasDeviceTypesPipe\";\nimport {DevicesModels} from \"../model/DeviceModels\";\nimport {Device} from \"../model/Device\";\nimport {DeviceTypes} from \"../model/DeviceTypes\"\nimport {Router} from \"@angular/router\";\nimport {ResizeEvent} from \"angular2-resizable\";\n\ndeclare var $:any;\n\n@Component({\n    selector: 'make-view',\n    template: `        \n\n                <topnav></topnav>\n                <div  class=\"app\">\n                <span class=\"heading-pharse\">\n                    <h2>CHOOSE DEVICE</h2>\n                </span>\n                <history></history>\n                <div class=\"makes\">\n                    <ul>\n                       <li> \n                       <div  class=\"iphone-menu make-menu\">\n                        <img name=\"Apple\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/iphoneIcon.png\"/>\n                    </div></li>\n                    \n                     <li><div  class=\"make-menu blackberry-menu\">\n                        <img name=\"Blackberry\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/blackberryicon.png\"/>\n                    </div></li>\n                    <li><div  class=\"make-menu htc-menu\">\n                        <img name=\"HTC\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/htcicon.png\"/>\n                    </div></li>\n                    <li><div  class=\"make-menu lg-menu\">\n                        <img name=\"LG\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/lgicon.png\"/>\n                    </div></li>\n                    <li><div  class=\"make-menu motorola-menu\">\n                        <img name=\"Motorola\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/motorolaicon.png\"/>\n                    </div></li>\n                     <li><div  class=\"make-menu nokia-menu\">\n                        <img name=\"Nokia\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/nokiaicon.png\"/>\n                    </div></li>\n                    <li>\n                    <div  class=\"make-menu samsung-menu\">\n                        <img name=\"Samsung\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/samsungicon.png\"/>\n                    </div>\n                    </li>\n                    </ul>\n                </div>\n                 <div class=\"device-containers\">\n                            <div *ngIf=\"(filteredModel.length > 0)\" class=\"device-models\">\n                                 <div *ngIf=\"(filteredModel | hasDeviceType:1)\" class=\"device-list iphone-list\">\n                                       <a><img name=\"Phone\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandlerDevice($event)\" src=\"/Images/iphone.png\"/></a>\n                                       <p><span class=\"title-list\">Phone</span></p>\n                                  </div>\n                                  <!--<div *ngIf=\"(filteredModel | hasDeviceType:3)\" class=\"device-list macbook-list\">\n                                       <a><img name=\"Laptop\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandlerDevice($event)\" src=\"/Images/macbook.png\"/></a>\n                                        <span class=\"title-list\">Laptop</span>\n                                  </div>-->\n                                   <div *ngIf=\"(filteredModel | hasDeviceType:2)\" class=\"device-list ipad-list\">\n                                       <a><img name=\"Tablet\" (mouseover)=\"over($event)\" \n                                                (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandlerDevice($event)\" src=\"/Images/ipad.png\"/></a>\n                                       <p><span class=\"title-list\">Tablet</span></p>\n                                  </div>                             \n                                  \n                            </div>\n                      </div>\n                                                                 <div class=\"footer-push\"></div>\n                </div>                   \n                  <footer></footer>\n                  `\n\n})\n\nexport class MakeView {\n\n    private deviceData;\n    private filteredModel: Device[] = [];\n\n    ngOnInit() {\n        this.userDevice.page = 1;\n    }\n\n    constructor(private deviceService: DeviceService,\n                private userDevice: UserDevice,\n                private router: Router) {\n        this.deviceData = this.deviceService.getDevices();\n    }\n\n    over(event) {\n        var button = event.target;\n        if(button.selected) return;\n\n        var src = event.target.src;\n        var indexExtentsion = src.indexOf(\".png\");\n        var extention = src.slice(indexExtentsion);\n        var newSource = src.slice(0, indexExtentsion) + \"hover\" + extention;\n\n        button.setAttribute(\"src\",newSource);\n    }\n\n    out(event) {\n        var button = event.target;\n        if (button.selected) return;\n\n        button.src = button.src.replace(\"hover\",\"\");\n    }\n\n    clickHandler(event) {\n        this.resetButtons();\n        var button = event.target;\n        this.over(event);\n\n        button.selected = true;\n        this.displayDevicesTypes(button);\n    }\n\n    clickHandlerDevice(event) {\n\n        this.userDevice.deviceType = DeviceTypes[event.target.name];\n        this.userDevice.displayData = this.filteredModel.filter(\n            device => {\n                return device.deviceType === this.userDevice.deviceType;\n            }\n        )\n\n        this.router.navigate(['/device-details']);\n    }\n\n    resetButtons() {\n        $(\".make-menu\").find(\"img\").each( function(){\n            this.src = this.src.replace(\"hover\",\"\");\n            this.selected = false;\n        });\n    }\n\n    displayDevicesTypes(button:HTMLImageElement) {\n        var model = DevicesModels[button.name];\n\n        this.userDevice.deviceModel = model;\n        this.filteredModel = this.deviceData.filter(\n            device => {\n                return device.deviceModel === model\n            }\n        );\n    }\n\n}","/**\n * Created by Mtui on 9/21/16.\n */\nimport {Component, AfterContentInit, ApplicationRef} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {UserDevice} from \"../model/UserDevice\";\nimport {Device} from \"../model/Device\"\nimport {Footer} from \"./Footer\";\ndeclare var $:any;\n\n\n\n@Component({\n    selector: 'device-details',\n\n    template: `    \n                    <topnav></topnav>\n                    <div class=\"app\">\n                    <span class=\"heading-pharse\">\n                        <h2>CHOOSE CONDITION AND CARRIER</h2>\n                     </span>\n                     <history></history>\n                        <div  class=\"display-device\">\n                            <ul>\n                                <li (mouseout)=\"out($event)\" \n                                (mouseover)=\"over($event);\"\n                                 (click)=\"clickHandler($event)\"\n                                *ngFor=\"let device of displayData\">\n                                    <img name=\"{{device.name}}\" src=\"{{device.resourceUrl}}\"/>\n                                    <span class=\"title-display-list\"><p>{{device.name}}</p></span>\n                                </li>\n                            </ul>                            \n                        </div>\n                                               <div class=\"footer-push\"></div>\n                    </div>        \n                   \n                    \n              `\n})\n\nexport class DeviceDetails{\n\n    private displayData: Device[] = [];\n\n    ngOnInit() {\n        this.userDevice.page = 2;\n    }\n\n    constructor(private userDevice: UserDevice,\n                private router: Router,\n                private appRef: ApplicationRef) {\n        this.displayData = this.userDevice.displayData;\n    }\n\n    out(event) {\n\n    }\n\n    over(event) {\n\n    }\n\n    clickHandler(event) {\n        this.userDevice.name = event.target.name;\n        this.userDevice.resourceUrl = event.target.src;\n        this.router.navigate([\"/final-price\"]);\n    }\n\n}\n","/**\n * Created by Mtui on 9/24/16.\n */\nexport enum ConditionType {\n    GOOD = 1,\n    BAD,\n    UGLY\n}\n","/**\n * Created by Mtui on 9/24/16.\n */\nimport { Component } from \"@angular/core\";\nimport {UserDevice} from \"../model/UserDevice\";\nimport {ConditionType} from \"../model/ConditionType\";\n\ndeclare var $:any;\n\n@Component({\n    selector: \"final-price\",\n    template: ` <topnav></topnav>\n                <div class=\"app\">\n                    <span class=\"heading-pharse\">\n                        <h2>CHOOSE DEVICE AND CARRIER</h2>\n                     </span>\n                   <history></history>\n                   <span class=\"title-display-list\"><h2>{{userDevice.name}}</h2></span>\n                   <div class=\"display-device center-border\">\n                         <img src=\"{{userDevice.resourceUrl}}\"/>                        \n                    </div>\n                    <br>\n                    <span class=\"heading-middle\"><h2>Carrier</h2></span>\n                    <div class=\"carriers\">\n                    <ul>                      \n                    <li><div  class=\"make-menu att-menu\">\n                        <img name=\"Att\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/carries/att.png\"/>\n                    </div></li>\n                     <li><div  class=\"make-menu sprint-menu\">\n                        <img name=\"Sprint\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/carries/sprint.png\"/>\n                    </div></li>\n                    <li>\n                    <div  class=\"make-menu verizon-menu\">\n                        <img name=\"Verizon\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/carries/verizon.png\"/>\n                    </div>\n                    </li>\n                    \n                    <li> <div  class=\"make-menu tmobile-menu\">\n                        <img name=\"TMobile\" (mouseover)=\"over($event)\" \n                        (mouseleave)=\"out($event)\" \n                        (click)=\"clickHandler($event)\" \n                        src=\"/Images/carries/tmobile.png\"/>\n                    </div>\n                    \n                    </li>\n                    </ul>\n                </div>\n                <div class=\"condition\">\n                <span class=\"heading-middle\"><h2>Condition</h2></span>\n                <div class=\"carriers inputs\">      \n                         <div class=\"input-container\">\n                         <input type=\"radio\" onclick='$(\".startbutton.hidder\").css({\"display\": \"block !important\", \"visibility\": \"true\"}); '  name=\"condition\" value=\"GOOD\">GOOD<br>\n                        </div>\n                        <div class=\"input-container\">\n                         <input type=\"radio\" onclick=' $(\".startbutton.hidder\").css({\"display\": \"block !important\", \"visibility\": \"true\"}); '  name=\"condition\" value=\"BAD\">BAD<br>\n                        </div>\n                        <div class=\"input-container\">\n                         <input type=\"radio\" onclick=' $(\".startbutton.hidder\").css({\"display\": \"block !important\", \"visibility\": \"true\"}); ' name=\"condition\" value=\"UGLY\">UGLY<br>\n                        </div>\n                      \n                </div>   \n                      <div class=\"startbutton hidden\" >\n                                    <img routerLink=\"/make\" routerLinkActive=\"active\" on-mouseover=\"over(event)\" on-mouseout=\"out(event)\" src=\"/Images/moneybutton.svg\"/>                                   \n                                </div>\n                       </div>\n                <div class=\"footer-push\"></div>\n                </div>\n                <footer></footer>\n                    \n                `\n})\n\nexport class GetPrice {\n\n    private filteredModel = [];\n\n    ngOnInit() {\n       this.userDevice.page = 3;\n    }\n\n    constructor(private userDevice: UserDevice) {\n\n    }\n\n    over(event) {\n        var button = event.target;\n        if(button.selected) return;\n\n        var src = event.target.src;\n        var indexExtentsion = src.indexOf(\".png\");\n        var extention = src.slice(indexExtentsion);\n        var newSource = src.slice(0, indexExtentsion) + \"hover\" + extention;\n\n        button.setAttribute(\"src\",newSource);\n    }\n\n    out(event) {\n        var button = event.target;\n        if (button.selected) return;\n\n        button.src = button.src.replace(\"hover\",\"\");\n    }\n\n    clickHandler(event) {\n        this.resetButtons();\n        var button = event.target;\n        this.over(event);\n\n        button.selected = true;\n        this.displayCondition(button);\n    }\n\n    resetButtons() {\n        $(\".make-menu\").find(\"img\").each( function(){\n            this.src = this.src.replace(\"hover\",\"\");\n            this.selected = false;\n        });\n    }\n\n    displayCondition(button) {\n        $(\".condition\").css(\"display\", \"block\");\n    }\n\n    conditionHandler() {\n        //debugger;\n        //this.userDevice.condition = ConditionType[event.target];\n        //debugger;\n        $(\".startbutton.hidden\").css({\"display\": \"block !important\", \"visibility\": \"true\"});\n    }\n}\n","/**\n * Created by Mtui on 9/18/16.\n */\n\nimport { Routes } from \"@angular/router\";\nimport { AppComponent } from \"./app-component\";\nimport { MakeView } from \"./views/DeviceAttributes\";\nimport { Entry } from \"./views/Entry\";\nimport {DeviceDetails} from \"./views/DeviceDetails\";\nimport { GetPrice } from \"./views/GetPrice\"\n\nexport const appRoutes: Routes = [\n    { path: '', component: Entry },\n    { path: \"make\", component: MakeView},\n    { path: \"device-details\", component: DeviceDetails, data: {s: \"\", x: \"\"}},\n    { path: \"final-price\", component: GetPrice, data: {s: \"\", x: \"\"}},\n\n];\n\nexport const appRoutingProviders: any[] = [];\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from \"./app-component\";\nimport { TopNav } from \"./views/Nav\";\nimport { MainView } from \"./views/MainView\";\nimport { Footer } from \"./views/Footer\";\nimport { appRoutingProviders } from \"./app.routes\";\nimport { Entry } from \"./views/Entry\";\nimport { RouterModule } from \"@angular/router\";\nimport { appRoutes } from \"./app.routes\";\nimport { MakeView } from \"./views/DeviceAttributes\";\nimport { History } from \"./views/History\"\nimport { DeviceService } from \"./services/DeviceService\";\nimport { HttpModule} from \"@angular/http\"\nimport {UserDevice} from \"./model/UserDevice\";\nimport {ResponsiveModule, ResponsiveConfigInterface} from \"ng2-responsive\";\nimport {HasDeviceType} from \"./utils/HasDeviceTypesPipe\";\nimport {DeviceTypes} from \"./model/DeviceTypes\"\nimport {DeviceDetails} from \"./views/DeviceDetails\";\nimport {ResizableModule} from \"angular2-resizable\";\nimport {GetPrice} from \"./views/GetPrice\"\n\nlet config: ResponsiveConfigInterface = {\n    breakPoints: {\n        xs: {max: 600},\n        sm: {min: 601, max: 959},\n        md: {min: 960, max: 1279},\n        lg: {min: 1280, max: 1919},\n        xl: {min: 1920}\n    },\n    debounceTime: 100 // allow to debounce checking timer\n};\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        RouterModule.forRoot(appRoutes),\n        HttpModule,\n        ResponsiveModule,\n        ResizableModule\n    ],\n    declarations: [\n        AppComponent,\n        TopNav,\n        MainView,\n        Footer,\n        Entry,\n        MakeView,\n        History,\n        HasDeviceType,\n        DeviceDetails,\n        GetPrice\n    ],\n    providers:[\n        appRoutingProviders,\n        DeviceService,\n        UserDevice\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport  class AppModule{\n    constructor(private _deviceService: DeviceService,\n                private _userDevice: UserDevice){\n\n    }\n}\n","import { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport { AppModule } from \"./app-module\";\nimport {DeviceService} from \"./services/DeviceService\";\nimport {enableProdMode} from \"@angular/core\";\n\n//enableProdMode();\n\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);\n","/**\n * Created by Mtui on 9/19/16.\n */\n\nexport const data = {\n    iPhone: {\n        url: \"/Images/iphone/iphone.png\",\n        name: [\n            \"iPhone\",\n            \"iPhone 2\",\n            \"iPhone 3\",\n            \"iPhone 4\",\n            \"iPhone 4s\",\n            \"iPhone 5\",\n            \"iPhone 5s\",\n            \"iPhone 6\"\n        ]\n    },\n    Samsung: {\n        url: \"/Images/samsung/samsung.png\",\n        name: [\n           \"Samsung Galaxy S3\",\n           \"Samsung Galaxy S4\",\n           \"Samsung Galaxy S5\"\n        ]\n    }\n}","/**\n * Created by Mtui on 9/24/16.\n */\nexport enum Carrier {\n    ATT = 1,\n    Sprint,\n    Verizon,\n    TMoblie\n}\n","export let STATUS = {\r\n  CONTINUE: 100,\r\n  SWITCHING_PROTOCOLS: 101,\r\n  OK: 200,\r\n  CREATED: 201,\r\n  ACCEPTED: 202,\r\n  NON_AUTHORITATIVE_INFORMATION: 203,\r\n  NO_CONTENT: 204,\r\n  RESET_CONTENT: 205,\r\n  PARTIAL_CONTENT: 206,\r\n  MULTIPLE_CHOICES: 300,\r\n  MOVED_PERMANTENTLY: 301,\r\n  FOUND: 302,\r\n  SEE_OTHER: 303,\r\n  NOT_MODIFIED: 304,\r\n  USE_PROXY: 305,\r\n  TEMPORARY_REDIRECT: 307,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  PAYMENT_REQUIRED: 402,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  METHOD_NOT_ALLOWED: 405,\r\n  NOT_ACCEPTABLE: 406,\r\n  PROXY_AUTHENTICATION_REQUIRED: 407,\r\n  REQUEST_TIMEOUT: 408,\r\n  CONFLICT: 409,\r\n  GONE: 410,\r\n  LENGTH_REQUIRED: 411,\r\n  PRECONDITION_FAILED: 412,\r\n  PAYLOAD_TO_LARGE: 413,\r\n  URI_TOO_LONG: 414,\r\n  UNSUPPORTED_MEDIA_TYPE: 415,\r\n  RANGE_NOT_SATISFIABLE: 416,\r\n  EXPECTATION_FAILED: 417,\r\n  IM_A_TEAPOT: 418,\r\n  UPGRADE_REQUIRED: 426,\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  NOT_IMPLEMENTED: 501,\r\n  BAD_GATEWAY: 502,\r\n  SERVICE_UNAVAILABLE: 503,\r\n  GATEWAY_TIMEOUT: 504,\r\n  HTTP_VERSION_NOT_SUPPORTED: 505,\r\n  PROCESSING: 102,\r\n  MULTI_STATUS: 207,\r\n  IM_USED: 226,\r\n  PERMANENT_REDIRECT: 308,\r\n  UNPROCESSABLE_ENTRY: 422,\r\n  LOCKED: 423,\r\n  FAILED_DEPENDENCY: 424,\r\n  PRECONDITION_REQUIRED: 428,\r\n  TOO_MANY_REQUESTS: 429,\r\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\r\n  UNAVAILABLE_FOR_LEGAL_REASONS: 451,\r\n  VARIANT_ALSO_NEGOTIATES: 506,\r\n  INSUFFICIENT_STORAGE: 507,\r\n  NETWORK_AUTHENTICATION_REQUIRED: 511\r\n};\r\n\r\n/*tslint:disable:quotemark max-line-length one-line */\r\nexport let STATUS_CODE_INFO =\r\n  {\r\n    \"100\": {\r\n      \"code\": 100,\r\n      \"text\": \"Continue\",\r\n      \"description\": \"\\\"The initial part of a request has been received and has not yet been rejected by the server.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.2.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.2.1\"\r\n    },\r\n    \"101\": {\r\n      \"code\": 101,\r\n      \"text\": \"Switching Protocols\",\r\n      \"description\": \"\\\"The server understands and is willing to comply with the client's request, via the Upgrade header field, for a change in the application protocol being used on this connection.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.2.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.2.2\"\r\n    },\r\n    \"200\": {\r\n      \"code\": 200,\r\n      \"text\": \"OK\",\r\n      \"description\": \"\\\"The request has succeeded.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.1\"\r\n    },\r\n    \"201\": {\r\n      \"code\": 201,\r\n      \"text\": \"Created\",\r\n      \"description\": \"\\\"The request has been fulfilled and has resulted in one or more new resources being created.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.2\"\r\n    },\r\n    \"202\": {\r\n      \"code\": 202,\r\n      \"text\": \"Accepted\",\r\n      \"description\": \"\\\"The request has been accepted for processing, but the processing has not been completed.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.3\"\r\n    },\r\n    \"203\": {\r\n      \"code\": 203,\r\n      \"text\": \"Non-Authoritative Information\",\r\n      \"description\": \"\\\"The request was successful but the enclosed payload has been modified from that of the origin server's 200 (OK) response by a transforming proxy.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.4\"\r\n    },\r\n    \"204\": {\r\n      \"code\": 204,\r\n      \"text\": \"No Content\",\r\n      \"description\": \"\\\"The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.5\"\r\n    },\r\n    \"205\": {\r\n      \"code\": 205,\r\n      \"text\": \"Reset Content\",\r\n      \"description\": \"\\\"The server has fulfilled the request and desires that the user agent reset the \\\"document view\\\", which caused the request to be sent, to its original state as received from the origin server.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.6\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.6\"\r\n    },\r\n    \"206\": {\r\n      \"code\": 206,\r\n      \"text\": \"Partial Content\",\r\n      \"description\": \"\\\"The server is successfully fulfilling a range request for the target resource by transferring one or more parts of the selected representation that correspond to the satisfiable ranges found in the requests's Range header field.\\\"\",\r\n      \"spec_title\": \"RFC7233#4.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7233#section-4.1\"\r\n    },\r\n    \"300\": {\r\n      \"code\": 300,\r\n      \"text\": \"Multiple Choices\",\r\n      \"description\": \"\\\"The target resource has more than one representation, each with its own more specific identifier, and information about the alternatives is being provided so that the user (or user agent) can select a preferred representation by redirecting its request to one or more of those identifiers.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.4.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.1\"\r\n    },\r\n    \"301\": {\r\n      \"code\": 301,\r\n      \"text\": \"Moved Permanently\",\r\n      \"description\": \"\\\"The target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.4.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.2\"\r\n    },\r\n    \"302\": {\r\n      \"code\": 302,\r\n      \"text\": \"Found\",\r\n      \"description\": \"\\\"The target resource resides temporarily under a different URI.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.4.3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.3\"\r\n    },\r\n    \"303\": {\r\n      \"code\": 303,\r\n      \"text\": \"See Other\",\r\n      \"description\": \"\\\"The server is redirecting the user agent to a different resource, as indicated by a URI in the Location header field, that is intended to provide an indirect response to the original request.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.4.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.4\"\r\n    },\r\n    \"304\": {\r\n      \"code\": 304,\r\n      \"text\": \"Not Modified\",\r\n      \"description\": \"\\\"A conditional GET request has been received and would have resulted in a 200 (OK) response if it were not for the fact that the condition has evaluated to false.\\\"\",\r\n      \"spec_title\": \"RFC7232#4.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7232#section-4.1\"\r\n    },\r\n    \"305\": {\r\n      \"code\": 305,\r\n      \"text\": \"Use Proxy\",\r\n      \"description\": \"*deprecated*\",\r\n      \"spec_title\": \"RFC7231#6.4.5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.5\"\r\n    },\r\n    \"307\": {\r\n      \"code\": 307,\r\n      \"text\": \"Temporary Redirect\",\r\n      \"description\": \"\\\"The target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.4.7\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.4.7\"\r\n    },\r\n    \"400\": {\r\n      \"code\": 400,\r\n      \"text\": \"Bad Request\",\r\n      \"description\": \"\\\"The server cannot or will not process the request because the received syntax is invalid, nonsensical, or exceeds some limitation on what the server is willing to process.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.1\"\r\n    },\r\n    \"401\": {\r\n      \"code\": 401,\r\n      \"text\": \"Unauthorized\",\r\n      \"description\": \"\\\"The request has not been applied because it lacks valid authentication credentials for the target resource.\\\"\",\r\n      \"spec_title\": \"RFC7235#6.3.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7235#section-3.1\"\r\n    },\r\n    \"402\": {\r\n      \"code\": 402,\r\n      \"text\": \"Payment Required\",\r\n      \"description\": \"*reserved*\",\r\n      \"spec_title\": \"RFC7231#6.5.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.2\"\r\n    },\r\n    \"403\": {\r\n      \"code\": 403,\r\n      \"text\": \"Forbidden\",\r\n      \"description\": \"\\\"The server understood the request but refuses to authorize it.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.3\"\r\n    },\r\n    \"404\": {\r\n      \"code\": 404,\r\n      \"text\": \"Not Found\",\r\n      \"description\": \"\\\"The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.4\"\r\n    },\r\n    \"405\": {\r\n      \"code\": 405,\r\n      \"text\": \"Method Not Allowed\",\r\n      \"description\": \"\\\"The method specified in the request-line is known by the origin server but not supported by the target resource.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.5\"\r\n    },\r\n    \"406\": {\r\n      \"code\": 406,\r\n      \"text\": \"Not Acceptable\",\r\n      \"description\": \"\\\"The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.6\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.6\"\r\n    },\r\n    \"407\": {\r\n      \"code\": 407,\r\n      \"text\": \"Proxy Authentication Required\",\r\n      \"description\": \"\\\"The client needs to authenticate itself in order to use a proxy.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.3.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.3.2\"\r\n    },\r\n    \"408\": {\r\n      \"code\": 408,\r\n      \"text\": \"Request Timeout\",\r\n      \"description\": \"\\\"The server did not receive a complete request message within the time that it was prepared to wait.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.7\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.7\"\r\n    },\r\n    \"409\": {\r\n      \"code\": 409,\r\n      \"text\": \"Conflict\",\r\n      \"description\": \"\\\"The request could not be completed due to a conflict with the current state of the resource.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.8\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.8\"\r\n    },\r\n    \"410\": {\r\n      \"code\": 410,\r\n      \"text\": \"Gone\",\r\n      \"description\": \"\\\"Access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.9\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.9\"\r\n    },\r\n    \"411\": {\r\n      \"code\": 411,\r\n      \"text\": \"Length Required\",\r\n      \"description\": \"\\\"The server refuses to accept the request without a defined Content-Length.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.10\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.10\"\r\n    },\r\n    \"412\": {\r\n      \"code\": 412,\r\n      \"text\": \"Precondition Failed\",\r\n      \"description\": \"\\\"One or more preconditions given in the request header fields evaluated to false when tested on the server.\\\"\",\r\n      \"spec_title\": \"RFC7232#4.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7232#section-4.2\"\r\n    },\r\n    \"413\": {\r\n      \"code\": 413,\r\n      \"text\": \"Payload Too Large\",\r\n      \"description\": \"\\\"The server is refusing to process a request because the request payload is larger than the server is willing or able to process.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.11\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.11\"\r\n    },\r\n    \"414\": {\r\n      \"code\": 414,\r\n      \"text\": \"URI Too Long\",\r\n      \"description\": \"\\\"The server is refusing to service the request because the request-target is longer than the server is willing to interpret.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.12\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.12\"\r\n    },\r\n    \"415\": {\r\n      \"code\": 415,\r\n      \"text\": \"Unsupported Media Type\",\r\n      \"description\": \"\\\"The origin server is refusing to service the request because the payload is in a format not supported by the target resource for this method.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.13\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.13\"\r\n    },\r\n    \"416\": {\r\n      \"code\": 416,\r\n      \"text\": \"Range Not Satisfiable\",\r\n      \"description\": \"\\\"None of the ranges in the request's Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges.\\\"\",\r\n      \"spec_title\": \"RFC7233#4.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7233#section-4.4\"\r\n    },\r\n    \"417\": {\r\n      \"code\": 417,\r\n      \"text\": \"Expectation Failed\",\r\n      \"description\": \"\\\"The expectation given in the request's Expect header field could not be met by at least one of the inbound servers.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.14\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.14\"\r\n    },\r\n    \"418\": {\r\n      \"code\": 418,\r\n      \"text\": \"I'm a teapot\",\r\n      \"description\": \"\\\"1988 April Fools Joke. Returned by tea pots requested to brew coffee.\\\"\",\r\n      \"spec_title\": \"RFC 2324\",\r\n      \"spec_href\": \"https://tools.ietf.org/html/rfc2324\"\r\n    },\r\n    \"426\": {\r\n      \"code\": 426,\r\n      \"text\": \"Upgrade Required\",\r\n      \"description\": \"\\\"The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.5.15\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.5.15\"\r\n    },\r\n    \"500\": {\r\n      \"code\": 500,\r\n      \"text\": \"Internal Server Error\",\r\n      \"description\": \"\\\"The server encountered an unexpected condition that prevented it from fulfilling the request.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.1\"\r\n    },\r\n    \"501\": {\r\n      \"code\": 501,\r\n      \"text\": \"Not Implemented\",\r\n      \"description\": \"\\\"The server does not support the functionality required to fulfill the request.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.2\"\r\n    },\r\n    \"502\": {\r\n      \"code\": 502,\r\n      \"text\": \"Bad Gateway\",\r\n      \"description\": \"\\\"The server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.3\"\r\n    },\r\n    \"503\": {\r\n      \"code\": 503,\r\n      \"text\": \"Service Unavailable\",\r\n      \"description\": \"\\\"The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.4\"\r\n    },\r\n    \"504\": {\r\n      \"code\": 504,\r\n      \"text\": \"Gateway Time-out\",\r\n      \"description\": \"\\\"The server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.5\"\r\n    },\r\n    \"505\": {\r\n      \"code\": 505,\r\n      \"text\": \"HTTP Version Not Supported\",\r\n      \"description\": \"\\\"The server does not support, or refuses to support, the protocol version that was used in the request message.\\\"\",\r\n      \"spec_title\": \"RFC7231#6.6.6\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7231#section-6.6.6\"\r\n    },\r\n    \"102\": {\r\n      \"code\": 102,\r\n      \"text\": \"Processing\",\r\n      \"description\": \"\\\"An interim response to inform the client that the server has accepted the complete request, but has not yet completed it.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.1\"\r\n    },\r\n    \"207\": {\r\n      \"code\": 207,\r\n      \"text\": \"Multi-Status\",\r\n      \"description\": \"\\\"Status for multiple independent operations.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.2\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.2\"\r\n    },\r\n    \"226\": {\r\n      \"code\": 226,\r\n      \"text\": \"IM Used\",\r\n      \"description\": \"\\\"The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\\\"\",\r\n      \"spec_title\": \"RFC3229#10.4.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc3229#section-10.4.1\"\r\n    },\r\n    \"308\": {\r\n      \"code\": 308,\r\n      \"text\": \"Permanent Redirect\",\r\n      \"description\": \"\\\"The target resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. [...] This status code is similar to 301 Moved Permanently (Section 7.3.2 of rfc7231), except that it does not allow rewriting the request method from POST to GET.\\\"\",\r\n      \"spec_title\": \"RFC7238\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc7238\"\r\n    },\r\n    \"422\": {\r\n      \"code\": 422,\r\n      \"text\": \"Unprocessable Entity\",\r\n      \"description\": \"\\\"The server understands the content type of the request entity (hence a 415(Unsupported Media Type) status code is inappropriate), and the syntax of the request entity is correct (thus a 400 (Bad Request) status code is inappropriate) but was unable to process the contained instructions.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.3\"\r\n    },\r\n    \"423\": {\r\n      \"code\": 423,\r\n      \"text\": \"Locked\",\r\n      \"description\": \"\\\"The source or destination resource of a method is locked.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.4\"\r\n    },\r\n    \"424\": {\r\n      \"code\": 424,\r\n      \"text\": \"Failed Dependency\",\r\n      \"description\": \"\\\"The method could not be performed on the resource because the requested action depended on another action and that action failed.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.5\"\r\n    },\r\n    \"428\": {\r\n      \"code\": 428,\r\n      \"text\": \"Precondition Required\",\r\n      \"description\": \"\\\"The origin server requires the request to be conditional.\\\"\",\r\n      \"spec_title\": \"RFC6585#3\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc6585#section-3\"\r\n    },\r\n    \"429\": {\r\n      \"code\": 429,\r\n      \"text\": \"Too Many Requests\",\r\n      \"description\": \"\\\"The user has sent too many requests in a given amount of time (\\\"rate limiting\\\").\\\"\",\r\n      \"spec_title\": \"RFC6585#4\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc6585#section-4\"\r\n    },\r\n    \"431\": {\r\n      \"code\": 431,\r\n      \"text\": \"Request Header Fields Too Large\",\r\n      \"description\": \"\\\"The server is unwilling to process the request because its header fields are too large.\\\"\",\r\n      \"spec_title\": \"RFC6585#5\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc6585#section-5\"\r\n    },\r\n    \"451\": {\r\n      \"code\": 451,\r\n      \"text\": \"Unavailable For Legal Reasons\",\r\n      \"description\": \"\\\"The server is denying access to the resource in response to a legal demand.\\\"\",\r\n      \"spec_title\": \"draft-ietf-httpbis-legally-restricted-status\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/draft-ietf-httpbis-legally-restricted-status\"\r\n    },\r\n    \"506\": {\r\n      \"code\": 506,\r\n      \"text\": \"Variant Also Negotiates\",\r\n      \"description\": \"\\\"The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process.\\\"\",\r\n      \"spec_title\": \"RFC2295#8.1\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2295#section-8.1\"\r\n    },\r\n    \"507\": {\r\n      \"code\": 507,\r\n      \"text\": \"Insufficient Storage\",\r\n      \"description\": \"\\The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request.\\\"\",\r\n      \"spec_title\": \"RFC5218#10.6\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc2518#section-10.6\"\r\n    },\r\n    \"511\": {\r\n      \"code\": 511,\r\n      \"text\": \"Network Authentication Required\",\r\n      \"description\": \"\\\"The client needs to authenticate to gain network access.\\\"\",\r\n      \"spec_title\": \"RFC6585#6\",\r\n      \"spec_href\": \"http://tools.ietf.org/html/rfc6585#section-6\"\r\n    }\r\n  };\r\n","import { Inject, OpaqueToken, Optional } from '@angular/core';\r\nimport { BaseResponseOptions, Connection, Headers, ReadyState, Request, RequestMethod,\r\n         Response, ResponseOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer }   from 'rxjs/Observer';\r\nimport 'rxjs/add/operator/delay';\r\n\r\nimport { STATUS, STATUS_CODE_INFO } from './http-status-codes';\r\n\r\n/**\r\n* Class that creates seed data for in-memory database\r\n* Must implement InMemoryDbService.\r\n*/\r\nexport const SEED_DATA = new OpaqueToken('seedData');\r\n\r\n/**\r\n* Interface for a class that creates an in-memory database\r\n* Safe for consuming service to morph arrays and objects.\r\n*/\r\nexport interface InMemoryDbService {\r\n  /**\r\n  * Creates \"database\" object hash whose keys are collection names\r\n  * and whose values are arrays of the collection objects.\r\n  *\r\n  * It must be safe to call again and should return new arrays with new objects.\r\n  * This condition allows InMemoryBackendService to morph the arrays and objects\r\n  * without touching the original source data.\r\n  */\r\n  createDb(): {};\r\n}\r\n\r\n/**\r\n* Interface for InMemoryBackend configuration options\r\n*/\r\nexport interface InMemoryBackendConfigArgs {\r\n  /**\r\n   * default response options\r\n   */\r\n  defaultResponseOptions?: ResponseOptions;\r\n  /**\r\n   * delay (in ms) to simulate latency\r\n   */\r\n  delay?: number;\r\n  /**\r\n   * false (default) if ok when object-to-delete not found; else 404\r\n   */\r\n  delete404?: boolean;\r\n  /**\r\n   * host for this service\r\n   */\r\n  host?: string;\r\n  /**\r\n   * root path before any API call\r\n   */\r\n  rootPath?: string;\r\n}\r\n\r\n/**\r\n*  InMemoryBackendService configuration options\r\n*  Usage:\r\n*    provide(InMemoryBackendConfig, {useValue: {delay:600}}),\r\n*/\r\nexport class InMemoryBackendConfig implements InMemoryBackendConfigArgs {\r\n  constructor(config: InMemoryBackendConfigArgs = {}) {\r\n    Object.assign(this, {\r\n      defaultResponseOptions: new BaseResponseOptions(),\r\n      delay: 500,\r\n      delete404: false\r\n    }, config);\r\n  }\r\n}\r\n\r\n/**\r\n* Interface for object w/ info about the current request url\r\n* extracted from an Http Request\r\n*/\r\nexport interface ReqInfo {\r\n  req: Request;\r\n  base: string;\r\n  collection: any[];\r\n  collectionName: string;\r\n  headers: Headers;\r\n  id: any;\r\n  query: URLSearchParams;\r\n  resourceUrl: string;\r\n}\r\n\r\nexport const isSuccess = (status: number): boolean => (status >= 200 && status < 300);\r\n\r\n/**\r\n * Simulate the behavior of a RESTy web api\r\n * backed by the simple in-memory data store provided by the injected InMemoryDataService service.\r\n * Conforms mostly to behavior described here:\r\n * http://www.restapitutorial.com/lessons/httpmethods.html\r\n *\r\n * ### Usage\r\n *\r\n * Create InMemoryDataService class the implements InMemoryDataService.\r\n * Register both this service and the seed data as in:\r\n * ```\r\n * // other imports\r\n * import { HTTPPROVIDERS, XHRBackend } from 'angular2/http';\r\n * import { InMemoryBackendConfig, InMemoryBackendService, SEEDDATA } from '../in-memory-backend/in-memory-backend.service';\r\n * import { InMemoryStoryService } from '../api/in-memory-story.service';\r\n *\r\n * @Component({\r\n *   selector: ...,\r\n *   templateUrl: ...,\r\n *   providers: [\r\n *     HTTPPROVIDERS,\r\n *     provide(XHRBackend, { useClass: InMemoryBackendService }),\r\n *     provide(SEEDDATA, { useClass: InMemoryStoryService }),\r\n *     provide(InMemoryBackendConfig, { useValue: { delay: 600 } }),\r\n *   ]\r\n * })\r\n * export class AppComponent { ... }\r\n * ```\r\n */\r\n\r\nexport class InMemoryBackendService {\r\n\r\n  protected config: InMemoryBackendConfigArgs = new InMemoryBackendConfig();\r\n  protected db: {};\r\n\r\n  constructor(\r\n    @Inject(SEED_DATA) private seedData: InMemoryDbService,\r\n    @Inject(InMemoryBackendConfig) @Optional() config: InMemoryBackendConfigArgs) {\r\n    this.resetDb();\r\n\r\n    let loc = this.getLocation('./');\r\n    this.config.host = loc.host;\r\n    this.config.rootPath = loc.pathname;\r\n    Object.assign(this.config, config);\r\n  }\r\n\r\n  createConnection(req: Request): Connection {\r\n    let res = this.handleRequest(req);\r\n\r\n    let response = new Observable<Response>((responseObserver: Observer<Response>) => {\r\n      if (isSuccess(res.status)) {\r\n        responseObserver.next(res);\r\n        responseObserver.complete();\r\n      } else {\r\n        responseObserver.error(res);\r\n      }\r\n      return () => { }; // unsubscribe function\r\n    });\r\n\r\n    response = response.delay(this.config.delay || 500);\r\n    return {\r\n      readyState: ReadyState.Done,\r\n      request: req,\r\n      response\r\n    };\r\n  }\r\n\r\n  ////  protected /////\r\n\r\n  /**\r\n   * Process Request and return an Http Response object\r\n   * in the manner of a RESTy web api.\r\n   *\r\n   * Expect URI pattern in the form :base/:collectionName/:id?\r\n   * Examples:\r\n   *   // for store with a 'characters' collection\r\n   *   GET api/characters          // all characters\r\n   *   GET api/characters/42       // the character with id=42\r\n   *   GET api/characters?name=^j  // 'j' is a regex; returns characters whose name contains 'j' or 'J'\r\n   *   GET api/characters.json/42  // ignores the \".json\"\r\n   *\r\n   *   POST commands/resetDb  // resets the \"database\"\r\n   */\r\n  protected handleRequest(req: Request) {\r\n    let {base, collectionName, id, resourceUrl, query} = this.parseUrl(req.url);\r\n    let collection = this.db[collectionName];\r\n    let reqInfo: ReqInfo = {\r\n      req: req,\r\n      base: base,\r\n      collection: collection,\r\n      collectionName: collectionName,\r\n      headers: new Headers({ 'Content-Type': 'application/json' }),\r\n      id: this.parseId(collection, id),\r\n      query: query,\r\n      resourceUrl: resourceUrl\r\n    };\r\n\r\n    let options: ResponseOptions;\r\n\r\n    try {\r\n      if ('commands' === reqInfo.base.toLowerCase()) {\r\n        options = this.commands(reqInfo);\r\n\r\n      } else if (reqInfo.collection) {\r\n        switch (req.method) {\r\n          case RequestMethod.Get:\r\n            options = this.get(reqInfo);\r\n            break;\r\n          case RequestMethod.Post:\r\n            options = this.post(reqInfo);\r\n            break;\r\n          case RequestMethod.Put:\r\n            options = this.put(reqInfo);\r\n            break;\r\n          case RequestMethod.Delete:\r\n            options = this.delete(reqInfo);\r\n            break;\r\n          default:\r\n            options = this.createErrorResponse(STATUS.METHOD_NOT_ALLOWED, 'Method not allowed');\r\n            break;\r\n        }\r\n\r\n      } else {\r\n        options = this.createErrorResponse(STATUS.NOT_FOUND, `Collection '${collectionName}' not found`);\r\n      }\r\n\r\n    } catch (error) {\r\n      let err = error.message || error;\r\n      options = this.createErrorResponse(STATUS.INTERNAL_SERVER_ERROR, `${err}`);\r\n    }\r\n\r\n    options = this.setStatusText(options);\r\n    if (this.config.defaultResponseOptions) {\r\n      options = this.config.defaultResponseOptions.merge(options);\r\n    }\r\n\r\n    return new Response(options);\r\n  }\r\n\r\n  /**\r\n   * Apply query/search parameters as a filter over the collection\r\n   * This impl only supports RegExp queries on string properties of the collection\r\n   * ANDs the conditions together\r\n   */\r\n  protected applyQuery(collection: any[], query: URLSearchParams) {\r\n    // extract filtering conditions - {propertyName, RegExps) - from query/search parameters\r\n    let conditions: {name: string, rx: RegExp}[] = [];\r\n    query.paramsMap.forEach((value: string[], name: string) => {\r\n      value.forEach(v => conditions.push({name, rx: new RegExp(decodeURI(v), 'i')}));\r\n    });\r\n\r\n    let len = conditions.length;\r\n    if (!len) { return collection; }\r\n\r\n    // AND the RegExp conditions\r\n    return collection.filter(row => {\r\n      let ok = true;\r\n      let i = len;\r\n      while (ok && i) {\r\n        i -= 1;\r\n        let cond = conditions[i];\r\n        ok = cond.rx.test(row[cond.name]);\r\n      }\r\n      return ok;\r\n    });\r\n  }\r\n\r\n  protected clone(data: any) {\r\n    return JSON.parse(JSON.stringify(data));\r\n  }\r\n\r\n  /**\r\n   * When the `base`=\"commands\", the `collectionName` is the command\r\n   * Example URLs:\r\n   *   commands/resetdb   // Reset the \"database\" to its original state\r\n   *   commands/config (GET) // Return this service's config object\r\n   *   commands/config (!GET) // Update the config (e.g. delay)\r\n   *\r\n   * Usage:\r\n   *   http.post('commands/resetdb', null);\r\n   *   http.get('commands/config');\r\n   *   http.post('commands/config', '{\"delay\":1000}');\r\n   */\r\n  protected commands(reqInfo: ReqInfo) {\r\n    let command = reqInfo.collectionName.toLowerCase();\r\n    let method = reqInfo.req.method;\r\n    let options: ResponseOptions;\r\n\r\n    switch (command) {\r\n      case 'resetdb':\r\n        this.resetDb();\r\n        options = new ResponseOptions({ status: STATUS.OK });\r\n        break;\r\n      case 'config':\r\n        if (method === RequestMethod.Get) {\r\n          options = new ResponseOptions({\r\n            body: this.clone(this.config),\r\n            status: STATUS.OK\r\n          });\r\n        } else {\r\n          // Be nice ... any other method is a config update\r\n          let body = JSON.parse(<string>reqInfo.req.text() || '{}');\r\n          Object.assign(this.config, body);\r\n          options = new ResponseOptions({ status: STATUS.NO_CONTENT });\r\n        }\r\n        break;\r\n      default:\r\n        options = this.createErrorResponse(\r\n          STATUS.INTERNAL_SERVER_ERROR, `Unknown command \"${command}\"`);\r\n    }\r\n    return options;\r\n  }\r\n\r\n  protected createErrorResponse(status: number, message: string) {\r\n    return new ResponseOptions({\r\n      body: { 'error': `${message}` },\r\n      headers: new Headers({ 'Content-Type': 'application/json' }),\r\n      status: status\r\n    });\r\n  }\r\n\r\n  protected delete({id, collection, collectionName, headers /*, req */}: ReqInfo) {\r\n    if (!id) {\r\n      return this.createErrorResponse(STATUS.NOT_FOUND, `Missing \"${collectionName}\" id`);\r\n    }\r\n    let exists = this.removeById(collection, id);\r\n    return new ResponseOptions({\r\n      headers: headers,\r\n      status: (exists || !this.config.delete404) ? STATUS.NO_CONTENT : STATUS.NOT_FOUND\r\n    });\r\n  }\r\n\r\n  protected findById(collection: any[], id: number | string) {\r\n    return collection.find((item: any) => item.id === id);\r\n  }\r\n\r\n  protected genId(collection: any): any {\r\n    // assumes numeric ids\r\n    let maxId = 0;\r\n    collection.reduce((prev: any, item: any) => {\r\n      maxId = Math.max(maxId, typeof item.id === 'number' ? item.id : maxId);\r\n    }, null);\r\n    return maxId + 1;\r\n  }\r\n\r\n  protected get({id, query, collection, collectionName, headers}: ReqInfo) {\r\n    let data = collection;\r\n\r\n    if (id) {\r\n      data = this.findById(collection, id);\r\n    } else if (query) {\r\n      data = this.applyQuery(collection, query);\r\n    }\r\n\r\n    if (!data) {\r\n      return this.createErrorResponse(STATUS.NOT_FOUND,\r\n        `'${collectionName}' with id='${id}' not found`);\r\n    }\r\n    return new ResponseOptions({\r\n      body: { data: this.clone(data) },\r\n      headers: headers,\r\n      status: STATUS.OK\r\n    });\r\n  }\r\n\r\n  protected getLocation(href: string) {\r\n    let l = document.createElement('a');\r\n    l.href = href;\r\n    return l;\r\n  };\r\n\r\n  protected indexOf(collection: any[], id: number) {\r\n    return collection.findIndex((item: any) => item.id === id);\r\n  }\r\n\r\n  // tries to parse id as number if collection item.id is a number.\r\n  // returns the original param id otherwise.\r\n  protected parseId(collection: {id: any}[], id: string): any {\r\n    if (!id) { return null; }\r\n    let isNumberId =  collection[0] && typeof collection[0].id === 'number';\r\n    if (isNumberId) {\r\n      let idNum = parseFloat(id);\r\n      return isNaN(idNum) ? id : idNum;\r\n    }\r\n    return id;\r\n  }\r\n\r\n  protected parseUrl(url: string) {\r\n    try {\r\n      let loc = this.getLocation(url);\r\n      let drop = this.config.rootPath.length;\r\n      let urlRoot = '';\r\n      if (loc.host !== this.config.host) {\r\n        // url for a server on a different host!\r\n        // assume it's collection is actually here too.\r\n        drop = 1; // the leading slash\r\n        urlRoot = loc.protocol + '//' + loc.host + '/';\r\n      }\r\n      let path = loc.pathname.substring(drop);\r\n      let [base, collectionName, id] = path.split('/');\r\n      let resourceUrl = urlRoot + base + '/' + collectionName + '/';\r\n      [collectionName] = collectionName.split('.'); // ignore anything after the '.', e.g., '.json'\r\n      let query = loc.search && new URLSearchParams(loc.search.substr(1));\r\n      return { base, id, collectionName, resourceUrl, query };\r\n    } catch (err) {\r\n      let msg = `unable to parse url '${url}'; original error: ${err.message}`;\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  protected post({collection, /* collectionName, */ headers, id, req, resourceUrl}: ReqInfo) {\r\n    let item = JSON.parse(<string>req.text());\r\n    if (!item.id) {\r\n      item.id = id || this.genId(collection);\r\n    }\r\n    // ignore the request id, if any. Alternatively,\r\n    // could reject request if id differs from item.id\r\n    id = item.id;\r\n    let existingIx = this.indexOf(collection, id);\r\n    if (existingIx > -1) {\r\n      collection[existingIx] = item;\r\n      return new ResponseOptions({\r\n        headers: headers,\r\n        status: STATUS.NO_CONTENT\r\n      });\r\n    } else {\r\n      collection.push(item);\r\n      headers.set('Location', resourceUrl + '/' + id);\r\n      return new ResponseOptions({\r\n        headers: headers,\r\n        body: { data: this.clone(item) },\r\n        status: STATUS.CREATED\r\n      });\r\n    }\r\n  }\r\n\r\n  protected put({id, collection, collectionName, headers, req}: ReqInfo) {\r\n    let item = JSON.parse(<string>req.text());\r\n    if (!id) {\r\n      return this.createErrorResponse(STATUS.NOT_FOUND, `Missing '${collectionName}' id`);\r\n    }\r\n    if (id !== item.id) {\r\n      return this.createErrorResponse(STATUS.BAD_REQUEST,\r\n        `\"${collectionName}\" id does not match item.id`);\r\n    }\r\n    let existingIx = this.indexOf(collection, id);\r\n    if (existingIx > -1) {\r\n      collection[existingIx] = item;\r\n      return new ResponseOptions({\r\n        headers: headers,\r\n        status: STATUS.NO_CONTENT // successful; no content\r\n      });\r\n    } else {\r\n      collection.push(item);\r\n      return new ResponseOptions({\r\n        body: { data: this.clone(item) },\r\n        headers: headers,\r\n        status: STATUS.CREATED\r\n      });\r\n    }\r\n  }\r\n\r\n  protected removeById(collection: any[], id: number) {\r\n    let ix = this.indexOf(collection, id);\r\n    if (ix > -1) {\r\n      collection.splice(ix, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Reset the \"database\" to its original state\r\n   */\r\n  protected resetDb() {\r\n    this.db = this.seedData.createDb();\r\n  }\r\n\r\n  protected setStatusText(options: ResponseOptions) {\r\n    try {\r\n      let statusCode = STATUS_CODE_INFO[options.status];\r\n      options['statusText'] = statusCode ? statusCode.text : 'Unknown Status';\r\n      return options;\r\n    } catch (err) {\r\n      return new ResponseOptions({\r\n        status: STATUS.INTERNAL_SERVER_ERROR,\r\n        statusText: 'Invalid Server Operation'\r\n      });\r\n    }\r\n  }\r\n}\r\n","export * from './http-status-codes';\r\nexport * from './in-memory-backend.service';\r\n\r\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\r\nimport { HttpModule, XHRBackend }              from '@angular/http';\r\n\r\nimport {\r\n  InMemoryBackendConfigArgs,\r\n  InMemoryBackendConfig,\r\n  InMemoryBackendService,\r\n  InMemoryDbService,\r\n  SEED_DATA\r\n} from './in-memory-backend.service';\r\n\r\n@NgModule({})\r\nexport class InMemoryWebApiModule {\r\n  /**\r\n  *  Prepare in-memory-web-api in the root/boot application module\r\n  *  with class that implements InMemoryDbService and creates an in-memory database.\r\n  *\r\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n  * @param {InMemoryBackendConfigArgs} [options]\r\n  *\r\n  * @example\r\n  * InMemoryWebApiModule.forRoot(dbCreator);\r\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n  */\r\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders {\r\n\r\n    let providers: any[] = [\r\n        { provide: XHRBackend, useClass: InMemoryBackendService },\r\n        { provide: SEED_DATA,  useClass: dbCreator }\r\n    ];\r\n\r\n    if (options) {\r\n      providers.push({provide: InMemoryBackendConfig, useValue: options})\r\n    }\r\n\r\n    return {\r\n      ngModule: InMemoryWebApiModule,\r\n      providers: providers\r\n    };\r\n  }\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport var errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const { _unsubscribe, _subscriptions } = (<any> this);\n\n    (<any> this)._subscriptions = null;\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        (errors = errors || []).push(errorObject.e);\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      let index = -1;\n      const len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(err.errors);\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let sub = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        sub = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (sub.closed || typeof sub.unsubscribe !== 'function') {\n          break;\n        } else if (this.closed) {\n          sub.unsubscribe();\n        } else {\n          ((<any> this)._subscriptions || ((<any> this)._subscriptions = [])).push(sub);\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    return sub;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n\n    // HACK: This might be redundant because of the logic in `add()`\n    if (subscription == null   || (\n        subscription === this) || (\n        subscription === Subscription.EMPTY)) {\n      return;\n    }\n\n    const subscriptions = (<any> this)._subscriptions;\n\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n","let objectTypes = {\n  'boolean': false,\n  'function': true,\n  'object': true,\n  'number': false,\n  'string': false,\n  'undefined': false\n};\n\ndeclare let global: NodeJS.Global;\ndeclare let module: any;\ndeclare let exports: any;\n\ndeclare module NodeJS {\n  interface Global {\n    window: any;\n    global: any;\n  }\n}\n\nexport let root: any = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n\nlet freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n  root = freeGlobal;\n}\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const $$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [$$rxSubscriber]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parent: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      context = observerOrNext;\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (isFunction(context.unsubscribe)) {\n        this.add(<() => void> context.unsubscribe.bind(context));\n      }\n      context.unsubscribe = this.unsubscribe.bind(this);\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parent } = this;\n      if (!_parent.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parent, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._error) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parent.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parent.syncErrorValue = err;\n        _parent.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._complete) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._complete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._complete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parent } = this;\n    this._context = null;\n    this._parent = null;\n    _parent.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { TeardownLogic } from './Subscription';\n\nexport interface Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): TeardownLogic;\n}\n","import { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { $$rxSubscriber } from '../symbol/rxSubscriber';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[$$rxSubscriber]) {\n      return nextOrObserver[$$rxSubscriber]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber();\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from '../util/root';\n\nexport let $$iterator: any;\n\nconst Symbol: any = root.Symbol;\n\nif (typeof Symbol === 'function') {\n  if (Symbol.iterator) {\n    $$iterator = Symbol.iterator;\n  } else if (typeof Symbol.for === 'function') {\n    $$iterator = Symbol.for('iterator');\n  }\n} else {\n    if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {\n      // Bug for mozilla version\n      $$iterator = '@@iterator';\n    } else if (root.Map) {\n      // es6-shim specific logic\n      let keys = Object.getOwnPropertyNames(root.Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        if (key !== 'entries' && key !== 'size' && root.Map.prototype[key] === root.Map.prototype['entries']) {\n          $$iterator = key;\n          break;\n        }\n      }\n    } else {\n      $$iterator = '@@iterator';\n    }\n}","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const $$observable = getSymbolObservable(root);","import { root } from './root';\nimport { isArray } from './isArray';\nimport { isPromise } from './isPromise';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { $$iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { $$observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      return result.subscribe(destination);\n    }\n  }\n\n  if (isArray(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (typeof result[$$iterator] === 'function') {\n    const iterator = <any>result[$$iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (typeof result[$$observable] === 'function') {\n    const obs = result[$$observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new Error('invalid observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    destination.error(new TypeError('unknown type returned'));\n  }\n  return null;\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IfObservable<T, R> extends Observable<T> {\n\n  static create<T, R>(condition: () => boolean | void,\n                      thenSource?: SubscribableOrPromise<T> | void,\n                      elseSource?: SubscribableOrPromise<R> | void): Observable<T|R> {\n    return new IfObservable(condition, thenSource, elseSource);\n  }\n\n  constructor(private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T|R>): TeardownLogic {\n    const { condition, thenSource, elseSource } = this;\n\n    return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n  }\n}\n\nclass IfSubscriber<T, R> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super(destination);\n    this.tryIf();\n  }\n\n  private tryIf(): void {\n    const { condition, thenSource, elseSource } = this;\n\n    let result: boolean;\n    try {\n      result = <boolean>condition();\n      const source = result ? thenSource : elseSource;\n\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      } else {\n        this._complete();\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg {\n  error: any;\n  subscriber: any;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ErrorObservable extends Observable<any> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits an error notification.\n   *\n   * <span class=\"informal\">Just emits 'error', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/throw.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the error notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then emit an error.</caption>\n   * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x === 13 ?\n   *     Rx.Observable.throw('Thirteens are bad') :\n   *     Rx.Observable.of('a', 'b', 'c')\n   * );\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   *\n   * @param {any} error The particular Error to pass to the error notification.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emission of the error notification.\n   * @return {Observable} An error Observable: emits only the error notification\n   * using the given error argument.\n   * @static true\n   * @name throw\n   * @owner Observable\n   */\n  static create<T>(error: any, scheduler?: Scheduler) {\n    return new ErrorObservable(error, scheduler);\n  }\n\n  static dispatch(arg: DispatchArg) {\n    const { error, subscriber } = arg;\n    subscriber.error(error);\n  }\n\n  constructor(public error: any, private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: any): TeardownLogic {\n    const error = this.error;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ErrorObservable.dispatch, 0, {\n        error, subscriber\n      });\n    } else {\n      subscriber.error(error);\n    }\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { $$observable } from './symbol/observable';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | Promise<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is  called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  /**\n   * Registers handlers for handling emitted values, error and completions from the observable, and\n   *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n   * @method subscribe\n   * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n   * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled\n   * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this);\n    } else {\n      sink.add(this._subscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      const subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [$$observable]() {\n    return this;\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [$$rxSubscriber]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  lift<T, R>(operator: Operator<T, R>): Observable<T> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    }\n\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  if (typeof project !== 'function') {\n    throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n  }\n  return this.lift(new MapOperator(project, thisArg));\n}\n\nexport interface MapSignature<T> {\n  <R>(project: (value: T, index: number) => R, thisArg?: any): Observable<R>;\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { MapOperator } from '../../operator/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    const xhr = new root.XMLHttpRequest();\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = !!this.withCredentials;\n    }\n    return xhr;\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T, R>(url: string, headers?: Object): Observable<R>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, responseType: 'json', headers })\n    .lift<T>(new MapOperator<AjaxResponse, T>((x: AjaxResponse, index: number): T => x.response, null));\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function() {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // open XHR first\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout and responseType can be set once the XHR is open\n      xhr.timeout = request.timeout;\n      xhr.responseType = request.responseType;\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // now set up the events\n      this.setupEvents(xhr, request);\n\n      // finally send the request\n      if (body) {\n        xhr.send(body);\n      } else {\n        xhr.send();\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURI(key)}=${encodeURI(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    xhr.ontimeout = function xhrTimeout(e) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    (<any>xhr.ontimeout).request = request;\n    (<any>xhr.ontimeout).subscriber = this;\n    (<any>xhr.ontimeout).progressSubscriber = progressSubscriber;\n\n    if (xhr.upload && 'withCredentials' in xhr && root.XDomainRequest) {\n      if (progressSubscriber) {\n        xhr.onprogress = function xhrProgress(e) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        (<any>xhr.onprogress).progressSubscriber = progressSubscriber;\n      }\n\n      xhr.onerror = function xhrError(e) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      (<any>xhr.onerror).request = request;\n      (<any>xhr.onerror).subscriber = this;\n      (<any>xhr.onerror).progressSubscriber = progressSubscriber;\n    }\n\n    xhr.onreadystatechange = function xhrReadyStateChange(e) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    (<any>xhr.onreadystatechange).subscriber = this;\n    (<any>xhr.onreadystatechange).progressSubscriber = progressSubscriber;\n    (<any>xhr.onreadystatechange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n\n    switch (this.responseType) {\n      case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          this.response = JSON.parse(xhr.responseText || 'null');\n        }\n        break;\n      case 'xml':\n        this.response = xhr.responseXML;\n        break;\n      case 'text':\n      default:\n        this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n        break;\n    }\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n","import { Subscriber } from '../../Subscriber';\nimport { AjaxResponse } from './AjaxObservable';\n\n/**\n * @see {@link ajax}\n *\n * @interface\n * @name AjaxRequest\n * @noimport true\n */\nexport class AjaxRequestDoc {\n  /**\n   * @type {string}\n   */\n  url: string = '';\n  /**\n   * @type {number}\n   */\n  body: any = 0;\n  /**\n   * @type {string}\n   */\n  user: string = '';\n  /**\n   * @type {boolean}\n   */\n  async: boolean = false;\n  /**\n   * @type {string}\n   */\n  method: string = '';\n  /**\n   * @type {Object}\n   */\n  headers: Object = null;\n  /**\n   * @type {number}\n   */\n  timeout: number = 0;\n  /**\n   * @type {string}\n   */\n  password: string = '';\n  /**\n   * @type {boolean}\n   */\n  hasContent: boolean = false;\n  /**\n   * @type {boolean}\n   */\n  crossDomain: boolean = false;\n  /**\n   * @return {XMLHttpRequest}\n   */\n  createXHR(): XMLHttpRequest {\n    return null;\n  }\n  /**\n   * @type {Subscriber}\n   */\n  progressSubscriber: Subscriber<any> = null;\n  /**\n   * @param {AjaxResponse} response\n   * @return {T}\n   */\n  resultSelector<T>(response: AjaxResponse): T {\n    return null;\n  }\n  /**\n   * @type {string}\n   */\n  responseType: string = '';\n}\n","/*\n * This file and its definitions are needed just so that ESDoc sees these\n * JSDoc documentation comments. Originally they were meant for some TypeScript\n * interfaces, but TypeScript strips away JSDoc comments near interfaces. Hence,\n * we need these bogus classes, which are not stripped away. This file on the\n * other hand, is not included in the release bundle.\n */\nimport { Subscriber } from './Subscriber';\nimport { TeardownLogic } from './Subscription';\nimport { Observable } from './Observable';\nimport './scheduler/MiscJSDoc';\nimport './observable/dom/MiscJSDoc';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ObservableDoc {\n  /**\n   * Creates a new Observable that will execute the specified function when a\n   * {@link Subscriber} subscribes to it.\n   *\n   * <span class=\"informal\">Creates an Observable with custom logic given in\n   * the `subscribe` function.</span>\n   *\n   * <img src=\"./img/create.png\" width=\"100%\">\n   *\n   * `create` converts a `subscribe` function to an actual Observable. This is\n   * equivalent to calling the Observable constructor. Write the `subscribe`\n   * function so that it behaves as an Observable: It should invoke the\n   * Subscriber's `next`, `error`, and `complete` methods following the\n   * *Observable Contract*. A well-formed Observable must invoke either the\n   * Subscriber's `complete` method exactly once or its `error` method exactly\n   * once, and invoke nothing else thereafter.\n   *\n   * Most of the times you should not need to use `create` because existing\n   * creation operators (together with instance combination operators) allow you\n   * to create an Observable for most of the use cases. However, `create` is\n   * low-level and is able to create any Observable.\n   *\n   * @example <caption>Emit three random numbers, then complete.</caption>\n   * var result = Rx.Observable.create(function (subscriber) {\n   *   subscriber.next(Math.random());\n   *   subscriber.next(Math.random());\n   *   subscriber.next(Math.random());\n   *   subscriber.complete();\n   * });\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {function(subscriber: Subscriber): TeardownLogic} [subscribe] A\n   * function that accepts a {@link Subscriber}, and invokes its `next`,\n   * `error`, and `complete` methods as appropriate, and should return some\n   * logic for tear down, either as a {@link Subscription} or as a function.\n   * @return {Observable} An Observable that, when subscribed, will execute the\n   * specified function.\n   * @static true\n   * @name create\n   * @owner Observable\n   */\n  static create<T>(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic): Observable<T> {\n    return new Observable<T>(subscribe);\n  };\n}\n\n/**\n * An interface for a consumer of push-based notifications delivered by an\n * {@link Observable}.\n *\n * ```ts\n * interface Observer<T> {\n *   closed?: boolean;\n *   next: (value: T) => void;\n *   error: (err: any) => void;\n *   complete: () => void;\n * }\n * ```\n *\n * An object conforming to the Observer interface is usually\n * given to the `observable.subscribe(observer)` method, and the Observable will\n * call the Observer's `next(value)` method to provide notifications. A\n * well-behaved Observable will call an Observer's `complete()` method exactly\n * once or the Observer's `error(err)` method exactly once, as the last\n * notification delivered.\n *\n * @interface\n * @name Observer\n * @noimport true\n */\nexport class ObserverDoc<T> {\n  /**\n   * An optional flag to indicate whether this Observer, when used as a\n   * subscriber, has already been unsubscribed from its Observable.\n   * @type {boolean}\n   */\n  closed: boolean = false;\n  /**\n   * The callback to receive notifications of type `next` from the Observable,\n   * with a value. The Observable may call this method 0 or more times.\n   * @param {T} value The `next` value.\n   * @return {void}\n   */\n  next(value: T): void {\n    return void 0;\n  }\n  /**\n   * The callback to receive notifications of type `error` from the Observable,\n   * with an attached {@link Error}. Notifies the Observer that the Observable\n   * has experienced an error condition.\n   * @param {any} err The `error` exception.\n   * @return {void}\n   */\n  error(err: any): void {\n    return void 0;\n  }\n  /**\n   * The callback to receive a valueless notification of type `complete` from\n   * the Observable. Notifies the Observer that the Observable has finished\n   * sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    return void 0;\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public exception?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.exception);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.exception);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.exception);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return this.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` exception.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return this.completeNotification;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.delay = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, enqueue as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Observable } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: Scheduler, delay: number = 0): Observable<T> {\n  return this.lift(new ObserveOnOperator(scheduler, delay));\n}\n\nexport interface ObserveOnSignature<T> {\n  (scheduler: Scheduler, delay?: number): Observable<T>;\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: Scheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: Scheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n     this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,\n                                      this.delay,\n                                      new ObserveOnMessage(notification, this.destination)));\n   }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Scheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operator/observeOn';\n\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: Scheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    return super._subscribe(subscriber);\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<R>(callbackFunc: (callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a callback API to a function that returns an Observable.\n   *\n   * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n   * it will return a function `g` that when called as `g(x)` will output an\n   * Observable.</span>\n   *\n   * `bindCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The output of `bindCallback` is a function that takes the same\n   * parameters as `func`, except the last one (the callback). When the output\n   * function is called with arguments, it will return an Observable where the\n   * results will be delivered to.\n   *\n   * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n   * // Suppose we have jQuery.getJSON('/my/url', callback)\n   * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n   * var result = getJSONAsObservable('/my/url');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindNodeCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a callback as the last parameter.\n   * @param {function} selector A function which takes the arguments from the\n   * callback and maps those a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the callback would deliver.\n   * @static true\n   * @name bindCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: Scheduler): (...args: any[]) => Observable<T> {\n    return (...args: any[]): Observable<T> => {\n      return new BoundCallbackObservable<T>(func, <any>selector, args, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              private scheduler: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n          } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber });\n    }\n  }\n\n  static dispatch<T>(state: { source: BoundCallbackObservable<T>, subscriber: Subscriber<T> }) {\n    const self = (<Subscription><any>this);\n    const { source, subscriber } = state;\n    const { callbackFunc, args, scheduler } = source;\n    let subject = source.subject;\n\n    if (!subject) {\n      subject = source.subject = new AsyncSubject<T>();\n\n      const handler = function handlerFn(...innerArgs: any[]) {\n        const source = (<any>handlerFn).source;\n        const { selector, subject } = source;\n        if (selector) {\n          const result = tryCatch(selector).apply(this, innerArgs);\n          if (result === errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n          } else {\n            self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n          }\n        } else {\n          const value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n          self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        }\n      };\n      // use named function to pass values in without closure\n      (<any>handler).source = source;\n\n      const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n      if (result === errorObject) {\n        subject.error(errorObject.e);\n      }\n    }\n\n    self.add(subject.subscribe(subscriber));\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import {  BoundCallbackObservable  } from './BoundCallbackObservable';\n\nexport const bindCallback = BoundCallbackObservable.create;","import { Observable } from '../../Observable';\nimport { bindCallback as staticBindCallback } from '../../observable/bindCallback';\n\nObservable.bindCallback = staticBindCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindCallback: typeof staticBindCallback;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundNodeCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a Node.js-style callback API to a function that returns an\n   * Observable.\n   *\n   * <span class=\"informal\">It's just like {@link bindCallback}, but the\n   * callback is expected to be of type `callback(error, result)`.</span>\n   *\n   * `bindNodeCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The callback function is expected to follow Node.js conventions,\n   * where the first argument to the callback is an error, while remaining\n   * arguments are the callback result. The output of `bindNodeCallback` is a\n   * function that takes the same parameters as `func`, except the last one (the\n   * callback). When the output function is called with arguments, it will\n   * return an Observable where the results will be delivered to.\n   *\n   * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n   * import * as fs from 'fs';\n   * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n   * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a callback as the last parameter.\n   * @param {function} selector A function which takes the arguments from the\n   * callback and maps those a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the Node.js callback would\n   * deliver.\n   * @static true\n   * @name bindNodeCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: Scheduler): (...args: any[]) => Observable<T> {\n    return (...args: any[]): Observable<T> => {\n      return new BoundNodeCallbackObservable<T>(func, <any>selector, args, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              public scheduler: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          const err = innerArgs.shift();\n\n          if (err) {\n            subject.error(err);\n          } else if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n            } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(dispatch, 0, { source: this, subscriber });\n    }\n  }\n}\n\nfunction dispatch<T>(state: { source: BoundNodeCallbackObservable<T>, subscriber: Subscriber<T> }) {\n  const self = (<Subscription> this);\n  const { source, subscriber } = state;\n  // XXX: cast to `any` to access to the private field in `source`.\n  const { callbackFunc, args, scheduler } = source as any;\n  let subject = source.subject;\n\n  if (!subject) {\n    subject = source.subject = new AsyncSubject<T>();\n\n    const handler = function handlerFn(...innerArgs: any[]) {\n      const source = (<any>handlerFn).source;\n      const { selector, subject } = source;\n      const err = innerArgs.shift();\n\n      if (err) {\n        subject.error(err);\n      } else if (selector) {\n        const result = tryCatch(selector).apply(this, innerArgs);\n        if (result === errorObject) {\n          self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n        } else {\n          self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n        }\n      } else {\n        const value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n        self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n      }\n    };\n    // use named function to pass values in without closure\n    (<any>handler).source = source;\n\n    const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n    if (result === errorObject) {\n      subject.error(errorObject.e);\n    }\n  }\n\n  self.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import {  BoundNodeCallbackObservable  } from './BoundNodeCallbackObservable';\n\nexport const bindNodeCallback = BoundNodeCallbackObservable.create;","import { Observable } from '../../Observable';\nimport { bindNodeCallback as staticBindNodeCallback } from '../../observable/bindNodeCallback';\n\nObservable.bindNodeCallback = staticBindNodeCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindNodeCallback: typeof staticBindNodeCallback;\n  }\n}","import { Scheduler } from '../Scheduler';\nexport function isScheduler<T>(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: Scheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: Scheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: Scheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: Scheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(...array: Array<T | Scheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` Scheduler, which means the `next`\n   * notifications are sent synchronously, although with a different Scheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | Scheduler>): Observable<T> {\n    let scheduler = <Scheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: Scheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nconst none = {};\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <any>observables[0];\n  }\n\n  observables.unshift(this);\n\n  return new ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\n\n/* tslint:disable:max-line-length */\nexport interface CombineLatestSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\n  <R>(array: ObservableInput<T>[]): Observable<Array<T>>;\n  <TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import {  Observable, ObservableInput  } from '../Observable';\nimport {  Scheduler  } from '../Scheduler';\nimport {  isScheduler  } from '../util/isScheduler';\nimport {  isArray  } from '../util/isArray';\nimport {  ArrayObservable  } from './ArrayObservable';\nimport {  CombineLatestOperator  } from '../operator/combineLatest';\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T, R>(v1: ObservableInput<T>, project: (v1: T) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: Scheduler): Observable<R>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: Scheduler): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | Scheduler>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | Scheduler>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | Scheduler>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    Scheduler>): Observable<R> {\n  let project: (...values: Array<any>) => R =  null;\n  let scheduler: Scheduler = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <Scheduler>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator<T, R>(project));\n}","import { Observable } from '../../Observable';\nimport { combineLatest as combineLatestStatic } from '../../observable/combineLatest';\n\nObservable.combineLatest = combineLatestStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let combineLatest: typeof combineLatestStatic;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): T {\n  return this.lift(new MergeAllOperator<T>(concurrent));\n}\n\nexport interface MergeAllSignature<T> {\n  (concurrent?: number): T;\n}\n\nexport class MergeAllOperator<T> implements Operator<Observable<T>, T> {\n  constructor(private concurrent: number) {\n  }\n\n  call(observer: Observer<T>, source: any): any {\n    return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeAllSubscriber<T> extends OuterSubscriber<Observable<T>, T> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<T>[] = [];\n  private active: number = 0;\n\n  constructor(destination: Observer<T>, private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(observable: Observable<T>) {\n    if (this.active < this.concurrent) {\n      this.active++;\n      this.add(subscribeToResult<Observable<T>, T>(this, observable));\n    } else {\n      this.buffer.push(observable);\n    }\n  }\n\n  protected _complete() {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { isScheduler } from '../util/isScheduler';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { MergeAllOperator } from './mergeAll';\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R> {\n  return concatStatic<T, R>(this, ...observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface ConcatSignature<T> {\n  (scheduler?: Scheduler): Observable<T>;\n  <T2>(v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  (...observables: Array<ObservableInput<T> | Scheduler>): Observable<T>;\n  <R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function concatStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\nexport function concatStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function concatStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function concatStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function concatStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concatStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concatStatic<T>(...observables: (ObservableInput<T> | Scheduler)[]): Observable<T>;\nexport function concatStatic<T, R>(...observables: (ObservableInput<any> | Scheduler)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concatStatic<T, R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R> {\n  let scheduler: Scheduler = null;\n  let args = <any[]>observables;\n  if (isScheduler(args[observables.length - 1])) {\n    scheduler = args.pop();\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new MergeAllOperator<R>(1));\n}\n","import {  concatStatic  } from '../operator/concat';\n\nexport const concat = concatStatic;","import { Observable } from '../../Observable';\nimport { concat as concatStatic } from '../../observable/concat';\n\nObservable.concat = concatStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let concat: typeof concatStatic;\n  }\n}","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class DeferObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that, on subscribe, calls an Observable factory to\n   * make an Observable for each new Observer.\n   *\n   * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n   * is subscribed.\n   * </span>\n   *\n   * <img src=\"./img/defer.png\" width=\"100%\">\n   *\n   * `defer` allows you to create the Observable only when the Observer\n   * subscribes, and create a fresh Observable for each Observer. It waits until\n   * an Observer subscribes to it, and then it generates an Observable,\n   * typically with an Observable factory function. It does this afresh for each\n   * subscriber, so although each subscriber may think it is subscribing to the\n   * same Observable, in fact each subscriber gets its own individual\n   * Observable.\n   *\n   * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n   * var clicksOrInterval = Rx.Observable.defer(function () {\n   *   if (Math.random() > 0.5) {\n   *     return Rx.Observable.fromEvent(document, 'click');\n   *   } else {\n   *     return Rx.Observable.interval(1000);\n   *   }\n   * });\n   * clicksOrInterval.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   *\n   * @param {function(): Observable|Promise} observableFactory The Observable\n   * factory function to invoke for each Observer that subscribes to the output\n   * Observable. May also return a Promise, which will be converted on the fly\n   * to an Observable.\n   * @return {Observable} An Observable whose Observers' subscriptions trigger\n   * an invocation of the given Observable factory function.\n   * @static true\n   * @name defer\n   * @owner Observable\n   */\n  static create<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n    return new DeferObservable(observableFactory);\n  }\n\n  constructor(private observableFactory: () => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return new DeferSubscriber(subscriber, this.observableFactory);\n  }\n}\n\nclass DeferSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private factory: () => SubscribableOrPromise<T> | void) {\n    super(destination);\n    this.tryDefer();\n  }\n\n  private tryDefer(): void {\n    try {\n      this._callFactory();\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private _callFactory(): void {\n    const result = this.factory();\n    if (result) {\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import {  DeferObservable  } from './DeferObservable';\n\nexport const defer = DeferObservable.create;","import { Observable } from '../../Observable';\nimport { defer as staticDefer } from '../../observable/defer';\n\nObservable.defer = staticDefer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let defer: typeof staticDefer;\n  }\n}","import {  EmptyObservable  } from './EmptyObservable';\n\nexport const empty = EmptyObservable.create;","import { Observable } from '../../Observable';\nimport { empty as staticEmpty } from '../../observable/empty';\n\nObservable.empty = staticEmpty;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let empty: typeof staticEmpty;\n  }\n}","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isArray } from '../util/isArray';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ForkJoinObservable<T> extends Observable<T> {\n  constructor(private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super();\n  }\n\n  /* tslint:disable:max-line-length */\n  static create<T, T2>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>): Observable<[T, T2]>;\n  static create<T, T2, T3>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>): Observable<[T, T2, T3]>;\n  static create<T, T2, T3, T4>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>): Observable<[T, T2, T3, T4]>;\n  static create<T, T2, T3, T4, T5>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>): Observable<[T, T2, T3, T4, T5]>;\n  static create<T, T2, T3, T4, T5, T6>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n  static create<T, T2, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  static create<T, T2, T3, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  static create<T, T2, T3, T4, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n  static create<T>(sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(sources: SubscribableOrPromise<any>[]): Observable<R>;\n  static create<T, R>(sources: SubscribableOrPromise<T>[], project: (...values: Array<T>) => R): Observable<R>;\n  static create<R>(sources: SubscribableOrPromise<any>[], project: (...values: Array<any>) => R): Observable<R>;\n  static create<T>(...sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(...sources: SubscribableOrPromise<any>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n  /**\n   * @param sources\n   * @return {any}\n   * @static true\n   * @name forkJoin\n   * @owner Observable\n   */\n  static create<T>(...sources: Array<SubscribableOrPromise<any> |\n                                  Array<SubscribableOrPromise<any>> |\n                                  ((...values: Array<any>) => any)>): Observable<T> {\n    if (sources === null || arguments.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    let resultSelector: (...values: Array<any>) => any = null;\n    if (typeof sources[sources.length - 1] === 'function') {\n      resultSelector = <(...values: Array<any>) => any>sources.pop();\n    }\n\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n    if (sources.length === 1 && isArray(sources[0])) {\n      sources = <Array<SubscribableOrPromise<any>>>sources[0];\n    }\n\n    if (sources.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    return new ForkJoinObservable(<Array<SubscribableOrPromise<any>>>sources, resultSelector);\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private total: number;\n  private values: any[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<T>,\n              private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super(destination);\n\n    const len = sources.length;\n    this.total = len;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        (<any> innerSubscription).outerIndex = i;\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(<any>innerSub)._hasValue) {\n      (<any>innerSub)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const destination = this.destination;\n    const { haveValues, resultSelector, values } = this;\n    const len = values.length;\n\n    if (!(<any>innerSub)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      const value = resultSelector ? resultSelector.apply(this, values) : values;\n      destination.next(value);\n    }\n\n    destination.complete();\n  }\n}","import {  ForkJoinObservable  } from './ForkJoinObservable';\n\nexport const forkJoin = ForkJoinObservable.create;","import { Observable } from '../../Observable';\nimport { forkJoin as staticForkJoin } from '../../observable/forkJoin';\n\nObservable.forkJoin = staticForkJoin;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let forkJoin: typeof staticForkJoin;\n  }\n}","import { root } from '../util/root';\nimport { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {Promise<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: Promise<T>, scheduler?: Scheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: Promise<T>, private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { root } from '../util/root';\nimport { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { $$iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: Scheduler) {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: Scheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [$$iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [$$iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[$$iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[$$iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: Scheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: Scheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { Scheduler } from '../Scheduler';\nimport { $$iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operator/observeOn';\nimport { $$observable } from '../symbol/observable';\n\nconst isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: Scheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: Scheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *  \n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *  \n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: Scheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[$$observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[$$iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[$$observable]().subscribe(subscriber);\n    } else {\n      return ish[$$observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;","import { Observable } from '../../Observable';\nimport { from as staticFrom } from '../../observable/from';\n\nObservable.from = staticFrom;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let from: typeof staticFrom;\n  }\n}","import { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport type NodeStyleEventEmmitter = {\n  addListener: (eventName: string, handler: Function) => void;\n  removeListener: (eventName: string, handler: Function) => void;\n};\nfunction isNodeStyleEventEmmitter(sourceObj: any): sourceObj is NodeStyleEventEmmitter {\n  return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nexport type JQueryStyleEventEmitter = {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n};\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isNodeList(sourceObj: any): sourceObj is NodeList {\n  return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\n\nfunction isHTMLCollection(sourceObj: any): sourceObj is HTMLCollection {\n  return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is EventTarget {\n  return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n\nexport type EventTargetLike = EventTarget | NodeStyleEventEmmitter | JQueryStyleEventEmitter | NodeList | HTMLCollection;\n\nexport type EventListenerOptions = {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n} | boolean;\n\nexport type SelectorMethodSignature<T> = (...args: Array<any>) => T;\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventObservable<T, R> extends Observable<T> {\n\n  /* tslint:disable:max-line-length */\n  static create<T>(target: EventTargetLike, eventName: string): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, selector: SelectorMethodSignature<T>): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions, selector: SelectorMethodSignature<T>): Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Creates an Observable that emits events of a specific type coming from the\n   * given event target.\n   *\n   * <span class=\"informal\">Creates an Observable from DOM events, or Node\n   * EventEmitter events or others.</span>\n   *\n   * <img src=\"./img/fromEvent.png\" width=\"100%\">\n   *\n   * Creates an Observable by attaching an event listener to an \"event target\",\n   * which may be an object with `addEventListener` and `removeEventListener`,\n   * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n   * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n   * the output Observable is subscribed, and removed when the Subscription is\n   * unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * var clicks = Rx.Observable.fromEvent(document, 'click');\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEventPattern}\n   *\n   * @param {EventTargetLike} target The DOMElement, event target, Node.js\n   * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n   * @param {string} eventName The event name of interest, being emitted by the\n   * `target`.\n   * @parm {EventListenerOptions} [options] Options to pass through to addEventListener\n   * @param {SelectorMethodSignature<T>} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEvent\n   * @owner Observable\n   */\n  static create<T>(target: EventTargetLike,\n                   eventName: string,\n                   options?: EventListenerOptions,\n                   selector?: SelectorMethodSignature<T>): Observable<T> {\n    if (isFunction(options)) {\n      selector = <any>options;\n      options = undefined;\n    }\n    return new FromEventObservable(target, eventName, selector, options);\n  }\n\n  constructor(private sourceObj: EventTargetLike,\n              private eventName: string,\n              private selector?: SelectorMethodSignature<T>,\n              private options?: EventListenerOptions) {\n    super();\n  }\n\n  private static setupSubscription<T>(sourceObj: EventTargetLike,\n                                      eventName: string,\n                                      handler: Function,\n                                      subscriber: Subscriber<T>,\n                                      options?: EventListenerOptions) {\n    let unsubscribe: () => void;\n    if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n      for (let i = 0, len = sourceObj.length; i < len; i++) {\n        FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n      }\n    } else if (isEventTarget(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addEventListener(eventName, <EventListener>handler, <boolean>options);\n      unsubscribe = () => source.removeEventListener(eventName, <EventListener>handler);\n    } else if (isJQueryStyleEventEmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.on(eventName, handler);\n      unsubscribe = () => source.off(eventName, handler);\n    } else if (isNodeStyleEventEmmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addListener(eventName, handler);\n      unsubscribe = () => source.removeListener(eventName, handler);\n    }\n\n    subscriber.add(new Subscription(unsubscribe));\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const sourceObj = this.sourceObj;\n    const eventName = this.eventName;\n    const options = this.options;\n    const selector = this.selector;\n    let handler = selector ? (...args: any[]) => {\n      let result = tryCatch(selector)(...args);\n      if (result === errorObject) {\n        subscriber.error(errorObject.e);\n      } else {\n        subscriber.next(result);\n      }\n    } : (e: any) => subscriber.next(e);\n\n    FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n  }\n}\n","import {  FromEventObservable  } from './FromEventObservable';\n\nexport const fromEvent = FromEventObservable.create;","import { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\n\nObservable.fromEvent = staticFromEvent;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEvent: typeof staticFromEvent;\n  }\n}","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventPatternObservable<T, R> extends Observable<T> {\n\n  /**\n   * Creates an Observable from an API based on addHandler/removeHandler\n   * functions.\n   *\n   * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n   * Observable.</span>\n   *\n   * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n   *\n   * Creates an Observable by using the `addHandler` and `removeHandler`\n   * functions to add and remove the handlers, with an optional selector\n   * function to project the event arguments to a result. The `addHandler` is\n   * called when the output Observable is subscribed, and `removeHandler` is\n   * called when the Subscription is unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * function addClickHandler(handler) {\n   *   document.addEventListener('click', handler);\n   * }\n   *  \n   * function removeClickHandler(handler) {\n   *   document.removeEventListener('click', handler);\n   * }\n   *  \n   * var clicks = Rx.Observable.fromEventPattern(\n   *   addClickHandler,\n   *   removeClickHandler\n   * );\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEvent}\n   *\n   * @param {function(handler: Function): any} addHandler A function that takes\n   * a `handler` function as argument and attaches it somehow to the actual\n   * source of events.\n   * @param {function(handler: Function): void} removeHandler A function that\n   * takes a `handler` function as argument and removes it in case it was\n   * previously attached using `addHandler`.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEventPattern\n   * @owner Observable\n   */\n  static create<T>(addHandler: (handler: Function) => any,\n                   removeHandler: (handler: Function) => void,\n                   selector?: (...args: Array<any>) => T) {\n    return new FromEventPatternObservable(addHandler, removeHandler, selector);\n  }\n\n  constructor(private addHandler: (handler: Function) => any,\n              private removeHandler: (handler: Function) => void,\n              private selector?: (...args: Array<any>) => T) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const removeHandler = this.removeHandler;\n\n    const handler = !!this.selector ? (...args: Array<any>) => {\n      this._callSelector(subscriber, args);\n    } : function(e: any) { subscriber.next(e); };\n\n    this._callAddHandler(handler, subscriber);\n    subscriber.add(new Subscription(() => {\n      //TODO: determine whether or not to forward to error handler\n      removeHandler(handler);\n    }));\n  }\n\n  private _callSelector(subscriber: Subscriber<T>, args: Array<any>): void {\n    try {\n      const result: T = this.selector(...args);\n      subscriber.next(result);\n    }\n    catch (e) {\n      subscriber.error(e);\n    }\n  }\n\n  private _callAddHandler(handler: (e: any) => void, errorSubscriber: Subscriber<T>): void {\n    try {\n      this.addHandler(handler);\n    }\n    catch (e) {\n      errorSubscriber.error(e);\n    }\n  }\n}","import {  FromEventPatternObservable  } from './FromEventPatternObservable';\n\nexport const fromEventPattern = FromEventPatternObservable.create;","import { Observable } from '../../Observable';\nimport { fromEventPattern as staticFromEventPattern } from '../../observable/fromEventPattern';\n\nObservable.fromEventPattern = staticFromEventPattern;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEventPattern: typeof staticFromEventPattern;\n  }\n}","import {  PromiseObservable  } from './PromiseObservable';\n\nexport const fromPromise = PromiseObservable.create;","import { Observable } from '../../Observable';\nimport { fromPromise as staticFromPromise } from '../../observable/fromPromise';\n\nObservable.fromPromise = staticFromPromise;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromPromise: typeof staticFromPromise;\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Observable } from '../Observable' ;\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\n\nconst selfSelector = <T>(value: T) => value;\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Inital state.\n  */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n  */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * Scheduler to use for generation process.\n   * By default, a generator starts immediately.\n  */\n  scheduler?: Scheduler;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class GenerateObservable<T, S> extends Observable<T> {\n  constructor(private initialState: S,\n              private condition: ConditionFunc<S>,\n              private iterate: IterateFunc<S>,\n              private resultSelector: ResultFunc<S, T>,\n              private scheduler?: Scheduler) {\n      super();\n  }\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, x => x + 1, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(initialState: S,\n                      condition: ConditionFunc<S>,\n                      iterate: IterateFunc<S>,\n                      resultSelector: ResultFunc<S, T>,\n                      scheduler?: Scheduler): Observable<T>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload uses state as an emitted value.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(initialState: S,\n                   condition: ConditionFunc<S>,\n                   iterate: IterateFunc<S>,\n                   scheduler?: Scheduler): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain inital state, iterate,\n   * condition and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(options: GenerateBaseOptions<S>): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain inital state, iterate,\n   * condition, result selector and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1,\n   *   resultSelector: x => x\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(options: GenerateOptions<T, S>): Observable<T>\n\n  static create<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                      condition?: ConditionFunc<S>,\n                      iterate?: IterateFunc<S>,\n                      resultSelectorOrObservable?: (ResultFunc<S, T>) | Scheduler,\n                      scheduler?: Scheduler): Observable<T> {\n    if (arguments.length == 1) {\n      return new GenerateObservable<T, S>(\n        (<GenerateOptions<T, S>>initialStateOrOptions).initialState,\n        (<GenerateOptions<T, S>>initialStateOrOptions).condition,\n        (<GenerateOptions<T, S>>initialStateOrOptions).iterate,\n        (<GenerateOptions<T, S>>initialStateOrOptions).resultSelector || selfSelector,\n        (<GenerateOptions<T, S>>initialStateOrOptions).scheduler);\n    }\n\n    if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n      return new GenerateObservable<T, S>(\n        <S>initialStateOrOptions,\n        condition,\n        iterate,\n        selfSelector,\n        <Scheduler>resultSelectorOrObservable);\n    }\n\n    return new GenerateObservable<T, S>(\n      <S>initialStateOrOptions,\n      condition,\n      iterate,\n      <ResultFunc<S, T>>resultSelectorOrObservable,\n      <Scheduler>scheduler);\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription | Function | void {\n    let state = this.initialState;\n    if (this.scheduler) {\n      return this.scheduler.schedule<SchedulerState<T, S>>(GenerateObservable.dispatch, 0, {\n        subscriber,\n        iterate: this.iterate,\n        condition: this.condition,\n        resultSelector: this.resultSelector,\n        state });\n    }\n    const { condition, resultSelector, iterate } = this;\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } while (true);\n  }\n\n  private static dispatch<T, S>(state: SchedulerState<T, S>): Subscription | void {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n      return;\n    }\n    if (state.needIterate) {\n      try {\n        state.state = state.iterate(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } else {\n      state.needIterate = true;\n    }\n    if (condition) {\n      let conditionResult: boolean;\n      try {\n        conditionResult = condition(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      if (!conditionResult) {\n        subscriber.complete();\n        return;\n      }\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    let value: T;\n    try {\n      value = state.resultSelector(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return;\n    }\n    if (subscriber.closed) {\n      return;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n    return (<Action<SchedulerState<T, S>>><any>this).schedule(state);\n  }\n}\n","import { Observable } from '../../Observable';\nimport { GenerateObservable } from '../../observable/GenerateObservable';\n\nObservable.generate = GenerateObservable.create;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let generate: typeof GenerateObservable.create;\n  }\n}","import {  IfObservable  } from './IfObservable';\n\nexport const _if = IfObservable.create;","import { Observable } from '../../Observable';\nimport { _if } from '../../observable/if';\n\nObservable.if = _if;","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IntervalObservable extends Observable<number> {\n  /**\n   * Creates an Observable that emits sequential numbers every specified\n   * interval of time, on a specified Scheduler.\n   *\n   * <span class=\"informal\">Emits incremental numbers periodically in time.\n   * </span>\n   *\n   * <img src=\"./img/interval.png\" width=\"100%\">\n   *\n   * `interval` returns an Observable that emits an infinite sequence of\n   * ascending integers, with a constant interval of time of your choosing\n   * between those emissions. The first emission is not sent immediately, but\n   * only after the first period has passed. By default, this operator uses the\n   * `async` Scheduler to provide a notion of time, but you may pass any\n   * Scheduler to it.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n   * var numbers = Rx.Observable.interval(1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link delay}\n   *\n   * @param {number} [period=0] The interval size in milliseconds (by default)\n   * or the time unit determined by the scheduler's clock.\n   * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a sequential number each time\n   * interval.\n   * @static true\n   * @name interval\n   * @owner Observable\n   */\n  static create(period: number = 0,\n                scheduler: Scheduler = async): Observable<number> {\n    return new IntervalObservable(period, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { index, subscriber, period } = state;\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index += 1;\n\n    (<any> this).schedule(state, period);\n  }\n\n  constructor(private period: number = 0,\n              private scheduler: Scheduler = async) {\n    super();\n    if (!isNumeric(period) || period < 0) {\n      this.period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = async;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>) {\n    const index = 0;\n    const period = this.period;\n    const scheduler = this.scheduler;\n\n    subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n      index, subscriber, period\n    }));\n  }\n}\n","import {  IntervalObservable  } from './IntervalObservable';\n\nexport const interval = IntervalObservable.create;","import { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\n\nObservable.interval = staticInterval;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let interval: typeof staticInterval;\n  }\n}","import { Observable, ObservableInput } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { MergeAllOperator } from './mergeAll';\nimport { isScheduler } from '../util/isScheduler';\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n  observables.unshift(this);\n  return mergeStatic.apply(this, observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface MergeSignature<T> {\n  (scheduler?: Scheduler): Observable<T>;\n  (concurrent?: number, scheduler?: Scheduler): Observable<T>;\n  <T2>(v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\n  <T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  (...observables: Array<ObservableInput<T> | Scheduler | number>): Observable<T>;\n  <R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function mergeStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T>(...observables: (ObservableInput<T> | Scheduler | number)[]): Observable<T>;\nexport function mergeStatic<T, R>(...observables: (ObservableInput<any> | Scheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function mergeStatic<T, R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: Scheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <Scheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (observables.length === 1) {\n    return <Observable<R>>observables[0];\n  }\n\n  return new ArrayObservable(<any>observables, scheduler).lift(new MergeAllOperator<R>(concurrent));\n}\n","import {  mergeStatic  } from '../operator/merge';\n\nexport const merge = mergeStatic;","import { Observable } from '../../Observable';\nimport { merge as mergeStatic } from '../../observable/merge';\n\nObservable.merge = mergeStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let merge: typeof mergeStatic;\n  }\n}","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `pair([obs1, obs2, ...])`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<T>>>observables[0];\n  }\n\n  observables.unshift(this);\n  return raceStatic.apply(this, observables);\n}\n\nexport interface RaceSignature<T> {\n  (...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\n  <R>(...observables: Array<Observable<any> | Array<Observable<T>>>): Observable<R>;\n}\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function raceStatic<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function raceStatic<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `pair([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n          this.add(subscription);\n        }\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Observable } from '../../Observable';\nimport { raceStatic } from '../../operator/race';\n\nObservable.race = raceStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let race: typeof raceStatic;\n  }\n}","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class NeverObservable<T> extends Observable<T> {\n  /**\n   * Creates an Observable that emits no items to the Observer.\n   *\n   * <span class=\"informal\">An Observable that never emits anything.</span>\n   *\n   * <img src=\"./img/never.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that emits\n   * neither values nor errors nor the completion notification. It can be used\n   * for testing purposes or for composing with other Observables. Please not\n   * that by never emitting a complete notification, this Observable keeps the\n   * subscription from being disposed automatically. Subscriptions need to be\n   * manually disposed.\n   *\n   * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n   * function info() {\n   *   console.log('Will not be called');\n   * }\n   * var result = Rx.Observable.never().startWith(7);\n   * result.subscribe(x => console.log(x), info, info);\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @return {Observable} A \"never\" Observable: never emits anything.\n   * @static true\n   * @name never\n   * @owner Observable\n   */\n  static create<T>() {\n    return new NeverObservable<T>();\n  }\n\n  constructor() {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): void {\n    noop();\n  }\n}\n","import {  NeverObservable  } from './NeverObservable';\n\nexport const never = NeverObservable.create;","import { Observable } from '../../Observable';\nimport { never as staticNever } from '../../observable/never';\n\nObservable.never = staticNever;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let never: typeof staticNever;\n  }\n}","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;","import { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\n\nObservable.of = staticOf;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let of: typeof staticOf; //formOf an iceberg!\n  }\n}","import { Observable, ObservableInput } from '../Observable';\r\nimport { FromObservable } from '../observable/FromObservable';\r\nimport { Operator } from '../Operator';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { isArray } from '../util/isArray';\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { InnerSubscriber } from '../InnerSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\n\r\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\r\n                                                       Array<ObservableInput<any>> |\r\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\r\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\r\n    nextSources = <Array<Observable<any>>>nextSources[0];\r\n  }\r\n\r\n  return this.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\r\n}\r\n\r\n/* tslint:disable:max-line-length */\r\nexport interface OnErrorResumeNextSignature<T> {\r\n  <R>(v: ObservableInput<R>): Observable<R>;\r\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\r\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\r\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\r\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\r\n\r\n  <R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\r\n  <R>(array: ObservableInput<any>[]): Observable<R>;\r\n}\r\n/* tslint:enable:max-line-length */\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\r\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\r\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\r\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\r\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\r\n\r\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\r\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\r\n/* tslint:enable:max-line-length */\r\n\r\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\r\n                                                              Array<ObservableInput<any>> |\r\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\r\n  let source: ObservableInput<any> = null;\r\n\r\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\r\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\r\n  }\r\n  source = nextSources.shift();\r\n\r\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\r\n}\r\n\r\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\r\n  constructor(private nextSources: Array<ObservableInput<any>>) {\r\n  }\r\n\r\n  call(subscriber: Subscriber<R>, source: any): any {\r\n    return source._subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\r\n  }\r\n}\r\n\r\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\r\n  constructor(protected destination: Subscriber<T>,\r\n              private nextSources: Array<ObservableInput<any>>) {\r\n    super(destination);\r\n  }\r\n\r\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\r\n    this.subscribeToNextSource();\r\n  }\r\n\r\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\r\n    this.subscribeToNextSource();\r\n  }\r\n\r\n  protected _error(err: any): void {\r\n    this.subscribeToNextSource();\r\n  }\r\n\r\n  protected _complete(): void {\r\n    this.subscribeToNextSource();\r\n  }\r\n\r\n  private subscribeToNextSource(): void {\r\n    const next = this.nextSources.shift();\r\n    if (next) {\r\n      this.add(subscribeToResult(this, next));\r\n    } else {\r\n      this.destination.complete();\r\n    }\r\n  }\r\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNextStatic } from '../../operator/onErrorResumeNext';\r\n\r\nObservable.onErrorResumeNext = onErrorResumeNextStatic;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let onErrorResumeNext: typeof onErrorResumeNextStatic;\r\n  }\r\n}","import { Scheduler } from '../Scheduler';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { TeardownLogic } from '../Subscription';\r\n\r\ninterface PairsContext<T> {\r\n  obj: Object;\r\n  keys: Array<string>;\r\n  length: number;\r\n  index: number;\r\n  subscriber: Subscriber<Array<string | T>>;\r\n}\r\n\r\nfunction dispatch<T>(state: PairsContext<T>) {\r\n  const {obj, keys, length, index, subscriber} = state;\r\n\r\n  if (index === length) {\r\n    subscriber.complete();\r\n    return;\r\n  }\r\n\r\n  const key = keys[index];\r\n  subscriber.next([key, obj[key]]);\r\n\r\n  state.index = index + 1;\r\n\r\n  (<any> this).schedule(state);\r\n}\r\n\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nexport class PairsObservable<T> extends Observable<Array<string | T>> {\r\n  private keys: Array<string>;\r\n\r\n  /**\r\n   * Convert an object into an observable sequence of [key, value] pairs\r\n   * using an optional Scheduler to enumerate the object.\r\n   *\r\n   * @example <caption>Converts a javascript object to an Observable</caption>\r\n   * var obj = {\r\n   *   foo: 42,\r\n   *   bar: 56,\r\n   *   baz: 78\r\n   * };\r\n   *\r\n   * var source = Rx.Observable.pairs(obj);\r\n   *\r\n   * var subscription = source.subscribe(\r\n   *   function (x) {\r\n   *     console.log('Next: %s', x);\r\n   *   },\r\n   *   function (err) {\r\n   *     console.log('Error: %s', err);\r\n   *   },\r\n   *   function () {\r\n   *     console.log('Completed');\r\n   *   });\r\n   *\r\n   * @param {Object} obj The object to inspect and turn into an\r\n   * Observable sequence.\r\n   * @param {Scheduler} [scheduler] An optional Scheduler to run the\r\n   * enumeration of the input sequence on.\r\n   * @returns {(Observable<Array<string | T>>)} An observable sequence of\r\n   * [key, value] pairs from the object.\r\n   */\r\n  static create<T>(obj: Object, scheduler?: Scheduler): Observable<Array<string | T>> {\r\n    return new PairsObservable<T>(obj, scheduler);\r\n  }\r\n\r\n  constructor(private obj: Object, private scheduler?: Scheduler) {\r\n    super();\r\n    this.keys = Object.keys(obj);\r\n  }\r\n\r\n  protected _subscribe(subscriber: Subscriber<Array<string | T>>): TeardownLogic {\r\n    const {keys, scheduler} = this;\r\n    const length = keys.length;\r\n\r\n    if (scheduler) {\r\n      return scheduler.schedule(dispatch, 0, {\r\n        obj: this.obj, keys, length, index: 0, subscriber\r\n      });\r\n    } else {\r\n      for (let idx = 0; idx < length; idx++) {\r\n        const key = keys[idx];\r\n        subscriber.next([key, this.obj[key]]);\r\n      }\r\n      subscriber.complete();\r\n    }\r\n  }\r\n}","import {  PairsObservable  } from './PairsObservable';\r\n\r\nexport const pairs = PairsObservable.create;","import { Observable } from '../../Observable';\r\nimport { pairs as staticPairs } from '../../observable/pairs';\r\n\r\nObservable.pairs = staticPairs;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let pairs: typeof staticPairs;\r\n  }\r\n}","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class RangeObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that emits a sequence of numbers within a specified\n   * range.\n   *\n   * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n   *\n   * <img src=\"./img/range.png\" width=\"100%\">\n   *\n   * `range` operator emits a range of sequential integers, in order, where you\n   * select the `start` of the range and its `length`. By default, uses no\n   * Scheduler and just delivers the notifications synchronously, but may use\n   * an optional Scheduler to regulate those deliveries.\n   *\n   * @example <caption>Emits the numbers 1 to 10</caption>\n   * var numbers = Rx.Observable.range(1, 10);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link interval}\n   *\n   * @param {number} [start=0] The value of the first integer in the sequence.\n   * @param {number} [count=0] The number of sequential integers to generate.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emissions of the notifications.\n   * @return {Observable} An Observable of numbers that emits a finite range of\n   * sequential integers.\n   * @static true\n   * @name range\n   * @owner Observable\n   */\n  static create(start: number = 0,\n                count: number = 0,\n                scheduler?: Scheduler): Observable<number> {\n    return new RangeObservable(start, count, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { start, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(start);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n    state.start = start + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  private start: number;\n  private _count: number;\n  private scheduler: Scheduler;\n\n  constructor(start: number,\n              count: number,\n              scheduler?: Scheduler) {\n    super();\n    this.start = start;\n    this._count = count;\n    this.scheduler = scheduler;\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    let index = 0;\n    let start = this.start;\n    const count = this._count;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(RangeObservable.dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(start++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n","import {  RangeObservable  } from './RangeObservable';\n\nexport const range = RangeObservable.create;","import { Observable } from '../../Observable';\nimport { range as staticRange } from '../../observable/range';\n\nObservable.range = staticRange;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let range: typeof staticRange;\n  }\n}","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { AnonymousSubscription, TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class UsingObservable<T> extends Observable<T> {\n\n  static create<T>(resourceFactory: () => AnonymousSubscription | void,\n                   observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void): Observable<T> {\n    return new UsingObservable<T>(resourceFactory, observableFactory);\n  }\n\n  constructor(private resourceFactory: () => AnonymousSubscription | void,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const { resourceFactory, observableFactory } = this;\n\n    let resource: AnonymousSubscription;\n\n    try {\n      resource = <AnonymousSubscription>resourceFactory();\n      return new UsingSubscriber(subscriber, resource, observableFactory);\n    } catch (err) {\n      subscriber.error(err);\n    }\n  }\n}\n\nclass UsingSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private resource: AnonymousSubscription,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super(destination);\n    destination.add(resource);\n    this.tryUse();\n  }\n\n  private tryUse(): void {\n    try {\n      const source = this.observableFactory.call(this, this.resource);\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}","import {  UsingObservable  } from './UsingObservable';\n\nexport const using = UsingObservable.create;","import { Observable } from '../../Observable';\nimport { using as staticUsing } from '../../observable/using';\n\nObservable.using = staticUsing;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let using: typeof staticUsing;\n  }\n}","import {  ErrorObservable  } from './ErrorObservable';\n\nexport const _throw = ErrorObservable.create;","import { Observable } from '../../Observable';\nimport { _throw } from '../../observable/throw';\n\nObservable.throw = _throw;","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` Scheduler to provide a notion of time, but you\n   * may pass any Scheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | Scheduler,\n                scheduler?: Scheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: Scheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | Scheduler,\n              scheduler?: Scheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <Scheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import {  TimerObservable  } from './TimerObservable';\n\nexport const timer = TimerObservable.create;","import { Observable } from '../../Observable';\nimport { timer as staticTimer } from '../../observable/timer';\n\nObservable.timer = staticTimer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let timer: typeof staticTimer;\n  }\n}","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { $$iterator } from '../symbol/iterator';\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zipProto<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  observables.unshift(this);\n  return zipStatic.apply(this, observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface ZipSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\n  <R>(array: Array<ObservableInput<T>>): Observable<R>;\n  <TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private index = 0;\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    const index = this.index++;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[$$iterator] === 'function') {\n      iterators.push(new StaticIterator(value[$$iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value, index));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [$$iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>,\n              private index: number) {\n    super(destination);\n  }\n\n  [$$iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import {  zipStatic  } from '../operator/zip';\n\nexport const zip = zipStatic;","import { Observable } from '../../Observable';\nimport { zip as zipStatic } from '../../observable/zip';\n\nObservable.zip = zipStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let zip: typeof zipStatic;\n  }\n}","import {  AjaxObservable, AjaxCreationMethod  } from './AjaxObservable';\n\nexport const ajax: AjaxCreationMethod = AjaxObservable.create;","import { Observable } from '../../../Observable';\nimport { ajax as staticAjax } from '../../../observable/dom/ajax';\nimport { AjaxCreationMethod } from '../../../observable/dom/AjaxObservable';\n\nObservable.ajax = staticAjax;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let ajax: AjaxCreationMethod;\n  }\n}","import { root } from './root';\n\nconst Object = root.Object;\n\nif (typeof (<any>Object).assign != 'function') {\n  (function () {\n    (<any>Object).assign = function assignPolyfill(target: Object, ...sources: Array<Object>): Object {\n      if (target === undefined || target === null) {\n        throw new TypeError('cannot convert undefined or null to object');\n      }\n\n      const output = Object(target);\n      const len = sources.length;\n      for (let index = 0; index < len; index++) {\n        let source = sources[index];\n        if (source !== undefined && source !== null) {\n          for (let key in source) {\n            if (source.hasOwnProperty(key)) {\n              output[key] = source[key];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  })();\n}\n\nexport const assign: (target: Object, ...sources: Array<Object>) => Object = Object.assign;","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { Operator } from '../../Operator';\nimport { root } from '../../util/root';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { Observer, NextObserver } from '../../Observer';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { assign } from '../../util/assign';\n\nexport interface WebSocketSubjectConfig {\n  url: string;\n  protocol?: string | Array<string>;\n  resultSelector?: <T>(e: MessageEvent) => T;\n  openObserver?: NextObserver<Event>;\n  closeObserver?: NextObserver<CloseEvent>;\n  closingObserver?: NextObserver<void>;\n  WebSocketCtor?: { new(url: string, protocol?: string|Array<string>): WebSocket };\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class WebSocketSubject<T> extends AnonymousSubject<T> {\n\n  url: string;\n  protocol: string|Array<string>;\n  socket: WebSocket;\n  openObserver: NextObserver<Event>;\n  closeObserver: NextObserver<CloseEvent>;\n  closingObserver: NextObserver<void>;\n  WebSocketCtor: { new(url: string, protocol?: string|Array<string>): WebSocket };\n\n  private _output: Subject<T>;\n\n  resultSelector(e: MessageEvent) {\n    return JSON.parse(e.data);\n  }\n\n  /**\n   * @param urlConfigOrSource\n   * @return {WebSocketSubject}\n   * @static true\n   * @name webSocket\n   * @owner Observable\n   */\n  static create<T>(urlConfigOrSource: string | WebSocketSubjectConfig): WebSocketSubject<T> {\n    return new WebSocketSubject<T>(urlConfigOrSource);\n  }\n\n  constructor(urlConfigOrSource: string | WebSocketSubjectConfig | Observable<T>, destination?: Observer<T>) {\n    if (urlConfigOrSource instanceof Observable) {\n      super(destination, <Observable<T>> urlConfigOrSource);\n    } else {\n      super();\n      this.WebSocketCtor = root.WebSocket;\n      this._output = new Subject<T>();\n      if (typeof urlConfigOrSource === 'string') {\n        this.url = urlConfigOrSource;\n      } else {\n        // WARNING: config object could override important members here.\n        assign(this, urlConfigOrSource);\n      }\n      if (!this.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n\n  lift<R>(operator: Operator<T, R>): WebSocketSubject<R> {\n    const sock = new WebSocketSubject<R>(this, <any> this.destination);\n    sock.operator = operator;\n    return sock;\n  }\n\n  // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n  multiplex(subMsg: () => any, unsubMsg: () => any, messageFilter: (value: T) => boolean) {\n    const self = this;\n    return new Observable((observer: Observer<any>) => {\n      const result = tryCatch(subMsg)();\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        self.next(result);\n      }\n\n      let subscription = self.subscribe(x => {\n        const result = tryCatch(messageFilter)(x);\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else if (result) {\n          observer.next(x);\n        }\n      },\n        err => observer.error(err),\n        () => observer.complete());\n\n      return () => {\n        const result = tryCatch(unsubMsg)();\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else {\n          self.next(result);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  private _connectSocket() {\n    const { WebSocketCtor } = this;\n    const observer = this._output;\n\n    let socket: WebSocket = null;\n    try {\n      socket = this.protocol ?\n        new WebSocketCtor(this.url, this.protocol) :\n        new WebSocketCtor(this.url);\n      this.socket = socket;\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    const subscription = new Subscription(() => {\n      this.socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = (e: Event) => {\n      const openObserver = this.openObserver;\n      if (openObserver) {\n        openObserver.next(e);\n      }\n\n      const queue = this.destination;\n\n      this.destination = Subscriber.create(\n        (x) => socket.readyState === 1 && socket.send(x),\n        (e) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          if (e && e.code) {\n            socket.close(e.code, e.reason);\n          } else {\n            observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n              'and an optional reason: { code: number, reason: string }'));\n          }\n          this.destination = new ReplaySubject();\n          this.socket = null;\n        },\n        ( ) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          socket.close();\n          this.destination = new ReplaySubject();\n          this.socket = null;\n        }\n      );\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add((<ReplaySubject<T>>queue).subscribe(this.destination));\n      }\n    };\n\n    socket.onerror = (e: Event) => observer.error(e);\n\n    socket.onclose = (e: CloseEvent) => {\n      const closeObserver = this.closeObserver;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = (e: MessageEvent) => {\n      const result = tryCatch(this.resultSelector)(e);\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        observer.next(result);\n      }\n    };\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this.socket) {\n      this._connectSocket();\n    }\n    let subscription = new Subscription();\n    subscription.add(this._output.subscribe(subscriber));\n    subscription.add(() => {\n      const { socket } = this;\n      if (this._output.observers.length === 0 && socket && socket.readyState === 1) {\n        socket.close();\n        this.socket = null;\n      }\n    });\n    return subscription;\n  }\n\n  unsubscribe() {\n    const { source, socket } = this;\n    if (socket && socket.readyState === 1) {\n      socket.close();\n      this.socket = null;\n    }\n    super.unsubscribe();\n    if (!source) {\n      this.destination = new ReplaySubject();\n    }\n  }\n}\n","import {  WebSocketSubject  } from './WebSocketSubject';\n\nexport const webSocket = WebSocketSubject.create;","import { Observable } from '../../../Observable';\nimport { webSocket as staticWebSocket } from '../../../observable/dom/webSocket';\n\nObservable.webSocket = staticWebSocket;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let webSocket: typeof staticWebSocket;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): Observable<T[]> {\n  return this.lift(new BufferOperator<T>(closingNotifier));\n}\n\nexport interface BufferSignature<T> {\n  (closingNotifier: Observable<any>): Observable<T[]>;\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { buffer, BufferSignature } from '../../operator/buffer';\n\nObservable.prototype.buffer = buffer;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    buffer: BufferSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): Observable<T[]> {\n  return this.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n}\n\nexport interface BufferCountSignature<T> {\n  (bufferSize: number, startBufferEvery?: number): Observable<T[]>;\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [[]];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    const count = (this.count += 1);\n    const destination = this.destination;\n    const bufferSize = this.bufferSize;\n    const startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;\n    const buffers = this.buffers;\n    const len = buffers.length;\n    let remove = -1;\n\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = 0; i < len; i++) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        remove = i;\n        destination.next(buffer);\n      }\n    }\n\n    if (remove !== -1) {\n      buffers.splice(remove, 1);\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    const buffers = this.buffers;\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { bufferCount, BufferCountSignature } from '../../operator/bufferCount';\n\nObservable.prototype.bufferCount = bufferCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferCount: BufferCountSignature<T>;\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): Observable<T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: Scheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return this.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n}\n\nexport interface BufferTimeSignature<T> {\n  (bufferTimeSpan: number, scheduler?: Scheduler): Observable<T[]>;\n  (bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: Scheduler): Observable<T[]>;\n  (bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: Scheduler): Observable<T[]>;\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: Scheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = (<any>this).schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","\nimport { Observable } from '../../Observable';\nimport { bufferTime, BufferTimeSignature } from '../../operator/bufferTime';\n\nObservable.prototype.bufferTime = bufferTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferTime: BufferTimeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(openings: SubscribableOrPromise<O>,\n                                   closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]> {\n  return this.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n}\n\nexport interface BufferToggleSignature<T> {\n  <O>(openings: SubscribableOrPromise<O>, closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]>;\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferToggle, BufferToggleSignature } from '../../operator/bufferToggle';\n\nObservable.prototype.bufferToggle = bufferToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferToggle: BufferToggleSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): Observable<T[]> {\n  return this.lift(new BufferWhenOperator<T>(closingSelector));\n}\n\nexport interface BufferWhenSignature<T> {\n  (closingSelector: () => Observable<any>): Observable<T[]>;\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { bufferWhen, BufferWhenSignature } from '../../operator/bufferWhen';\n\nObservable.prototype.bufferWhen = bufferWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferWhen: BufferWhenSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Observer } from '../Observer';\nimport { Subscription } from '../Subscription';\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {Observable<any>}\n * @method cache\n * @owner Observable\n */\nexport function cache<T>(bufferSize: number = Number.POSITIVE_INFINITY,\n                         windowTime: number = Number.POSITIVE_INFINITY,\n                         scheduler?: Scheduler): Observable<T> {\n  let subject: ReplaySubject<T>;\n  let source = this;\n  let refs = 0;\n  let outerSub: Subscription;\n\n  const getSubject = () => {\n    subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n    return subject;\n  };\n\n  return new Observable<T>((observer: Observer<T>) => {\n    if (!subject) {\n      subject = getSubject();\n      outerSub = source.subscribe(\n        (value: T) => subject.next(value),\n        (err: any) => {\n          let s = subject;\n          subject = null;\n          s.error(err);\n        },\n        () => subject.complete()\n      );\n    }\n\n    refs++;\n\n    if (!subject) {\n      subject = getSubject();\n    }\n    let innerSub = subject.subscribe(observer);\n\n    return () => {\n      refs--;\n      if (innerSub) {\n        innerSub.unsubscribe();\n      }\n      if (refs === 0) {\n        outerSub.unsubscribe();\n      }\n    };\n  });\n}\n\nexport interface CacheSignature<T> {\n  (bufferSize?: number, windowTime?: number, scheduler?: Scheduler): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { cache, CacheSignature } from '../../operator/cache';\n\nObservable.prototype.cache = cache;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    cache: CacheSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} an observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @owner Observable\n */\nexport function _catch<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<R> {\n  const operator = new CatchOperator(selector);\n  const caught = this.lift(operator);\n  return (operator.caught = caught);\n}\n\nexport interface CatchSignature<T> {\n  <R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<R>;\n}\n\nclass CatchOperator<T, R> implements Operator<T, R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.unsubscribe();\n      (<any>this.destination).remove(this);\n      subscribeToResult(this, result);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { _catch, CatchSignature } from '../../operator/catch';\n\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    catch: CatchSignature<T>;\n    _catch: CatchSignature<T>;\n  }\n}","import { CombineLatestOperator } from './combineLatest';\nimport { Observable } from '../Observable';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nexport function combineAll<R>(project?: (...values: Array<any>) => R): Observable<R> {\n  return this.lift(new CombineLatestOperator(project));\n}\n\nexport interface CombineAllSignature<T> {\n  <R>(project?: (...values: Array<T>) => R): Observable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { combineAll, CombineAllSignature } from '../../operator/combineAll';\n\nObservable.prototype.combineAll = combineAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineAll: CombineAllSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { combineLatest, CombineLatestSignature } from '../../operator/combineLatest';\n\nObservable.prototype.combineLatest = combineLatest;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineLatest: CombineLatestSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concat, ConcatSignature } from '../../operator/concat';\n\nObservable.prototype.concat = concat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concat: ConcatSignature<T>;\n  }\n}","import { Subscribable } from '../Observable';\nimport { MergeAllOperator } from './mergeAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): T {\n  return this.lift(new MergeAllOperator<T>(1));\n}\n\nexport interface ConcatAllSignature<T> {\n  (): T;\n  <R>(): Subscribable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { concatAll, ConcatAllSignature } from '../../operator/concatAll';\n\nObservable.prototype.concatAll = concatAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatAll: ConcatAllSignature<T>;\n  }\n}","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return this.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n}\n\nexport interface MergeMapSignature<T> {\n  <R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\n  <I, R>(project: (value: T, index: number) => ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n         concurrent?: number): Observable<R>;\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source._subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { MergeMapOperator } from './mergeMap';\nimport { Observable, ObservableInput } from '../Observable';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} an observable of values merged from the projected\n * Observables as they were subscribed to, one at a time. Optionally, these\n * values may have been projected from a passed `projectResult` argument.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return this.lift(new MergeMapOperator(project, resultSelector, 1));\n}\n\nexport interface ConcatMapSignature<T> {\n  <R>(project: (value: T, index: number) =>  ObservableInput<R>): Observable<R>;\n  <I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { concatMap, ConcatMapSignature } from '../../operator/concatMap';\n\nObservable.prototype.concatMap = concatMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMap: ConcatMapSignature<T>;\n  }\n}","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return this.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\nexport interface MergeMapToSignature<T> {\n  <R>(observable: ObservableInput<R>, concurrent?: number): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n         concurrent?: number): Observable<R>;\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { MergeMapToOperator } from './mergeMapTo';\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return this.lift(new MergeMapToOperator(innerObservable, resultSelector, 1));\n}\n\nexport interface ConcatMapToSignature<T> {\n  <R>(observable: ObservableInput<R>): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { concatMapTo, ConcatMapToSignature } from '../../operator/concatMapTo';\n\nObservable.prototype.concatMapTo = concatMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMapTo: ConcatMapToSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting an value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n  return this.lift(new CountOperator(predicate, this));\n}\n\nexport interface CountSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number>;\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { count, CountSignature } from '../../operator/count';\n\nObservable.prototype.count = count;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    count: CountSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): Observable<any> {\n  return this.lift(new DeMaterializeOperator());\n}\n\nexport interface DematerializeSignature<T> {\n  <R>(): Observable<R>;\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source._subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { dematerialize, DematerializeSignature } from '../../operator/dematerialize';\n\nObservable.prototype.dematerialize = dematerialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    dematerialize: DematerializeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return this.lift(new DebounceOperator(durationSelector));\n}\n\nexport interface DebounceSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T>;\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { debounce, DebounceSignature } from '../../operator/debounce';\n\nObservable.prototype.debounce = debounce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounce: DebounceSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link Scheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nexport interface DebounceTimeSignature<T> {\n  (dueTime: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","\nimport { Observable } from '../../Observable';\nimport { debounceTime, DebounceTimeSignature } from '../../operator/debounceTime';\n\nObservable.prototype.debounceTime = debounceTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounceTime: DebounceTimeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): Observable<T | R> {\n  return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\n\nexport interface DefaultIfEmptySignature<T> {\n  (defaultValue?: T): Observable<T>;\n  <R>(defaultValue?: R): Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { defaultIfEmpty, DefaultIfEmptySignature } from '../../operator/defaultIfEmpty';\n\nObservable.prototype.defaultIfEmpty = defaultIfEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    defaultIfEmpty: DefaultIfEmptySignature<T>;\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Scheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The Scheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: Scheduler = async): Observable<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return this.lift(new DelayOperator(delayFor, scheduler));\n}\n\nexport interface DelaySignature<T> {\n  (delay: number | Date, scheduler?: Scheduler): Observable<T>;\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<any> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch(state: any): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      (<any> this).schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: Scheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<any>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(private time: number,\n              private notification: any) {\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { delay, DelaySignature } from '../../operator/delay';\n\nObservable.prototype.delay = delay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delay: DelaySignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): Observable<T> {\n  if (subscriptionDelay) {\n    return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nexport interface DelayWhenSignature<T> {\n  (delayDurationSelector: (value: T) => Observable<any>, subscriptionDelay?: Observable<any>): Observable<T>;\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n        this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n    this.add(notifierSubscription);\n\n    this.delayNotifierSubscriptions.push(notifierSubscription);\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { delayWhen, DelayWhenSignature } from '../../operator/delayWhen';\n\nObservable.prototype.delayWhen = delayWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delayWhen: DelayWhenSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T>(compare?: (x: T, y: T) => boolean, flushes?: Observable<any>): Observable<T> {\n  return this.lift(new DistinctOperator(compare, flushes));\n}\n\nexport interface DistinctSignature<T> {\n  (compare?: (x: T, y: T) => boolean, flushes?: Observable<any>): Observable<T>;\n}\n\nclass DistinctOperator<T> implements Operator<T, T> {\n  constructor(private compare: (x: T, y: T) => boolean, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DistinctSubscriber(subscriber, this.compare, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T> extends OuterSubscriber<T, T> {\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>, compare: (x: T, y: T) => boolean, flushes: Observable<any>) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.length = 0;\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    let found = false;\n    const values = this.values;\n    const len = values.length;\n    try {\n      for (let i = 0; i < len; i++) {\n        if (this.compare(values[i], value)) {\n          found = true;\n          return;\n        }\n      }\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.values.push(value);\n    this.destination.next(value);\n  }\n\n  private compare(x: T, y: T): boolean {\n    return x === y;\n  }\n}\n","import { Observable } from '../../Observable';\nimport { distinct, DistinctSignature } from '../../operator/distinct';\n\nObservable.prototype.distinct = distinct;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinct: DistinctSignature<T>;\n  }\n}","import { distinct } from './distinct';\nimport { Observable } from '../Observable';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctKey\n * @owner Observable\n */\nexport function distinctKey<T>(key: string, compare?: (x: T, y: T) => boolean, flushes?: Observable<any>): Observable<T> {\n  return distinct.call(this, function(x: T, y: T) {\n    if (compare) {\n      return compare(x[key], y[key]);\n    }\n    return x[key] === y[key];\n  }, flushes);\n}\n\nexport interface DistinctKeySignature<T> {\n  (key: string): Observable<T>;\n  <K>(key: string, compare: (x: K, y: K) => boolean, flushes?: Observable<any>): Observable<T>;\n}\n","import { Observable } from '../../Observable';\nimport { distinctKey, DistinctKeySignature } from '../../operator/distinctKey';\n\nObservable.prototype.distinctKey = distinctKey;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctKey: DistinctKeySignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T> {\n  return this.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nexport interface DistinctUntilChangedSignature<T> {\n (compare?: (x: T, y: T) => boolean): Observable<T>;\n <K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): Observable<T>;\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { distinctUntilChanged, DistinctUntilChangedSignature } from '../../operator/distinctUntilChanged';\n\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilChanged: DistinctUntilChangedSignature<T>;\n  }\n}","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { Observable } from '../Observable';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T>(key: string, compare?: (x: T, y: T) => boolean): Observable<T> {\n  return distinctUntilChanged.call(this, function(x: T, y: T) {\n    if (compare) {\n      return compare(x[key], y[key]);\n    }\n    return x[key] === y[key];\n  });\n}\n\nexport interface DistinctUntilKeyChangedSignature<T> {\n  (key: string): Observable<T>;\n  <K>(key: string, compare: (x: K, y: K) => boolean): Observable<T>;\n}","\nimport { Observable } from '../../Observable';\nimport { distinctUntilKeyChanged, DistinctUntilKeyChangedSignature } from '../../operator/distinctUntilKeyChanged';\n\nObservable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilKeyChanged: DistinctUntilKeyChangedSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\n\nexport interface DoSignature<T> {\n  (next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\n  (observer: PartialObserver<T>): Observable<T>;\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { _do, DoSignature } from '../../operator/do';\n\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: DoSignature<T>;\n    _do: DoSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} Returns an Observable that takes a source of Observables\n * and propagates the first observable exclusively until it completes before\n * subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): Observable<T> {\n  return this.lift(new SwitchFirstOperator<T>());\n}\n\nexport interface SwitchFirstSignature<T> {\n  (): T;\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { exhaust, SwitchFirstSignature } from '../../operator/exhaust';\n\nObservable.prototype.exhaust = exhaust;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaust: SwitchFirstSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                    resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n}\n\nexport interface SwitchFirstMapSignature<T> {\n  <R>(project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\n  <I, R>(project: (value: T, index: number) => ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { exhaustMap, SwitchFirstMapSignature } from '../../operator/exhaustMap';\n\nObservable.prototype.exhaustMap = exhaustMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaustMap: SwitchFirstMapSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: Scheduler = undefined): Observable<R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport interface ExpandSignature<T> {\n  (project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\n  <R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: Scheduler): Observable<R>;\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { expand, ExpandSignature } from '../../operator/expand';\n\nObservable.prototype.expand = expand;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    expand: ExpandSignature<T>;\n  }\n}","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): Observable<T> {\n  return this.lift(new ElementAtOperator(index, defaultValue));\n}\n\nexport interface ElementAtSignature<T> {\n  (index: number, defaultValue?: T): Observable<T>;\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { elementAt, ElementAtSignature } from '../../operator/elementAt';\n\nObservable.prototype.elementAt = elementAt;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    elementAt: ElementAtSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return this.lift(new FilterOperator(predicate, thisArg));\n}\n\nexport interface FilterSignature<T> {\n  (predicate: (value: T, index: number) => boolean, thisArg?: any): Observable<T>;\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n    this.predicate = predicate;\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { filter, FilterSignature } from '../../operator/filter';\n\nObservable.prototype.filter = filter;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    filter: FilterSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function _finally<T>(callback: () => void): Observable<T> {\n  return this.lift(new FinallyOperator(callback));\n}\n\nexport interface FinallySignature<T> {\n  (callback: () => void): Observable<T>;\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { _finally, FinallySignature } from '../../operator/finally';\n\nObservable.prototype.finally = _finally;\nObservable.prototype._finally = _finally;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    finally: FinallySignature<T>;\n    _finally: FinallySignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): Observable<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return this.lift(new FindValueOperator(predicate, this, false, thisArg));\n}\n\nexport interface FindSignature<T> {\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg?: any): Observable<T>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source._subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { find, FindSignature } from '../../operator/find';\n\nObservable.prototype.find = find;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    find: FindSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { FindValueOperator } from './find';\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): Observable<number> {\n  return this.lift(new FindValueOperator(predicate, this, true, thisArg));\n}\n\nexport interface FindIndexSignature<T> {\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg?: any): Observable<number>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { findIndex, FindIndexSignature } from '../../operator/findIndex';\n\nObservable.prototype.findIndex = findIndex;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    findIndex: FindIndexSignature<T>;\n  }\n}","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} an Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): Observable<T | R> {\n  return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\n\nexport interface FirstSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, resultSelector: void, defaultValue?: T): Observable<T>;\n  <R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean, resultSelector?: (value: T, index: number) => R,\n      defaultValue?: R): Observable<R>;\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    destination.next(value);\n    destination.complete();\n    this.hasCompleted = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { first, FirstSignature } from '../../operator/first';\n\nObservable.prototype.first = <any>first;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    first: FirstSignature<T>;\n  }\n}","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @param {function(value: T): K} keySelector a function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] a function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * a function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} an Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: (value: T) => R,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>> {\n  return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));\n}\n\n/* tslint:disable:max-line-length */\nexport interface GroupBySignature<T> {\n  <K>(keySelector: (value: T) => K): Observable<GroupedObservable<K, T>>;\n  <K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): Observable<GroupedObservable<K, T>>;\n  <K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>>;\n}\n/* tslint:enable:max-line-length */\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(public source: Observable<T>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: (value: T) => R,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source._subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: (value: T) => R,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      groups.set(key, group = new Subject<R>());\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed && !this.attemptedToUnsubscribe) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this._complete();\n  }\n\n  protected _error(err: any): void {\n    const group = this.group;\n    if (!group.closed) {\n      group.error(err);\n    }\n    this.parent.removeGroup(this.key);\n  }\n\n  protected _complete(): void {\n    const group = this.group;\n    if (!group.closed) {\n      group.complete();\n    }\n    this.parent.removeGroup(this.key);\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { groupBy, GroupBySignature } from '../../operator/groupBy';\n\nObservable.prototype.groupBy = <any>groupBy;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    groupBy: GroupBySignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} an empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): Observable<T> {\n  return this.lift(new IgnoreElementsOperator());\n};\n\nexport interface IgnoreElementsSignature<T> {\n  (): Observable<T>;\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { ignoreElements, IgnoreElementsSignature } from '../../operator/ignoreElements';\n\nObservable.prototype.ignoreElements = ignoreElements;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    ignoreElements: IgnoreElementsSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} an Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nexport function isEmpty(): Observable<boolean> {\n  return this.lift(new IsEmptyOperator());\n}\n\nexport interface IsEmptySignature<T> {\n  (): Observable<boolean>;\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source._subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { isEmpty, IsEmptySignature } from '../../operator/isEmpty';\n\nObservable.prototype.isEmpty = isEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    isEmpty: IsEmptySignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T> {\n  return this.lift(new AuditOperator(durationSelector));\n}\n\nexport interface AuditSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T>;\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { Observable } from '../../Observable';\nimport { audit, AuditSignature } from '../../operator/audit';\n\nObservable.prototype.audit = audit;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    audit: AuditSignature<T>;\n  }\n}","import { async } from '../scheduler/async';\nimport { Operator } from '../Operator';\nimport { Scheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new AuditTimeOperator(duration, scheduler));\n}\n\nexport interface AuditTimeSignature<T> {\n  (duration: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass AuditTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditTimeSubscriber<T> extends Subscriber<T> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n    }\n  }\n\n  clearThrottle(): void {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n}\n\nfunction dispatchNext<T>(subscriber: AuditTimeSubscriber<T>): void {\n  subscriber.clearThrottle();\n}\n","import { Observable } from '../../Observable';\nimport { auditTime, AuditTimeSignature } from '../../operator/auditTime';\n\nObservable.prototype.auditTime = auditTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    auditTime: AuditTimeSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - the condition any source emitted item has to satisfy.\n * @return {Observable} an Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R | void,\n                           defaultValue?: R): Observable<T | R> {\n  return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\n\nexport interface LastSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, resultSelector: void, defaultValue?: T): Observable<T>;\n  <R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean, resultSelector?: (value: T, index: number) => R,\n      defaultValue?: R): Observable<R>;\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { last, LastSignature } from '../../operator/last';\n\nObservable.prototype.last = <any>last;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    last: LastSignature<T>;\n  }\n}","import { Observable } from '../Observable';\n\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nexport function letProto<T, R>(func: (selector: Observable<T>) => Observable<R>): Observable<R> {\n  return func(this);\n}\n\nexport interface LetSignature<T> {\n  <R>(func: (selector: Observable<T>) => Observable<R>): Observable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { letProto, LetSignature } from '../../operator/let';\n\nObservable.prototype.let = letProto;\nObservable.prototype.letBind = letProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    let: LetSignature<T>;\n    letBind: LetSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n * @param {function} predicate a function for determining if an item meets a specified condition.\n * @param {any} [thisArg] optional object to use for `this` in the callback\n * @return {Observable} an Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): Observable<boolean> {\n  return this.lift(new EveryOperator(predicate, thisArg, this));\n}\n\nexport interface EverySignature<T> {\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg?: any): Observable<boolean>;\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source._subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { every, EverySignature } from '../../operator/every';\n\nObservable.prototype.every = every;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    every: EverySignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { map, MapSignature } from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: MapSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): Observable<R> {\n  return this.lift(new MapToOperator(value));\n}\n\nexport interface MapToSignature<T> {\n  <R>(value: R): Observable<R>;\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { mapTo, MapToSignature } from '../../operator/mapTo';\n\nObservable.prototype.mapTo = mapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mapTo: MapToSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): Observable<Notification<T>> {\n  return this.lift(new MaterializeOperator());\n}\n\nexport interface MaterializeSignature<T> {\n  (): Observable<Notification<T>>;\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source._subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { materialize, MaterializeSignature } from '../../operator/materialize';\n\nObservable.prototype.materialize = materialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    materialize: MaterializeSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T) => R, seed?: R): Observable<R> {\n  return this.lift(new ReduceOperator(accumulator, seed));\n}\n\nexport interface ReduceSignature<T> {\n  (accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\n  (accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): Observable<T[]>;\n  <R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): Observable<R>;\n}\n\nexport class ReduceOperator<T, R> implements Operator<T, R> {\n\n  constructor(private accumulator: (acc: R, value: T) => R, private seed?: R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ReduceSubscriber<T, R> extends Subscriber<T> {\n\n  acc: T | R;\n  hasSeed: boolean;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => R,\n              seed?: R) {\n    super(destination);\n    this.acc = seed;\n    this.accumulator = accumulator;\n    this.hasSeed = typeof seed !== 'undefined';\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue || (this.hasValue = this.hasSeed)) {\n      this._tryReduce(value);\n    } else {\n      this.acc = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryReduce(value: T) {\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.acc, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.acc = result;\n  }\n\n  protected _complete() {\n    if (this.hasValue || this.hasSeed) {\n      this.destination.next(this.acc);\n    }\n    this.destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ReduceOperator } from './reduce';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the largest number.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two\n * items.\n * @return {Observable} an Observable that emits item with the largest number.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): Observable<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n  return this.lift(new ReduceOperator(max));\n}\n\nexport interface MaxSignature<T> {\n  (comparer?: (x: T, y: T) => number): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { max, MaxSignature } from '../../operator/max';\n\nObservable.prototype.max = max;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    max: MaxSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { merge, MergeSignature } from '../../operator/merge';\n\nObservable.prototype.merge = merge;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    merge: MergeSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeAll, MergeAllSignature } from '../../operator/mergeAll';\n\nObservable.prototype.mergeAll = mergeAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeAll: MergeAllSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMap, MergeMapSignature } from '../../operator/mergeMap';\n\nObservable.prototype.mergeMap = <any>mergeMap;\nObservable.prototype.flatMap = <any>mergeMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMap: MergeMapSignature<T>;\n    mergeMap: MergeMapSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMapTo, MergeMapToSignature } from '../../operator/mergeMapTo';\n\nObservable.prototype.flatMapTo = <any>mergeMapTo;\nObservable.prototype.mergeMapTo = <any>mergeMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMapTo: MergeMapToSignature<T>;\n    mergeMapTo: MergeMapToSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * @param project\n * @param seed\n * @param concurrent\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(project: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  return this.lift(new MergeScanOperator(project, seed, concurrent));\n}\n\nexport interface MergeScanSignature<T> {\n  <R>(project: (acc: R, value: T) => Observable<R>, seed: R, concurrent?: number): Observable<R>;\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new MergeScanSubscriber(\n      subscriber, this.project, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.project)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { mergeScan, MergeScanSignature } from '../../operator/mergeScan';\n\nObservable.prototype.mergeScan = mergeScan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeScan: MergeScanSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { ReduceOperator } from './reduce';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the smallest number.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two items.\n * @return {Observable<R>} an Observable that emits item with the smallest number.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): Observable<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return this.lift(new ReduceOperator(min));\n}\n\nexport interface MinSignature<T> {\n  (comparer?: (x: T, y: T) => number): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { min, MinSignature } from '../../operator/min';\n\nObservable.prototype.min = min;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    min: MinSignature<T>;\n  }\n}","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return this.lift(new RefCountOperator<T>(this));\n  }\n}\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const { connectable } = this;\n    if (connectable) {\n      this.connectable = null;\n      const connection = (<any> connectable)._connection;\n      (<any> connectable)._refCount = 0;\n      (<any> connectable)._subject = null;\n      (<any> connectable)._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source._subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's dowstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\nexport class MulticastObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>,\n              private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { selector, source } = this;\n    const connectable = new ConnectableObservable(source, this.subjectFactory);\n    const subscription = selector(connectable).subscribe(subscriber);\n    subscription.add(connectable.connect());\n    return subscription;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { MulticastObservable } from '../observable/MulticastObservable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                             selector?: (source: Observable<T>) => Observable<T>): Observable<T> | ConnectableObservable<T> {\n  let subjectFactory: () => Subject<T>;\n  if (typeof subjectOrSubjectFactory === 'function') {\n    subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n  } else {\n    subjectFactory = function subjectFactory() {\n      return <Subject<T>>subjectOrSubjectFactory;\n    };\n  }\n\n  return !selector ?\n    new ConnectableObservable(this, subjectFactory) :\n    new MulticastObservable(this, subjectFactory, selector);\n}\n\nexport type factoryOrValue<T> = T | (() => T);\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n\nexport interface MulticastSignature<T> {\n  (subjectOrSubjectFactory: factoryOrValue<Subject<T>>): ConnectableObservable<T>;\n  (SubjectFactory: () => Subject<T>, selector?: selector<T>): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { multicast, MulticastSignature } from '../../operator/multicast';\n\nObservable.prototype.multicast = <any>multicast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    multicast: MulticastSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { observeOn, ObserveOnSignature } from '../../operator/observeOn';\n\nObservable.prototype.observeOn = observeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    observeOn: ObserveOnSignature<T>;\n  }\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNext, OnErrorResumeNextSignature } from '../../operator/onErrorResumeNext';\r\n\r\nObservable.prototype.onErrorResumeNext = onErrorResumeNext;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    onErrorResumeNext: OnErrorResumeNextSignature<T>;\r\n  }\r\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): Observable<[T, T]> {\n  return this.lift(new PairwiseOperator());\n}\n\nexport interface PairwiseSignature<T> {\n  (): Observable<[T, T]>;\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source._subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { pairwise, PairwiseSignature } from '../../operator/pairwise';\n\nObservable.prototype.pairwise = pairwise;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pairwise: PairwiseSignature<T>;\n  }\n}","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T) => boolean, thisArg?: any): [Observable<T>, Observable<T>] {\n  return [\n    filter.call(this, predicate),\n    filter.call(this, not(predicate, thisArg))\n  ];\n}\n\nexport interface PartitionSignature<T> {\n  (predicate: (value: T) => boolean, thisArg?: any): [Observable<T>, Observable<T>];\n}\n","\nimport { Observable } from '../../Observable';\nimport { partition, PartitionSignature } from '../../operator/partition';\n\nObservable.prototype.partition = partition;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    partition: PartitionSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { map } from './map';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} Returns a new Observable of property values from the\n * source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<R>(...properties: string[]): Observable<R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map.call(this, plucker(properties, length));\n}\n\nexport interface PluckSignature<T> {\n  <R>(...properties: string[]): Observable<R>;\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","\nimport { Observable } from '../../Observable';\nimport { pluck, PluckSignature } from '../../operator/pluck';\n\nObservable.prototype.pluck = pluck;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pluck: PluckSignature<T>;\n  }\n}","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T>(selector?: (source: Observable<T>) => Observable<T>): Observable<T> | ConnectableObservable<T> {\n  return selector ? multicast.call(this, () => new Subject<T>(), selector) :\n                    multicast.call(this, new Subject<T>());\n}\n\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n\nexport interface PublishSignature<T> {\n  (): ConnectableObservable<T>;\n  (selector: selector<T>): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { publish, PublishSignature } from '../../operator/publish';\n\nObservable.prototype.publish = <any>publish;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publish: PublishSignature<T>;\n  }\n}","import { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T): ConnectableObservable<T> {\n  return multicast.call(this, new BehaviorSubject<T>(value));\n}\n\nexport interface PublishBehaviorSignature<T> {\n  (value: T): ConnectableObservable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { publishBehavior, PublishBehaviorSignature } from '../../operator/publishBehavior';\n\nObservable.prototype.publishBehavior = publishBehavior;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishBehavior: PublishBehaviorSignature<T>;\n  }\n}","import { ReplaySubject } from '../ReplaySubject';\nimport { Scheduler } from '../Scheduler';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay<T>(bufferSize: number = Number.POSITIVE_INFINITY,\n                                 windowTime: number = Number.POSITIVE_INFINITY,\n                                 scheduler?: Scheduler): ConnectableObservable<T> {\n  return multicast.call(this, new ReplaySubject<T>(bufferSize, windowTime, scheduler));\n}\n\nexport interface PublishReplaySignature<T> {\n  (bufferSize?: number, windowTime?: number, scheduler?: Scheduler): ConnectableObservable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { publishReplay, PublishReplaySignature } from '../../operator/publishReplay';\n\nObservable.prototype.publishReplay = publishReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishReplay: PublishReplaySignature<T>;\n  }\n}","import { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\n\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast<T>(): ConnectableObservable<T> {\n  return multicast.call(this, new AsyncSubject<T>());\n}\n\nexport interface PublishLastSignature<T> {\n  (): ConnectableObservable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { publishLast, PublishLastSignature } from '../../operator/publishLast';\n\nObservable.prototype.publishLast = publishLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishLast: PublishLastSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { race, RaceSignature } from '../../operator/race';\n\nObservable.prototype.race = race;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    race: RaceSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { reduce, ReduceSignature } from '../../operator/reduce';\n\nObservable.prototype.reduce = reduce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    reduce: ReduceSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,\n * on a particular Scheduler.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {Scheduler} [scheduler] the Scheduler to emit the items on.\n * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else if (count < 0) {\n    return this.lift(new RepeatOperator(-1, this));\n  } else {\n    return this.lift(new RepeatOperator(count - 1, this));\n  }\n}\n\nexport interface RepeatSignature<T> {\n  (count?: number): Observable<T>;\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      this.unsubscribe();\n      this.isStopped = false;\n      this.closed = false;\n      source.subscribe(this);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { repeat, RepeatSignature } from '../../operator/repeat';\n\nObservable.prototype.repeat = repeat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeat: RepeatSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of a `complete`.\n * A `complete` will cause the emission of the Throwable that cause the complete to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `complete` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): Observable<T> {\n  return this.lift(new RepeatWhenOperator(notifier, this));\n}\n\nexport interface RepeatWhenSignature<T> {\n  (notifier: (notifications: Observable<any>) => Observable<any>): Observable<T>;\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  complete() {\n    if (!this.isStopped) {\n\n      let notifications = this.notifications;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        notifications = new Subject();\n        retries = tryCatch(this.notifier)(notifications);\n        if (retries === errorObject) {\n          return super.complete();\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.notifications = null;\n        this.retriesSubscription = null;\n      }\n\n      this.unsubscribe();\n      this.closed = false;\n\n      this.notifications = notifications;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      notifications.next();\n    }\n  }\n\n  protected _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this.unsubscribe();\n    this.isStopped = false;\n    this.closed = false;\n\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { repeatWhen, RepeatWhenSignature } from '../../operator/repeatWhen';\n\nObservable.prototype.repeatWhen = repeatWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeatWhen: RepeatWhenSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the\n * predicate returns true for that specific exception and retry count.\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} number of retry attempts before failing.\n * @return {Observable} the source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): Observable<T> {\n  return this.lift(new RetryOperator(count, this));\n}\n\nexport interface RetrySignature<T> {\n  (count?: number): Observable<T>;\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      this.unsubscribe();\n      this.isStopped = false;\n      this.closed = false;\n      source.subscribe(this);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { retry, RetrySignature } from '../../operator/retry';\n\nObservable.prototype.retry = retry;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retry: RetrySignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of an `error`.\n * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n  return this.lift(new RetryWhenOperator(notifier, this));\n}\n\nexport interface RetryWhenSignature<T> {\n  (notifier: (errors: Observable<any>) => Observable<any>): Observable<T>;\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this.unsubscribe();\n      this.closed = false;\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this.unsubscribe();\n    this.isStopped = false;\n    this.closed = false;\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { retryWhen, RetryWhenSignature } from '../../operator/retryWhen';\n\nObservable.prototype.retryWhen = retryWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retryWhen: RetryWhenSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new SampleOperator(notifier));\n}\n\nexport interface SampleSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SampleSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<any>, notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { sample, SampleSignature } from '../../operator/sample';\n\nObservable.prototype.sample = sample;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sample: SampleSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new SampleTimeOperator(period, scheduler));\n}\n\nexport interface SampleTimeSignature<T> {\n  (period: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  (<any>this).schedule(state, period);\n}\n","\nimport { Observable } from '../../Observable';\nimport { sampleTime, SampleTimeSignature } from '../../operator/sampleTime';\n\nObservable.prototype.sampleTime = sampleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sampleTime: SampleTimeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): Observable<R> {\n  return this.lift(new ScanOperator(accumulator, seed));\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private accumulatorSet: boolean = false;\n  private _seed: T | R;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.accumulatorSet = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, seed?: T | R) {\n    super(destination);\n    this.seed = seed;\n    this.accumulatorSet = typeof seed !== 'undefined';\n  }\n\n  protected _next(value: T): void {\n    if (!this.accumulatorSet) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { ReduceSignature } from '../../operator/reduce';\nimport { scan } from '../../operator/scan';\n\nObservable.prototype.scan = scan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    scan: ReduceSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nexport interface SequenceEqualSignature<T> {\n  (compareTo: Observable<T>, comparor?: (a: T, b: T) => boolean): Observable<boolean>;\n}\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo the observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): Observable<boolean> {\n  return this.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, T> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sequenceEqual, SequenceEqualSignature } from '../../operator/sequenceEqual';\n\nObservable.prototype.sequenceEqual = sequenceEqual;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sequenceEqual: SequenceEqualSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { Subject } from '../Subject';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nexport function share<T>(): Observable<T> {\n  return multicast.call(this, shareSubjectFactory).refCount();\n};\n\nexport interface ShareSignature<T> {\n  (): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { share, ShareSignature } from '../../operator/share';\n\nObservable.prototype.share = share;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    share: ShareSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} a predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T> {\n  return this.lift(new SingleOperator(predicate, this));\n}\n\nexport interface SingleSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const predicate = this.predicate;\n    this.index++;\n    if (predicate) {\n      this.tryNext(value);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    try {\n      const result = this.predicate(value, this.index, this.source);\n      if (result) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { single, SingleSignature } from '../../operator/single';\n\nObservable.prototype.single = single;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    single: SingleSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that skips `n` items emitted by an Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} the `n` of times, items emitted by source Observable should be skipped.\n * @return {Observable} an Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(total: number): Observable<T> {\n  return this.lift(new SkipOperator(total));\n}\n\nexport interface SkipSignature<T> {\n  (total: number): Observable<T>;\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { skip, SkipSignature } from '../../operator/skip';\n\nObservable.prototype.skip = skip;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skip: SkipSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new SkipUntilOperator(notifier));\n}\n\nexport interface SkipUntilSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { skipUntil, SkipUntilSignature } from '../../operator/skipUntil';\n\nObservable.prototype.skipUntil = skipUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipUntil: SkipUntilSignature<T>;\n  }\n}","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): Observable<T> {\n  return this.lift(new SkipWhileOperator(predicate));\n}\n\nexport interface SkipWhileSignature<T> {\n  (predicate: (value: T, index: number) => boolean): Observable<T>;\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { skipWhile, SkipWhileSignature } from '../../operator/skipWhile';\n\nObservable.prototype.skipWhile = skipWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipWhile: SkipWhileSignature<T>;\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concatStatic } from './concat';\nimport { isScheduler } from '../util/isScheduler';\n\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | Scheduler>): Observable<T> {\n  let scheduler = <Scheduler>array[array.length - 1];\n  if (isScheduler(scheduler)) {\n    array.pop();\n  } else {\n    scheduler = null;\n  }\n\n  const len = array.length;\n  if (len === 1) {\n    return concatStatic(new ScalarObservable<T>(<T>array[0], scheduler), <Observable<T>>this);\n  } else if (len > 1) {\n    return concatStatic(new ArrayObservable<T>(<T[]>array, scheduler), <Observable<T>>this);\n  } else {\n    return concatStatic(new EmptyObservable<T>(scheduler), <Observable<T>>this);\n  }\n}\n\nexport interface StartWithSignature<T> {\n  (v1: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: Scheduler): Observable<T>;\n  (...array: Array<T | Scheduler>): Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { startWith, StartWithSignature } from '../../operator/startWith';\n\nObservable.prototype.startWith = startWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    startWith: StartWithSignature<T>;\n  }\n}","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\nimport {  root  } from './root';\n\nexport class ImmediateDefinition {\n  setImmediate: (cb: () => void) => number;\n\n  clearImmediate: (handle: number) => void;\n\n  private identify(o: any): string {\n    return this.root.Object.prototype.toString.call(o);\n  }\n\n  tasksByHandle: any;\n\n  nextHandle: number;\n\n  currentlyRunningATask: boolean;\n\n  constructor(private root: any) {\n    if (root.setImmediate && typeof root.setImmediate === 'function') {\n      this.setImmediate = root.setImmediate.bind(root);\n      this.clearImmediate = root.clearImmediate.bind(root);\n    } else {\n      this.nextHandle = 1;\n      this.tasksByHandle = {};\n      this.currentlyRunningATask = false;\n\n      // Don't get fooled by e.g. browserify environments.\n      if (this.canUseProcessNextTick()) {\n        // For Node.js before 0.9\n        this.setImmediate = this.createProcessNextTickSetImmediate();\n      } else if (this.canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        this.setImmediate = this.createPostMessageSetImmediate();\n      } else if (this.canUseMessageChannel()) {\n        // For web workers, where supported\n        this.setImmediate = this.createMessageChannelSetImmediate();\n      } else if (this.canUseReadyStateChange()) {\n        // For IE 6–8\n        this.setImmediate = this.createReadyStateChangeSetImmediate();\n      } else {\n        // For older browsers\n        this.setImmediate = this.createSetTimeoutSetImmediate();\n      }\n\n      let ci = function clearImmediate(handle: any) {\n        delete (<any>clearImmediate).instance.tasksByHandle[handle];\n      };\n\n      (<any>ci).instance = this;\n\n      this.clearImmediate = ci;\n    }\n  }\n\n  canUseProcessNextTick() {\n    return this.identify(this.root.process) === '[object process]';\n  }\n\n  canUseMessageChannel() {\n    return Boolean(this.root.MessageChannel);\n  }\n\n  canUseReadyStateChange() {\n    const document = this.root.document;\n    return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n  }\n\n  canUsePostMessage() {\n    const root = this.root;\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `root.postMessage` means something completely different and can't be used for this purpose.\n    if (root.postMessage && !root.importScripts) {\n      let postMessageIsAsynchronous = true;\n      let oldOnMessage = root.onmessage;\n      root.onmessage = function() {\n        postMessageIsAsynchronous = false;\n      };\n      root.postMessage('', '*');\n      root.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n\n    return false;\n  }\n\n  // This function accepts the same arguments as setImmediate, but\n  // returns a function that requires no arguments.\n  partiallyApplied(handler: any, ...args: any[]) {\n    let fn = function result () {\n      const { handler, args } = <any>result;\n      if (typeof handler === 'function') {\n        handler.apply(undefined, args);\n      } else {\n        (new Function('' + handler))();\n      }\n    };\n\n    (<any>fn).handler = handler;\n    (<any>fn).args = args;\n\n    return fn;\n  }\n\n  addFromSetImmediateArguments(args: any[]) {\n    this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n    return this.nextHandle++;\n  }\n\n  createProcessNextTickSetImmediate() {\n    let fn = function setImmediate() {\n      const { instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createPostMessageSetImmediate() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    const root = this.root;\n\n    let messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n    let onGlobalMessage = function globalMessageHandler(event: any) {\n      const instance = (<any>globalMessageHandler).instance;\n      if (event.source === root &&\n        typeof event.data === 'string' &&\n        event.data.indexOf(messagePrefix) === 0) {\n        instance.runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n    (<any>onGlobalMessage).instance = this;\n\n    root.addEventListener('message', onGlobalMessage, false);\n\n    let fn = function setImmediate() {\n      const { messagePrefix, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.postMessage(messagePrefix + handle, '*');\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n    (<any>fn).messagePrefix = messagePrefix;\n\n    return fn;\n  }\n\n  runIfPresent(handle: any) {\n    // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (this.currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // 'too much recursion' error.\n      this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n    } else {\n      let task = this.tasksByHandle[handle];\n      if (task) {\n        this.currentlyRunningATask = true;\n        try {\n          task();\n        } finally {\n          this.clearImmediate(handle);\n          this.currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  createMessageChannelSetImmediate() {\n    let channel = new this.root.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      let handle = event.data;\n      this.runIfPresent(handle);\n    };\n\n    let fn = function setImmediate() {\n      const { channel, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      channel.port2.postMessage(handle);\n      return handle;\n    };\n\n    (<any>fn).channel = channel;\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createReadyStateChangeSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      const root = instance.root;\n      const doc = root.document;\n      const html = doc.documentElement;\n\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      let script = doc.createElement('script');\n      script.onreadystatechange = () => {\n        instance.runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n      html.appendChild(script);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createSetTimeoutSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n}\nexport const Immediate = new ImmediateDefinition(root);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    let action: AsyncAction<any> = actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, recycle as an async action.\n    if (delay !== null && delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { Scheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: Scheduler = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return source.subscribe(subscriber);\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: Scheduler = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified Scheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} the Scheduler to perform subscription actions on.\n * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: Scheduler, delay: number = 0): Observable<T> {\n  return new SubscribeOnObservable<T>(this, delay, scheduler);\n}\n\nexport interface SubscribeOnSignature<T> {\n  (scheduler: Scheduler, delay?: number): Observable<T>;\n}","\nimport { Observable } from '../../Observable';\nimport { subscribeOn, SubscribeOnSignature } from '../../operator/subscribeOn';\n\nObservable.prototype.subscribeOn = subscribeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    subscribeOn: SubscribeOnSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch<T>(): T {\n  return this.lift(new SwitchOperator());\n}\n\nexport interface SwitchSignature<T> {\n  (): T;\n}\n\nclass SwitchOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new SwitchSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.unsubscribeInner();\n    this.active++;\n    this.add(this.innerSubscription = subscribeToResult(this, value));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  private unsubscribeInner(): void {\n    this.active = this.active > 0 ? this.active - 1 : 0;\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n      this.remove(innerSubscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.unsubscribeInner();\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { _switch, SwitchSignature } from '../../operator/switch';\n\nObservable.prototype.switch = _switch;\nObservable.prototype._switch = _switch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switch: SwitchSignature<T>;\n    _switch: SwitchSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return this.lift(new SwitchMapOperator(project, resultSelector));\n}\n\nexport interface SwitchMapSignature<T> {\n  <R>(project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\n  <I, R>(project: (value: T, index: number) => ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { switchMap, SwitchMapSignature } from '../../operator/switchMap';\n\nObservable.prototype.switchMap = switchMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMap: SwitchMapSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` every time a value is emitted on the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): Observable<R> {\n  return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nexport interface SwitchMapToSignature<T> {\n  <R>(observable: ObservableInput<R>): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { switchMapTo, SwitchMapToSignature } from '../../operator/switchMapTo';\n\nObservable.prototype.switchMapTo = switchMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMapTo: SwitchMapToSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else {\n    return this.lift(new TakeOperator(count));\n  }\n}\n\nexport interface TakeSignature<T> {\n  (count: number): Observable<T>;\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    if (++this.count <= total) {\n      this.destination.next(value);\n      if (this.count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { take, TakeSignature } from '../../operator/take';\n\nObservable.prototype.take = take;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    take: TakeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else {\n    return this.lift(new TakeLastOperator(count));\n  }\n}\n\nexport interface TakeLastSignature<T> {\n  (count: number): Observable<T>;\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../../Observable';\nimport { takeLast, TakeLastSignature } from '../../operator/takeLast';\n\nObservable.prototype.takeLast = takeLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeLast: TakeLastSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new TakeUntilOperator(notifier));\n}\n\nexport interface TakeUntilSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { takeUntil, TakeUntilSignature } from '../../operator/takeUntil';\n\nObservable.prototype.takeUntil = takeUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeUntil: TakeUntilSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): Observable<T> {\n  return this.lift(new TakeWhileOperator(predicate));\n}\n\nexport interface TakeWhileSignature<T> {\n  (predicate: (value: T, index: number) => boolean): Observable<T>;\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { takeWhile, TakeWhileSignature } from '../../operator/takeWhile';\n\nObservable.prototype.takeWhile = takeWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeWhile: TakeWhileSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return this.lift(new ThrottleOperator(durationSelector));\n}\n\nexport interface ThrottleSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T>;\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.throttled) {\n      this.tryDurationSelector(value);\n    }\n  }\n\n  private tryDurationSelector(value: T): void {\n    let duration: SubscribableOrPromise<number> = null;\n    try {\n      duration = this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.emitAndThrottle(value, duration);\n  }\n\n  private emitAndThrottle(value: T, duration: SubscribableOrPromise<number>) {\n    this.add(this.throttled = subscribeToResult(this, duration));\n    this.destination.next(value);\n  }\n\n  protected _unsubscribe() {\n    const throttled = this.throttled;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._unsubscribe();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { throttle, ThrottleSignature } from '../../operator/throttle';\n\nObservable.prototype.throttle = throttle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttle: ThrottleSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new ThrottleTimeOperator(duration, scheduler));\n}\n\nexport interface ThrottleTimeSignature<T> {\n  (duration: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (!this.throttled) {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      this.destination.next(value);\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../../Observable';\nimport { throttleTime, ThrottleTimeSignature } from '../../operator/throttleTime';\n\nObservable.prototype.throttleTime = throttleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttleTime: ThrottleTimeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\n\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nexport function timeInterval<T>(scheduler: Scheduler = async): Observable<TimeInterval<T>> {\n  return this.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport interface TimeIntervalSignature<T> {\n  (scheduler?: Scheduler): Observable<TimeInterval<T>>;\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: Scheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source._subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: Scheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { timeInterval, TimeIntervalSignature } from '../../operator/timeInterval';\n\nObservable.prototype.timeInterval = timeInterval;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeInterval: TimeIntervalSignature<T>;\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * @param due\n * @param errorToSend\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           errorToSend: any = null,\n                           scheduler: Scheduler = async): Observable<T> {\n  let absoluteTimeout = isDate(due);\n  let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));\n}\n\nexport interface TimeoutSignature<T> {\n  (due: number | Date, errorToSend?: any, scheduler?: Scheduler): Observable<T>;\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private errorToSend: any,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n  private _previousIndex: number = 0;\n  get previousIndex(): number {\n    return this._previousIndex;\n  }\n  private _hasCompleted: boolean = false;\n  get hasCompleted(): boolean {\n    return this._hasCompleted;\n  }\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private errorToSend: any,\n              private scheduler: Scheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout(state: any): void {\n    const source = state.subscriber;\n    const currentIndex = state.index;\n    if (!source.hasCompleted && source.previousIndex === currentIndex) {\n      source.notifyTimeout();\n    }\n  }\n\n  private scheduleTimeout(): void {\n    let currentIndex = this.index;\n    this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });\n    this.index++;\n    this._previousIndex = currentIndex;\n  }\n\n  protected _next(value: T) {\n    this.destination.next(value);\n\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n  }\n\n  protected _error(err: any) {\n    this.destination.error(err);\n    this._hasCompleted = true;\n  }\n\n  protected _complete() {\n    this.destination.complete();\n    this._hasCompleted = true;\n  }\n\n  notifyTimeout() {\n    this.error(this.errorToSend || new Error('timeout'));\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { timeout, TimeoutSignature } from '../../operator/timeout';\n\nObservable.prototype.timeout = timeout;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeout: TimeoutSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Scheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: Scheduler = async): Observable<T | R> {\n  let absoluteTimeout = isDate(due);\n  let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\n\nexport interface TimeoutWithSignature<T> {\n  (due: number | Date, withObservable: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\n  <R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: Scheduler): Observable<T | R>;\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source._subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private timeoutSubscription: Subscription = undefined;\n  private index: number = 0;\n  private _previousIndex: number = 0;\n  get previousIndex(): number {\n    return this._previousIndex;\n  }\n  private _hasCompleted: boolean = false;\n  get hasCompleted(): boolean {\n    return this._hasCompleted;\n  }\n\n  constructor(public destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: Scheduler) {\n    super();\n    destination.add(this);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout(state: any): void {\n    const source = state.subscriber;\n    const currentIndex = state.index;\n    if (!source.hasCompleted && source.previousIndex === currentIndex) {\n      source.handleTimeout();\n    }\n  }\n\n  private scheduleTimeout(): void {\n    let currentIndex = this.index;\n    const timeoutState = { subscriber: this, index: currentIndex };\n    this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);\n    this.index++;\n    this._previousIndex = currentIndex;\n  }\n\n  protected _next(value: T) {\n    this.destination.next(value);\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n  }\n\n  protected _error(err: any) {\n    this.destination.error(err);\n    this._hasCompleted = true;\n  }\n\n  protected _complete() {\n    this.destination.complete();\n    this._hasCompleted = true;\n  }\n\n  handleTimeout(): void {\n    if (!this.closed) {\n      const withObservable = this.withObservable;\n      this.unsubscribe();\n      this.destination.add(this.timeoutSubscription = subscribeToResult(this, withObservable));\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { timeoutWith, TimeoutWithSignature } from '../../operator/timeoutWith';\n\nObservable.prototype.timeoutWith = timeoutWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeoutWith: TimeoutWithSignature<T>;\n  }\n}","import { Operator } from '../Operator';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { Scheduler } from '../Scheduler';\r\nimport { async } from '../scheduler/async';\r\n\r\n/**\r\n * @param scheduler\r\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\r\n * @method timestamp\r\n * @owner Observable\r\n */\r\nexport function timestamp<T>(scheduler: Scheduler = async): Observable<Timestamp<T>> {\r\n  return this.lift(new TimestampOperator(scheduler));\r\n}\r\n\r\nexport interface TimestampSignature<T> {\r\n  (scheduler?: Scheduler): Observable<Timestamp<T>>;\r\n}\r\n\r\nexport class Timestamp<T> {\r\n  constructor(public value: T, public timestamp: number) {\r\n  }\r\n};\r\n\r\nclass TimestampOperator<T> implements Operator<T, Timestamp<T>> {\r\n  constructor(private scheduler: Scheduler) {\r\n  }\r\n\r\n  call(observer: Subscriber<Timestamp<T>>, source: any): any {\r\n    return source._subscribe(new TimestampSubscriber(observer, this.scheduler));\r\n  }\r\n}\r\n\r\nclass TimestampSubscriber<T> extends Subscriber<T> {\r\n  constructor(destination: Subscriber<Timestamp<T>>, private scheduler: Scheduler) {\r\n    super(destination);\r\n  }\r\n\r\n  protected _next(value: T): void {\r\n    const now = this.scheduler.now();\r\n\r\n    this.destination.next(new Timestamp(value, now));\r\n  }\r\n}\r\n","import { Observable } from '../../Observable';\r\nimport { timestamp, TimestampSignature } from '../../operator/timestamp';\r\n\r\nObservable.prototype.timestamp = timestamp;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    timestamp: TimestampSignature<T>;\r\n  }\r\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nexport function toArray<T>(): Observable<T[]> {\n  return this.lift(new ToArrayOperator());\n}\n\nexport interface ToArraySignature<T> {\n  (): Observable<T[]>;\n}\n\nclass ToArrayOperator<T> implements Operator<T, T[]> {\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new ToArraySubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ToArraySubscriber<T> extends Subscriber<T> {\n\n  private array: T[] = [];\n\n  constructor(destination: Subscriber<T[]>) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    this.array.push(x);\n  }\n\n  protected _complete() {\n    this.destination.next(this.array);\n    this.destination.complete();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { toArray, ToArraySignature } from '../../operator/toArray';\n\nObservable.prototype.toArray = toArray;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toArray: ToArraySignature<T>;\n  }\n}","import { root } from '../util/root';\n\n/**\n * @param PromiseCtor\n * @return {Promise<T>}\n * @method toPromise\n * @owner Observable\n */\nexport function toPromise<T>(PromiseCtor?: typeof Promise): Promise<T> {\n  if (!PromiseCtor) {\n    if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n      PromiseCtor = root.Rx.config.Promise;\n    } else if (root.Promise) {\n      PromiseCtor = root.Promise;\n    }\n  }\n\n  if (!PromiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return new PromiseCtor((resolve, reject) => {\n    let value: any;\n    this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n  });\n}\n\nexport interface ToPromiseSignature<T> {\n  (): Promise<T>;\n  (PromiseCtor: typeof Promise): Promise<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { toPromise, ToPromiseSignature } from '../../operator/toPromise';\n\nObservable.prototype.toPromise = toPromise;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toPromise: ToPromiseSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowOperator<T>(windowBoundaries));\n}\n\nexport interface WindowSignature<T> {\n  (windowBoundaries: Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source._subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { window, WindowSignature } from '../../operator/window';\n\nObservable.prototype.window = window;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    window: WindowSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): Observable<Observable<T>> {\n  return this.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n}\n\nexport interface WindowCountSignature<T> {\n  (windowSize: number, startWindowEvery?: number): Observable<Observable<T>>;\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { windowCount, WindowCountSignature } from '../../operator/windowCount';\n\nObservable.prototype.windowCount = windowCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowCount: WindowCountSignature<T>;\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number = null,\n                              scheduler: Scheduler = async): Observable<Observable<T>> {\n  return this.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, scheduler));\n}\n\nexport interface WindowTimeSignature<T> {\n  (windowTimeSpan: number, windowCreationInterval?: number, scheduler?: Scheduler): Observable<Observable<T>>;\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: Scheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      let window = this.openWindow();\n      const closeState = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      let window = this.openWindow();\n      const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T) {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  openWindow(): Subject<T> {\n    const window = new Subject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  closeWindow(window: Subject<T>) {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\ninterface TimeSpanOnlyState<T> {\n  window: Subject<any>;\n  windowTimeSpan: number;\n  subscriber: WindowTimeSubscriber<T>;\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(state: TimeSpanOnlyState<T>) {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    window.complete();\n  }\n  state.window = subscriber.openWindow();\n  (<any>this).schedule(state, windowTimeSpan);\n}\n\ninterface Context<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface DispatchArg<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: Subject<T>;\n  context: Context<T>;\n}\n\nfunction dispatchWindowCreation<T>(state: CreationState<T>) {\n  let { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  let window = subscriber.openWindow();\n  let action = <Action<CreationState<T>>>this;\n  let context: Context<T> = { action, subscription: <any>null };\n  const timeSpanState: DispatchArg<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, window, context } = arg;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","\nimport { Observable } from '../../Observable';\nimport { windowTime, WindowTimeSignature } from '../../operator/windowTime';\n\nObservable.prototype.windowTime = windowTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowTime: WindowTimeSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nexport interface WindowToggleSignature<T> {\n  <O>(openings: Observable<O>, closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { windowToggle, WindowToggleSignature } from '../../operator/windowToggle';\n\nObservable.prototype.windowToggle = windowToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowToggle: WindowToggleSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowOperator<T>(closingSelector));\n}\n\nexport interface WindowWhenSignature<T> {\n  (closingSelector: () => Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { windowWhen, WindowWhenSignature } from '../../operator/windowWhen';\n\nObservable.prototype.windowWhen = windowWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowWhen: WindowWhenSignature<T>;\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  let project: any;\n  if (typeof args[args.length - 1] === 'function') {\n    project = args.pop();\n  }\n  const observables = <Observable<any>[]>args;\n  return this.lift(new WithLatestFromOperator(observables, project));\n}\n\n/* tslint:disable:max-line-length */\nexport interface WithLatestFromSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n  <R>(array: ObservableInput<any>[]): Observable<R>;\n  <R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","\nimport { Observable } from '../../Observable';\nimport { withLatestFrom, WithLatestFromSignature } from '../../operator/withLatestFrom';\n\nObservable.prototype.withLatestFrom = withLatestFrom;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    withLatestFrom: WithLatestFromSignature<T>;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { zipProto, ZipSignature } from '../../operator/zip';\n\nObservable.prototype.zip = zipProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zip: ZipSignature<T>;\n  }\n}","import { ZipOperator } from './zip';\nimport { Observable } from '../Observable';\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): Observable<R> {\n  return this.lift(new ZipOperator(project));\n}\n\nexport interface ZipAllSignature<T> {\n  <R>(project?: (...values: Array<T>) => R): Observable<R>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { zipAll, ZipAllSignature } from '../../operator/zipAll';\n\nObservable.prototype.zipAll = zipAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zipAll: ZipAllSignature<T>;\n  }\n}","import { Notification } from '../Notification';\n\nexport interface TestMessage {\n  frame: number;\n  notification: Notification<any>;\n}","export class SubscriptionLog {\n  constructor(public subscribedFrame: number,\n              public unsubscribedFrame: number = Number.POSITIVE_INFINITY) {\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { SubscriptionLog } from './SubscriptionLog';\n\nexport class SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n\n  logSubscribedFrame(): number {\n    this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n    return this.subscriptions.length - 1;\n  }\n\n  logUnsubscribedFrame(index: number) {\n    const subscriptionLogs = this.subscriptions;\n    const oldSubscriptionLog = subscriptionLogs[index];\n    subscriptionLogs[index] = new SubscriptionLog(\n      oldSubscriptionLog.subscribedFrame,\n      this.scheduler.now()\n    );\n  }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  for (let i = 0, len = baseCtors.length; i < len; i++) {\n    const baseCtor = baseCtors[i];\n    const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n    for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n      const name = propertyKeys[j];\n      derivedCtor.prototype[name] = baseCtor.prototype[name];\n    }\n  }\n}","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ColdObservable<T> extends Observable<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super(function (subscriber: Subscriber<any>) {\n      const observable: ColdObservable<T> = this;\n      const index = observable.logSubscribedFrame();\n      subscriber.add(new Subscription(() => {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscriber;\n    });\n    this.scheduler = scheduler;\n  }\n\n  scheduleMessages(subscriber: Subscriber<any>) {\n    const messagesLength = this.messages.length;\n    for (let i = 0; i < messagesLength; i++) {\n      const message = this.messages[i];\n      subscriber.add(\n        this.scheduler.schedule(({message, subscriber}) => { message.notification.observe(subscriber); },\n          message.frame,\n          {message, subscriber})\n      );\n    }\n  }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n","import { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    const subject: HotObservable<T> = this;\n    const index = subject.logSubscribedFrame();\n    subscriber.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    return super._subscribe(subscriber);\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n   /* tslint:enable */\n        subject.scheduler.schedule(\n          () => { message.notification.observe(subject); },\n          message.frame\n        );\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return !this.id ?\n      super.schedule(state, delay) : (\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      <VirtualAction<T>> this.add(\n        new VirtualAction<T>(this.scheduler, this.work))\n      ).schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { Subject } from '../Subject';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { Subscription } from '../Subscription';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\n\nconst defaultMaxFrame: number = 750;\n\ninterface FlushableTest {\n  ready: boolean;\n  actual?: any[];\n  expected?: any[];\n}\n\nexport type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;\nexport type subscriptionLogsToBeFn = (marbles: string | string[]) => void;\n\nexport class TestScheduler extends VirtualTimeScheduler {\n  private hotObservables: HotObservable<any>[] = [];\n  private coldObservables: ColdObservable<any>[] = [];\n  private flushTests: FlushableTest[] = [];\n\n  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {\n    super(VirtualAction, defaultMaxFrame);\n  }\n\n  createTime(marbles: string): number {\n    const indexOf: number = marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  }\n\n  createColdObservable<T>(marbles: string, values?: any, error?: any): Observable<T> {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const cold = new ColdObservable<T>(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  }\n\n  createHotObservable<T>(marbles: string, values?: any, error?: any): Subject<T> {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const subject = new HotObservable<T>(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  }\n\n  private materializeInnerObservable(observable: Observable<any>,\n                                     outerFrame: number): TestMessage[] {\n    const messages: TestMessage[] = [];\n    observable.subscribe((value) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createNext(value) });\n    }, (err) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createError(err) });\n    }, () => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createComplete() });\n    });\n    return messages;\n  }\n\n  expectObservable(observable: Observable<any>,\n                   unsubscriptionMarbles: string = null): ({ toBe: observableToBeFn }) {\n    const actual: TestMessage[] = [];\n    const flushTest: FlushableTest = { actual, ready: false };\n    const unsubscriptionFrame = TestScheduler\n      .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n    let subscription: Subscription;\n\n    this.schedule(() => {\n      subscription = observable.subscribe(x => {\n        let value = x;\n        // Support Observable-of-Observables\n        if (x instanceof Observable) {\n          value = this.materializeInnerObservable(value, this.frame);\n        }\n        actual.push({ frame: this.frame, notification: Notification.createNext(value) });\n      }, (err) => {\n        actual.push({ frame: this.frame, notification: Notification.createError(err) });\n      }, () => {\n        actual.push({ frame: this.frame, notification: Notification.createComplete() });\n      });\n    }, 0);\n\n    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n      this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n    }\n\n    this.flushTests.push(flushTest);\n\n    return {\n      toBe(marbles: string, values?: any, errorValue?: any) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n      }\n    };\n  }\n\n  expectSubscriptions(actualSubscriptionLogs: SubscriptionLog[]): ({ toBe: subscriptionLogsToBeFn }) {\n    const flushTest: FlushableTest = { actual: actualSubscriptionLogs, ready: false };\n    this.flushTests.push(flushTest);\n    return {\n      toBe(marbles: string | string[]) {\n        const marblesArray: string[] = (typeof marbles === 'string') ? [marbles] : marbles;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(marbles =>\n          TestScheduler.parseMarblesAsSubscriptions(marbles)\n        );\n      }\n    };\n  }\n\n  flush() {\n    const hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n\n    super.flush();\n    const readyFlushTests = this.flushTests.filter(test => test.ready);\n    while (readyFlushTests.length > 0) {\n      const test = readyFlushTests.shift();\n      this.assertDeepEqual(test.actual, test.expected);\n    }\n  }\n\n  static parseMarblesAsSubscriptions(marbles: string): SubscriptionLog {\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog(Number.POSITIVE_INFINITY);\n    }\n    const len = marbles.length;\n    let groupStart = -1;\n    let subscriptionFrame = Number.POSITIVE_INFINITY;\n    let unsubscriptionFrame = Number.POSITIVE_INFINITY;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '^':\n          if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n            'subscription marble diagram. Found instead \\'' + c + '\\'.');\n      }\n    }\n\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  }\n\n  static parseMarbles(marbles: string,\n                      values?: any,\n                      errorValue?: any,\n                      materializeInnerObservables: boolean = false): TestMessage[] {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' +\n        'unsubscription marker \"!\"');\n    }\n    const len = marbles.length;\n    const testMessages: TestMessage[] = [];\n    const subIndex = marbles.indexOf('^');\n    const frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n    const getValue = typeof values !== 'object' ?\n      (x: any) => x :\n      (x: any) => {\n        // Support Observable-of-Observables\n        if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n          return values[x].messages;\n        }\n        return values[x];\n      };\n    let groupStart = -1;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor + frameOffset;\n      let notification: Notification<any>;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '|':\n          notification = Notification.createComplete();\n          break;\n        case '^':\n          break;\n        case '#':\n          notification = Notification.createError(errorValue || 'error');\n          break;\n        default:\n          notification = Notification.createNext(getValue(c));\n          break;\n      }\n\n      if (notification) {\n        testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n      }\n    }\n    return testMessages;\n  }\n}\n","import {  root  } from './root';\n\nexport class RequestAnimationFrameDefinition {\n  cancelAnimationFrame: (handle: number) => void;\n  requestAnimationFrame: (cb: () => void) => number;\n  constructor(root: any) {\n    if (root.requestAnimationFrame) {\n      this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n    } else if (root.mozRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n    } else if (root.webkitRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n    } else if (root.msRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n    } else if (root.oRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n    } else {\n      this.cancelAnimationFrame = root.clearTimeout.bind(root);\n      this.requestAnimationFrame = function(cb) { return root.setTimeout(cb, 1000 / 60); };\n    }\n  }\n}\n\nexport const AnimationFrame = new RequestAnimationFrameDefinition(root);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    let action: AsyncAction<any> = actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrame } from '../util/AnimationFrame';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.requestAnimationFrame(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, recycle as an async action.\n    if (delay !== null && delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      AnimationFrame.cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//dom\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/cache';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctKey';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {MulticastObservable} from './observable/MulticastObservable';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\nexport {TimeInterval} from './operator/timeInterval';\nexport {Timestamp} from './operator/timestamp';\nexport {TestScheduler} from './testing/TestScheduler';\nexport {VirtualTimeScheduler} from './scheduler/VirtualTimeScheduler';\nexport {AjaxRequest, AjaxResponse, AjaxError, AjaxTimeoutError} from './observable/dom/AjaxObservable';\n\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { AsapScheduler } from './scheduler/AsapScheduler';\nimport { AsyncScheduler } from './scheduler/AsyncScheduler';\nimport { QueueScheduler } from './scheduler/QueueScheduler';\nimport { AnimationFrameScheduler } from './scheduler/AnimationFrameScheduler';\nimport { $$rxSubscriber as rxSubscriber } from './symbol/rxSubscriber';\nimport { $$iterator as iterator } from './symbol/iterator';\nimport { $$observable as observable } from './symbol/observable';\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nlet Scheduler = {\n  asap,\n  queue,\n  animationFrame,\n  async\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n"]}